{
	"id": "a3278a7c194540b6a6ce7dce86c683d8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol": {
				"content": "pragma solidity ^0.8.10;\n// SPDX-License-Identifier: MIT\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\n\ncontract Credit{\n    constructor(){}\n    uint256 public constant CToken = 0;\n\nmodifier OnlyCreditor{\n    _;\n}\nmodifier OnlyDebtor{\n    _;\n}\n    function Issue_Credit()public {}\n    function RedeemCredit()public {}\n    function IssuePayment()public {} // XDC-Credit must change fromXRC to XDC\n\n}"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n        @dev Handles the receipt of a single ERC1155 token type. This function is\n        called at the end of a `safeTransferFrom` after the balance has been updated.\n        To accept the transfer, this must return\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n        (i.e. 0xf23a6e61, or its own function selector).\n        @param operator The address which initiated the transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param id The ID of the token being transferred\n        @param value The amount of tokens being transferred\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n    */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\n        is called at the end of a `safeBatchTransferFrom` after the balances have\n        been updated. To accept the transfer(s), this must return\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n        (i.e. 0xbc197c81, or its own function selector).\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n    */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1092:1154  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1142:1146  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1141  _setURI */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1092:1154  constructor(string memory uri_) {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8009:8015  newuri */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8006  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_14)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_14)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_14\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_14:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_22\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_21)\ntag_22:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_23:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_24:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_25:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_26:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_27:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_28:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_29:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_30:\n    /* \"#utility.yul\":957:984   */\n  tag_46\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_28\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_48\n  tag_29\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1030:1118   */\ntag_47:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_31:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_50\n  tag_23\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_51\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_30\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_32:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_54\n  tag_29\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1434:1490   */\ntag_53:\n    /* \"#utility.yul\":1508:1537   */\n  tag_55\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_28\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1917   */\ntag_33:\n    /* \"#utility.yul\":1678:1679   */\n  0x00\n    /* \"#utility.yul\":1688:1801   */\ntag_57:\n    /* \"#utility.yul\":1702:1708   */\n  dup4\n    /* \"#utility.yul\":1699:1700   */\n  dup2\n    /* \"#utility.yul\":1696:1709   */\n  lt\n    /* \"#utility.yul\":1688:1801   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1787:1788   */\n  dup1\n    /* \"#utility.yul\":1782:1785   */\n  dup3\n    /* \"#utility.yul\":1778:1789   */\n  add\n    /* \"#utility.yul\":1772:1790   */\n  mload\n    /* \"#utility.yul\":1768:1769   */\n  dup2\n    /* \"#utility.yul\":1763:1766   */\n  dup5\n    /* \"#utility.yul\":1759:1770   */\n  add\n    /* \"#utility.yul\":1752:1791   */\n  mstore\n    /* \"#utility.yul\":1724:1726   */\n  0x20\n    /* \"#utility.yul\":1721:1722   */\n  dup2\n    /* \"#utility.yul\":1717:1727   */\n  add\n    /* \"#utility.yul\":1712:1727   */\n  swap1\n  pop\n    /* \"#utility.yul\":1688:1801   */\n  jump(tag_57)\ntag_59:\n    /* \"#utility.yul\":1819:1825   */\n  dup4\n    /* \"#utility.yul\":1816:1817   */\n  dup2\n    /* \"#utility.yul\":1813:1826   */\n  gt\n    /* \"#utility.yul\":1810:1911   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1899:1900   */\n  0x00\n    /* \"#utility.yul\":1890:1896   */\n  dup5\n    /* \"#utility.yul\":1885:1888   */\n  dup5\n    /* \"#utility.yul\":1881:1897   */\n  add\n    /* \"#utility.yul\":1874:1901   */\n  mstore\n    /* \"#utility.yul\":1810:1911   */\ntag_60:\n    /* \"#utility.yul\":1659:1917   */\n  pop\n    /* \"#utility.yul\":1610:1917   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1923:2344   */\ntag_34:\n    /* \"#utility.yul\":2012:2017   */\n  0x00\n    /* \"#utility.yul\":2037:2103   */\n  tag_62\n    /* \"#utility.yul\":2053:2102   */\n  tag_63\n    /* \"#utility.yul\":2095:2101   */\n  dup5\n    /* \"#utility.yul\":2053:2102   */\n  tag_32\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2037:2103   */\n  tag_31\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2028:2103   */\n  swap1\n  pop\n    /* \"#utility.yul\":2126:2132   */\n  dup3\n    /* \"#utility.yul\":2119:2124   */\n  dup2\n    /* \"#utility.yul\":2112:2133   */\n  mstore\n    /* \"#utility.yul\":2164:2168   */\n  0x20\n    /* \"#utility.yul\":2157:2162   */\n  dup2\n    /* \"#utility.yul\":2153:2169   */\n  add\n    /* \"#utility.yul\":2202:2205   */\n  dup5\n    /* \"#utility.yul\":2193:2199   */\n  dup5\n    /* \"#utility.yul\":2188:2191   */\n  dup5\n    /* \"#utility.yul\":2184:2200   */\n  add\n    /* \"#utility.yul\":2181:2206   */\n  gt\n    /* \"#utility.yul\":2178:2290   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2209:2288   */\n  tag_65\n  tag_27\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2178:2290   */\ntag_64:\n    /* \"#utility.yul\":2299:2338   */\n  tag_66\n    /* \"#utility.yul\":2331:2337   */\n  dup5\n    /* \"#utility.yul\":2326:2329   */\n  dup3\n    /* \"#utility.yul\":2321:2324   */\n  dup6\n    /* \"#utility.yul\":2299:2338   */\n  tag_33\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2018:2344   */\n  pop\n    /* \"#utility.yul\":1923:2344   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2719   */\ntag_35:\n    /* \"#utility.yul\":2431:2436   */\n  0x00\n    /* \"#utility.yul\":2480:2483   */\n  dup3\n    /* \"#utility.yul\":2473:2477   */\n  0x1f\n    /* \"#utility.yul\":2465:2471   */\n  dup4\n    /* \"#utility.yul\":2461:2478   */\n  add\n    /* \"#utility.yul\":2457:2484   */\n  slt\n    /* \"#utility.yul\":2447:2569   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2488:2567   */\n  tag_69\n  tag_26\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2447:2569   */\ntag_68:\n    /* \"#utility.yul\":2598:2604   */\n  dup2\n    /* \"#utility.yul\":2592:2605   */\n  mload\n    /* \"#utility.yul\":2623:2713   */\n  tag_70\n    /* \"#utility.yul\":2709:2712   */\n  dup5\n    /* \"#utility.yul\":2701:2707   */\n  dup3\n    /* \"#utility.yul\":2694:2698   */\n  0x20\n    /* \"#utility.yul\":2686:2692   */\n  dup7\n    /* \"#utility.yul\":2682:2699   */\n  add\n    /* \"#utility.yul\":2623:2713   */\n  tag_34\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2614:2713   */\n  swap2\n  pop\n    /* \"#utility.yul\":2437:2719   */\n  pop\n    /* \"#utility.yul\":2364:2719   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2725:3249   */\ntag_3:\n    /* \"#utility.yul\":2805:2811   */\n  0x00\n    /* \"#utility.yul\":2854:2856   */\n  0x20\n    /* \"#utility.yul\":2842:2851   */\n  dup3\n    /* \"#utility.yul\":2833:2840   */\n  dup5\n    /* \"#utility.yul\":2829:2852   */\n  sub\n    /* \"#utility.yul\":2825:2857   */\n  slt\n    /* \"#utility.yul\":2822:2941   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2860:2939   */\n  tag_73\n  tag_24\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2822:2941   */\ntag_72:\n    /* \"#utility.yul\":3001:3002   */\n  0x00\n    /* \"#utility.yul\":2990:2999   */\n  dup3\n    /* \"#utility.yul\":2986:3003   */\n  add\n    /* \"#utility.yul\":2980:3004   */\n  mload\n    /* \"#utility.yul\":3031:3049   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3023:3029   */\n  dup2\n    /* \"#utility.yul\":3020:3050   */\n  gt\n    /* \"#utility.yul\":3017:3134   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3053:3132   */\n  tag_75\n  tag_25\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3017:3134   */\ntag_74:\n    /* \"#utility.yul\":3158:3232   */\n  tag_76\n    /* \"#utility.yul\":3224:3231   */\n  dup5\n    /* \"#utility.yul\":3215:3221   */\n  dup3\n    /* \"#utility.yul\":3204:3213   */\n  dup6\n    /* \"#utility.yul\":3200:3222   */\n  add\n    /* \"#utility.yul\":3158:3232   */\n  tag_35\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3148:3232   */\n  swap2\n  pop\n    /* \"#utility.yul\":2951:3242   */\n  pop\n    /* \"#utility.yul\":2725:3249   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3255:3435   */\ntag_36:\n    /* \"#utility.yul\":3303:3380   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3300:3301   */\n  0x00\n    /* \"#utility.yul\":3293:3381   */\n  mstore\n    /* \"#utility.yul\":3400:3404   */\n  0x22\n    /* \"#utility.yul\":3397:3398   */\n  0x04\n    /* \"#utility.yul\":3390:3405   */\n  mstore\n    /* \"#utility.yul\":3424:3428   */\n  0x24\n    /* \"#utility.yul\":3421:3422   */\n  0x00\n    /* \"#utility.yul\":3414:3429   */\n  revert\n    /* \"#utility.yul\":3441:3761   */\ntag_13:\n    /* \"#utility.yul\":3485:3491   */\n  0x00\n    /* \"#utility.yul\":3522:3523   */\n  0x02\n    /* \"#utility.yul\":3516:3520   */\n  dup3\n    /* \"#utility.yul\":3512:3524   */\n  div\n    /* \"#utility.yul\":3502:3524   */\n  swap1\n  pop\n    /* \"#utility.yul\":3569:3570   */\n  0x01\n    /* \"#utility.yul\":3563:3567   */\n  dup3\n    /* \"#utility.yul\":3559:3571   */\n  and\n    /* \"#utility.yul\":3590:3608   */\n  dup1\n    /* \"#utility.yul\":3580:3661   */\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3646:3650   */\n  0x7f\n    /* \"#utility.yul\":3638:3644   */\n  dup3\n    /* \"#utility.yul\":3634:3651   */\n  and\n    /* \"#utility.yul\":3624:3651   */\n  swap2\n  pop\n    /* \"#utility.yul\":3580:3661   */\ntag_79:\n    /* \"#utility.yul\":3708:3710   */\n  0x20\n    /* \"#utility.yul\":3700:3706   */\n  dup3\n    /* \"#utility.yul\":3697:3711   */\n  lt\n    /* \"#utility.yul\":3677:3695   */\n  dup2\n    /* \"#utility.yul\":3674:3712   */\n  sub\n    /* \"#utility.yul\":3671:3755   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3727:3745   */\n  tag_81\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3671:3755   */\ntag_80:\n    /* \"#utility.yul\":3492:3761   */\n  pop\n    /* \"#utility.yul\":3441:3761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2256:2263  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2302:2303  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2283:2304  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2283:2290  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2283:2304  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2378  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2382  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2379:2381  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2382  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2391  _balances[id][account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2390  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2391  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2362:2391  return _balances[id][account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1323:1327  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1399  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1399  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1369  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1399  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_58\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1467  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1415:1467  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1415:1426  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1415:1467  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1519  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1483:1519  super.supportsInterface(interfaceId) */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1507:1518  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1483:1506  super.supportsInterface */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1483:1519  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1519  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1339:1519  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1985:1998  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2017:2021  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2010:2021  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4278:4290  _msgSender() */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4278:4288  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4278:4290  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4274  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4330  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_72\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4311:4315  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4317:4329  _msgSender() */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4317:4327  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4317:4329  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4310  isApprovedForAll */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4330  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4439:4443  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4445:4447  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4449:4452  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4454:4461  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4463:4467  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4438  _safeBatchTransferFrom */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2706:2722  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2768  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2775  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2754  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2761  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2775  accounts.length == ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2862  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2887  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2894  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2865:2895  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n    tag_84:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2895  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2911:2920  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2938  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2945  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2927  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2945  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3003  accounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3004:3005  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3006  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n    tag_92:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3011  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3012:3013  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3014  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_95\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n    tag_95:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:2994  balanceOf */\n      tag_15\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2979  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2981  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2982  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_97\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n    tag_97:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:3015  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2947:2950  ++i */\n      dup1\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3043:3056  batchBalances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3036:3056  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3244:3256  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3244:3254  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3244:3256  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3266  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3268:3276  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3243  _setApprovalForAll */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3450:3454  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3491  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3492:3499  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3510  _operatorApprovals[account][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3501:3509  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3510  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3466:3510  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3792:3804  _msgSender() */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3792:3802  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3792:3804  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3788  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3844  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_108\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3825:3829  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3831:3843  _msgSender() */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3831:3841  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3831:3843  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3824  isApprovedForAll */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3844  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3939:3943  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3945:3947  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3949:3951  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3953:3959  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3961:3965  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3938  _safeTransferFrom */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6295  amounts */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6302  amounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6277  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6284  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6302  ids.length == amounts.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6379:6380  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6365:6381  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6365:6367  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6365:6381  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6357:6423  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6434:6450  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6465  _msgSender() */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6463  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6465  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6434:6465  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6476:6536  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6497:6505  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6507:6511  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6513:6515  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6517:6520  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6522:6529  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6531:6535  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6476:6496  _beforeTokenTransfer */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6476:6536  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6552:6561  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6574  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6581  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6568  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6581  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6612  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6618  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6619:6620  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6621  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_132\n      tag_94\n      jump\t// in\n    tag_132:\n    tag_131:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6621  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6635:6649  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6659  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6660:6661  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_133\n      jumpi\n      tag_134\n      tag_94\n      jump\t// in\n    tag_134:\n    tag_133:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6635:6662  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6677:6696  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6708  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6712  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6709:6711  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6712  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6718  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6713:6717  from */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6718  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6677:6718  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:6761  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6740:6751  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6740:6761  fromBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6808  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6886:6892  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6883  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6863  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6860:6862  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6863  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6869  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6868  from */\n      dup13\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6869  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6892  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6941:6947  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6929  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6933  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6930:6932  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6933  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6937  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6934:6936  to */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6937  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6588:6958  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6583:6586  ++i */\n      dup1\n      tag_140\n      swap1\n      tag_100\n      jump\t// in\n    tag_140:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7003:7005  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6997:7001  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6987:6995  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7007:7010  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7012:7019  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7067:7075  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7077:7081  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7083:7085  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7090  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7092:7099  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7101:7105  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7066  _doSafeBatchTransferAcceptanceCheck */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6256:7113  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12224:12232  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12220  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12326:12334  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12306  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12307:12312  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12323  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12314:12322  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12323  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12334  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12371:12379  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12364:12369  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12381:12389  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5120:5121  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5106:5122  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5106:5108  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5106:5122  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5098:5164  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_124\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5175:5191  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5194:5206  _msgSender() */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5194:5204  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5194:5206  _msgSender() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5175:5206  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5238:5246  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5248:5252  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5256  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5276:5278  id */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5275  _asSingletonArray */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5306  _asSingletonArray(amount) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5299:5305  amount */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5298  _asSingletonArray */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5306  _asSingletonArray(amount) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5308:5312  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5237  _beforeTokenTransfer */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5324:5343  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5355  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5359  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5356:5358  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5359  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5365  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5360:5364  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5365  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5324:5365  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5398:5404  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5383:5394  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5383:5404  fromBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5375:5451  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_137\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5521:5527  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5518  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5498  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5495:5497  id */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5498  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5504  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5499:5503  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5504  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5527  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5568:5574  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5556  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5560  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5557:5559  id */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5560  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5564  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5561:5563  to */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5564  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_160\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_160:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5621:5623  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5615:5619  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5605:5613  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5625:5627  id */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5629:5635  amount */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      tag_161\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5678:5686  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5688:5692  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5694:5696  to */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5698:5700  id */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5702:5708  amount */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5710:5714  data */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5677  _doSafeTransferAcceptanceCheck */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5088:5722  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13331:13545  function _beforeTokenTransfer(... */\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14282:15074  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14529  to.isContract() */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14516  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14527  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14529  to.isContract() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14510:15068  if (to.isContract()) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14566:14568  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14592  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14593:14601  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14603:14607  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14609:14612  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14614:14621  amounts */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14623:14627  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_172\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      0x01\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_175\n      jumpi\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n      dup1\n      0x08c379a0\n      sub\n      tag_178\n      jumpi\n      pop\n      tag_181\n      tag_182\n      jump\t// in\n    tag_181:\n      dup1\n      tag_183\n      jumpi\n      pop\n      jump(tag_177)\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14934:14940  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14927:14941  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_178:\n      pop\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14719:14767  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14707:14767  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14707:14715  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14707:14767  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14703:14860  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14791:14841  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14703:14860  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14629:14874  returns (... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14510:15068  if (to.isContract()) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14282:15074  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15146:15162  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15196  uint256[] memory array */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15213:15214  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_192\n      jumpi\n      tag_193\n      tag_86\n      jump\t// in\n    tag_193:\n    tag_192:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_194\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_194:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15215  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15243  element */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15230  array */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15231:15232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15233  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_195\n      jumpi\n      tag_196\n      tag_94\n      jump\t// in\n    tag_196:\n    tag_195:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15243  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15261:15266  array */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15254:15266  return array */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13551:14276  function _doSafeTransferAcceptanceCheck(... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13773  to.isContract() */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13760  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13771  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13773  to.isContract() */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13754:14270  if (to.isContract()) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13810:13812  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13831  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13832:13840  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13842:13846  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13848:13850  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13852:13858  amount */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13860:13864  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_202\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_203\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_203:\n      0x01\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_204\n      jumpi\n      tag_208\n      tag_180\n      jump\t// in\n    tag_208:\n      dup1\n      0x08c379a0\n      sub\n      tag_207\n      jumpi\n      pop\n      tag_209\n      tag_182\n      jump\t// in\n    tag_209:\n      dup1\n      tag_210\n      jumpi\n      pop\n      jump(tag_206)\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14136:14142  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14129:14143  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_207:\n      pop\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14183:14245  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_186\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13926:13969  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13914:13969  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13914:13922  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13914:13969  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13910:14062  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13993:14043  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_190\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13910:14062  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13866:14076  returns (bytes4 response) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13754:14270  if (to.isContract()) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13551:14276  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":771:1148  function isContract(address account) internal view returns (bool) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":831:835  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1034:1046  uint256 size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1099:1106  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1079:1107  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1140:1141  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1133:1137  size */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1126:1141  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":771:1148  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_217:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_218:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_219:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_220:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_221:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_296\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_220\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_222:\n        /* \"#utility.yul\":641:665   */\n      tag_298\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_221\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_299\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_299:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_223:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_301\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_222\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_224:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_225:\n        /* \"#utility.yul\":997:1021   */\n      tag_304\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_224\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_305:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_226:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_307\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_225\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_14:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_310\n      tag_218\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":1290:1409   */\n    tag_309:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_311\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_223\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_312\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_226\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_227:\n        /* \"#utility.yul\":1764:1788   */\n      tag_314\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_224\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_17:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_316\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_227\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_228:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_229:\n        /* \"#utility.yul\":2256:2279   */\n      tag_319\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_228\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_320:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_230:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_322\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_229\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_20:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_325\n      tag_218\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":2528:2647   */\n    tag_324:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_326\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_230\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_231:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_232:\n        /* \"#utility.yul\":2963:2984   */\n      tag_329\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_231\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_23:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_331\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_232\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_26:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_334\n      tag_218\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":3289:3408   */\n    tag_333:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_335\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_226\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3647   */\n    tag_233:\n        /* \"#utility.yul\":3600:3606   */\n      0x00\n        /* \"#utility.yul\":3634:3639   */\n      dup2\n        /* \"#utility.yul\":3628:3640   */\n      mload\n        /* \"#utility.yul\":3618:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3822   */\n    tag_234:\n        /* \"#utility.yul\":3737:3748   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      dup3\n        /* \"#utility.yul\":3766:3769   */\n      dup3\n        /* \"#utility.yul\":3759:3778   */\n      mstore\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3806:3809   */\n      dup3\n        /* \"#utility.yul\":3802:3816   */\n      add\n        /* \"#utility.yul\":3787:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:3822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:4135   */\n    tag_235:\n        /* \"#utility.yul\":3896:3897   */\n      0x00\n        /* \"#utility.yul\":3906:4019   */\n    tag_339:\n        /* \"#utility.yul\":3920:3926   */\n      dup4\n        /* \"#utility.yul\":3917:3918   */\n      dup2\n        /* \"#utility.yul\":3914:3927   */\n      lt\n        /* \"#utility.yul\":3906:4019   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":4005:4006   */\n      dup1\n        /* \"#utility.yul\":4000:4003   */\n      dup3\n        /* \"#utility.yul\":3996:4007   */\n      add\n        /* \"#utility.yul\":3990:4008   */\n      mload\n        /* \"#utility.yul\":3986:3987   */\n      dup2\n        /* \"#utility.yul\":3981:3984   */\n      dup5\n        /* \"#utility.yul\":3977:3988   */\n      add\n        /* \"#utility.yul\":3970:4009   */\n      mstore\n        /* \"#utility.yul\":3942:3944   */\n      0x20\n        /* \"#utility.yul\":3939:3940   */\n      dup2\n        /* \"#utility.yul\":3935:3945   */\n      add\n        /* \"#utility.yul\":3930:3945   */\n      swap1\n      pop\n        /* \"#utility.yul\":3906:4019   */\n      jump(tag_339)\n    tag_341:\n        /* \"#utility.yul\":4037:4043   */\n      dup4\n        /* \"#utility.yul\":4034:4035   */\n      dup2\n        /* \"#utility.yul\":4031:4044   */\n      gt\n        /* \"#utility.yul\":4028:4129   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":4117:4118   */\n      0x00\n        /* \"#utility.yul\":4108:4114   */\n      dup5\n        /* \"#utility.yul\":4103:4106   */\n      dup5\n        /* \"#utility.yul\":4099:4115   */\n      add\n        /* \"#utility.yul\":4092:4119   */\n      mstore\n        /* \"#utility.yul\":4028:4129   */\n    tag_342:\n        /* \"#utility.yul\":3877:4135   */\n      pop\n        /* \"#utility.yul\":3828:4135   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4141:4243   */\n    tag_236:\n        /* \"#utility.yul\":4182:4188   */\n      0x00\n        /* \"#utility.yul\":4233:4235   */\n      0x1f\n        /* \"#utility.yul\":4229:4236   */\n      not\n        /* \"#utility.yul\":4224:4226   */\n      0x1f\n        /* \"#utility.yul\":4217:4222   */\n      dup4\n        /* \"#utility.yul\":4213:4227   */\n      add\n        /* \"#utility.yul\":4209:4237   */\n      and\n        /* \"#utility.yul\":4199:4237   */\n      swap1\n      pop\n        /* \"#utility.yul\":4141:4243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4249:4613   */\n    tag_237:\n        /* \"#utility.yul\":4337:4340   */\n      0x00\n        /* \"#utility.yul\":4365:4404   */\n      tag_345\n        /* \"#utility.yul\":4398:4403   */\n      dup3\n        /* \"#utility.yul\":4365:4404   */\n      tag_233\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4420:4491   */\n      tag_346\n        /* \"#utility.yul\":4484:4490   */\n      dup2\n        /* \"#utility.yul\":4479:4482   */\n      dup6\n        /* \"#utility.yul\":4420:4491   */\n      tag_234\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":4413:4491   */\n      swap4\n      pop\n        /* \"#utility.yul\":4500:4552   */\n      tag_347\n        /* \"#utility.yul\":4545:4551   */\n      dup2\n        /* \"#utility.yul\":4540:4543   */\n      dup6\n        /* \"#utility.yul\":4533:4537   */\n      0x20\n        /* \"#utility.yul\":4526:4531   */\n      dup7\n        /* \"#utility.yul\":4522:4538   */\n      add\n        /* \"#utility.yul\":4500:4552   */\n      tag_235\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":4577:4606   */\n      tag_348\n        /* \"#utility.yul\":4599:4605   */\n      dup2\n        /* \"#utility.yul\":4577:4606   */\n      tag_236\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4572:4575   */\n      dup5\n        /* \"#utility.yul\":4568:4607   */\n      add\n        /* \"#utility.yul\":4561:4607   */\n      swap2\n      pop\n        /* \"#utility.yul\":4341:4613   */\n      pop\n        /* \"#utility.yul\":4249:4613   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4619:4932   */\n    tag_29:\n        /* \"#utility.yul\":4732:4736   */\n      0x00\n        /* \"#utility.yul\":4770:4772   */\n      0x20\n        /* \"#utility.yul\":4759:4768   */\n      dup3\n        /* \"#utility.yul\":4755:4773   */\n      add\n        /* \"#utility.yul\":4747:4773   */\n      swap1\n      pop\n        /* \"#utility.yul\":4819:4828   */\n      dup2\n        /* \"#utility.yul\":4813:4817   */\n      dup2\n        /* \"#utility.yul\":4809:4829   */\n      sub\n        /* \"#utility.yul\":4805:4806   */\n      0x00\n        /* \"#utility.yul\":4794:4803   */\n      dup4\n        /* \"#utility.yul\":4790:4807   */\n      add\n        /* \"#utility.yul\":4783:4830   */\n      mstore\n        /* \"#utility.yul\":4847:4925   */\n      tag_350\n        /* \"#utility.yul\":4920:4924   */\n      dup2\n        /* \"#utility.yul\":4911:4917   */\n      dup5\n        /* \"#utility.yul\":4847:4925   */\n      tag_237\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4839:4925   */\n      swap1\n      pop\n        /* \"#utility.yul\":4619:4932   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4938:5055   */\n    tag_238:\n        /* \"#utility.yul\":5047:5048   */\n      0x00\n        /* \"#utility.yul\":5044:5045   */\n      dup1\n        /* \"#utility.yul\":5037:5049   */\n      revert\n        /* \"#utility.yul\":5061:5241   */\n    tag_86:\n        /* \"#utility.yul\":5109:5186   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5106:5107   */\n      0x00\n        /* \"#utility.yul\":5099:5187   */\n      mstore\n        /* \"#utility.yul\":5206:5210   */\n      0x41\n        /* \"#utility.yul\":5203:5204   */\n      0x04\n        /* \"#utility.yul\":5196:5211   */\n      mstore\n        /* \"#utility.yul\":5230:5234   */\n      0x24\n        /* \"#utility.yul\":5227:5228   */\n      0x00\n        /* \"#utility.yul\":5220:5235   */\n      revert\n        /* \"#utility.yul\":5247:5528   */\n    tag_239:\n        /* \"#utility.yul\":5330:5357   */\n      tag_354\n        /* \"#utility.yul\":5352:5356   */\n      dup3\n        /* \"#utility.yul\":5330:5357   */\n      tag_236\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":5322:5328   */\n      dup2\n        /* \"#utility.yul\":5318:5358   */\n      add\n        /* \"#utility.yul\":5460:5466   */\n      dup2\n        /* \"#utility.yul\":5448:5458   */\n      dup2\n        /* \"#utility.yul\":5445:5467   */\n      lt\n        /* \"#utility.yul\":5424:5442   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5412:5422   */\n      dup3\n        /* \"#utility.yul\":5409:5443   */\n      gt\n        /* \"#utility.yul\":5406:5468   */\n      or\n        /* \"#utility.yul\":5403:5491   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":5471:5489   */\n      tag_356\n      tag_86\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":5403:5491   */\n    tag_355:\n        /* \"#utility.yul\":5511:5521   */\n      dup1\n        /* \"#utility.yul\":5507:5509   */\n      0x40\n        /* \"#utility.yul\":5500:5522   */\n      mstore\n        /* \"#utility.yul\":5290:5528   */\n      pop\n        /* \"#utility.yul\":5247:5528   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5534:5663   */\n    tag_240:\n        /* \"#utility.yul\":5568:5574   */\n      0x00\n        /* \"#utility.yul\":5595:5615   */\n      tag_358\n      tag_217\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":5585:5615   */\n      swap1\n      pop\n        /* \"#utility.yul\":5624:5657   */\n      tag_359\n        /* \"#utility.yul\":5652:5656   */\n      dup3\n        /* \"#utility.yul\":5644:5650   */\n      dup3\n        /* \"#utility.yul\":5624:5657   */\n      tag_239\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5534:5663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5669:5980   */\n    tag_241:\n        /* \"#utility.yul\":5746:5750   */\n      0x00\n        /* \"#utility.yul\":5836:5854   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5828:5834   */\n      dup3\n        /* \"#utility.yul\":5825:5855   */\n      gt\n        /* \"#utility.yul\":5822:5878   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":5858:5876   */\n      tag_362\n      tag_86\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5822:5878   */\n    tag_361:\n        /* \"#utility.yul\":5908:5912   */\n      0x20\n        /* \"#utility.yul\":5900:5906   */\n      dup3\n        /* \"#utility.yul\":5896:5913   */\n      mul\n        /* \"#utility.yul\":5888:5913   */\n      swap1\n      pop\n        /* \"#utility.yul\":5968:5972   */\n      0x20\n        /* \"#utility.yul\":5962:5966   */\n      dup2\n        /* \"#utility.yul\":5958:5973   */\n      add\n        /* \"#utility.yul\":5950:5973   */\n      swap1\n      pop\n        /* \"#utility.yul\":5669:5980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5986:6103   */\n    tag_242:\n        /* \"#utility.yul\":6095:6096   */\n      0x00\n        /* \"#utility.yul\":6092:6093   */\n      dup1\n        /* \"#utility.yul\":6085:6097   */\n      revert\n        /* \"#utility.yul\":6126:6836   */\n    tag_243:\n        /* \"#utility.yul\":6222:6227   */\n      0x00\n        /* \"#utility.yul\":6247:6328   */\n      tag_365\n        /* \"#utility.yul\":6263:6327   */\n      tag_366\n        /* \"#utility.yul\":6320:6326   */\n      dup5\n        /* \"#utility.yul\":6263:6327   */\n      tag_241\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6247:6328   */\n      tag_240\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":6238:6328   */\n      swap1\n      pop\n        /* \"#utility.yul\":6348:6353   */\n      dup1\n        /* \"#utility.yul\":6377:6383   */\n      dup4\n        /* \"#utility.yul\":6370:6375   */\n      dup3\n        /* \"#utility.yul\":6363:6384   */\n      mstore\n        /* \"#utility.yul\":6411:6415   */\n      0x20\n        /* \"#utility.yul\":6404:6409   */\n      dup3\n        /* \"#utility.yul\":6400:6416   */\n      add\n        /* \"#utility.yul\":6393:6416   */\n      swap1\n      pop\n        /* \"#utility.yul\":6464:6468   */\n      0x20\n        /* \"#utility.yul\":6456:6462   */\n      dup5\n        /* \"#utility.yul\":6452:6469   */\n      mul\n        /* \"#utility.yul\":6444:6450   */\n      dup4\n        /* \"#utility.yul\":6440:6470   */\n      add\n        /* \"#utility.yul\":6493:6496   */\n      dup6\n        /* \"#utility.yul\":6485:6491   */\n      dup2\n        /* \"#utility.yul\":6482:6497   */\n      gt\n        /* \"#utility.yul\":6479:6601   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":6512:6591   */\n      tag_368\n      tag_242\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":6479:6601   */\n    tag_367:\n        /* \"#utility.yul\":6627:6633   */\n      dup4\n        /* \"#utility.yul\":6610:6830   */\n    tag_369:\n        /* \"#utility.yul\":6644:6650   */\n      dup2\n        /* \"#utility.yul\":6639:6642   */\n      dup2\n        /* \"#utility.yul\":6636:6651   */\n      lt\n        /* \"#utility.yul\":6610:6830   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":6719:6722   */\n      dup1\n        /* \"#utility.yul\":6748:6785   */\n      tag_372\n        /* \"#utility.yul\":6781:6784   */\n      dup9\n        /* \"#utility.yul\":6769:6779   */\n      dup3\n        /* \"#utility.yul\":6748:6785   */\n      tag_226\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6743:6746   */\n      dup5\n        /* \"#utility.yul\":6736:6786   */\n      mstore\n        /* \"#utility.yul\":6815:6819   */\n      0x20\n        /* \"#utility.yul\":6810:6813   */\n      dup5\n        /* \"#utility.yul\":6806:6820   */\n      add\n        /* \"#utility.yul\":6799:6820   */\n      swap4\n      pop\n        /* \"#utility.yul\":6686:6830   */\n      pop\n        /* \"#utility.yul\":6670:6674   */\n      0x20\n        /* \"#utility.yul\":6665:6668   */\n      dup2\n        /* \"#utility.yul\":6661:6675   */\n      add\n        /* \"#utility.yul\":6654:6675   */\n      swap1\n      pop\n        /* \"#utility.yul\":6610:6830   */\n      jump(tag_369)\n    tag_371:\n        /* \"#utility.yul\":6614:6635   */\n      pop\n        /* \"#utility.yul\":6228:6836   */\n      pop\n      pop\n        /* \"#utility.yul\":6126:6836   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6859:7229   */\n    tag_244:\n        /* \"#utility.yul\":6930:6935   */\n      0x00\n        /* \"#utility.yul\":6979:6982   */\n      dup3\n        /* \"#utility.yul\":6972:6976   */\n      0x1f\n        /* \"#utility.yul\":6964:6970   */\n      dup4\n        /* \"#utility.yul\":6960:6977   */\n      add\n        /* \"#utility.yul\":6956:6983   */\n      slt\n        /* \"#utility.yul\":6946:7068   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":6987:7066   */\n      tag_375\n      tag_238\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6946:7068   */\n    tag_374:\n        /* \"#utility.yul\":7104:7110   */\n      dup2\n        /* \"#utility.yul\":7091:7111   */\n      calldataload\n        /* \"#utility.yul\":7129:7223   */\n      tag_376\n        /* \"#utility.yul\":7219:7222   */\n      dup5\n        /* \"#utility.yul\":7211:7217   */\n      dup3\n        /* \"#utility.yul\":7204:7208   */\n      0x20\n        /* \"#utility.yul\":7196:7202   */\n      dup7\n        /* \"#utility.yul\":7192:7209   */\n      add\n        /* \"#utility.yul\":7129:7223   */\n      tag_243\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":7120:7223   */\n      swap2\n      pop\n        /* \"#utility.yul\":6936:7229   */\n      pop\n        /* \"#utility.yul\":6859:7229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7235:7352   */\n    tag_245:\n        /* \"#utility.yul\":7344:7345   */\n      0x00\n        /* \"#utility.yul\":7341:7342   */\n      dup1\n        /* \"#utility.yul\":7334:7346   */\n      revert\n        /* \"#utility.yul\":7358:7665   */\n    tag_246:\n        /* \"#utility.yul\":7419:7423   */\n      0x00\n        /* \"#utility.yul\":7509:7527   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7501:7507   */\n      dup3\n        /* \"#utility.yul\":7498:7528   */\n      gt\n        /* \"#utility.yul\":7495:7551   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":7531:7549   */\n      tag_380\n      tag_86\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7495:7551   */\n    tag_379:\n        /* \"#utility.yul\":7569:7598   */\n      tag_381\n        /* \"#utility.yul\":7591:7597   */\n      dup3\n        /* \"#utility.yul\":7569:7598   */\n      tag_236\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":7561:7598   */\n      swap1\n      pop\n        /* \"#utility.yul\":7653:7657   */\n      0x20\n        /* \"#utility.yul\":7647:7651   */\n      dup2\n        /* \"#utility.yul\":7643:7658   */\n      add\n        /* \"#utility.yul\":7635:7658   */\n      swap1\n      pop\n        /* \"#utility.yul\":7358:7665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7671:7825   */\n    tag_247:\n        /* \"#utility.yul\":7755:7761   */\n      dup3\n        /* \"#utility.yul\":7750:7753   */\n      dup2\n        /* \"#utility.yul\":7745:7748   */\n      dup4\n        /* \"#utility.yul\":7732:7762   */\n      calldatacopy\n        /* \"#utility.yul\":7817:7818   */\n      0x00\n        /* \"#utility.yul\":7808:7814   */\n      dup4\n        /* \"#utility.yul\":7803:7806   */\n      dup4\n        /* \"#utility.yul\":7799:7815   */\n      add\n        /* \"#utility.yul\":7792:7819   */\n      mstore\n        /* \"#utility.yul\":7671:7825   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7831:8241   */\n    tag_248:\n        /* \"#utility.yul\":7908:7913   */\n      0x00\n        /* \"#utility.yul\":7933:7998   */\n      tag_384\n        /* \"#utility.yul\":7949:7997   */\n      tag_385\n        /* \"#utility.yul\":7990:7996   */\n      dup5\n        /* \"#utility.yul\":7949:7997   */\n      tag_246\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7933:7998   */\n      tag_240\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7924:7998   */\n      swap1\n      pop\n        /* \"#utility.yul\":8021:8027   */\n      dup3\n        /* \"#utility.yul\":8014:8019   */\n      dup2\n        /* \"#utility.yul\":8007:8028   */\n      mstore\n        /* \"#utility.yul\":8059:8063   */\n      0x20\n        /* \"#utility.yul\":8052:8057   */\n      dup2\n        /* \"#utility.yul\":8048:8064   */\n      add\n        /* \"#utility.yul\":8097:8100   */\n      dup5\n        /* \"#utility.yul\":8088:8094   */\n      dup5\n        /* \"#utility.yul\":8083:8086   */\n      dup5\n        /* \"#utility.yul\":8079:8095   */\n      add\n        /* \"#utility.yul\":8076:8101   */\n      gt\n        /* \"#utility.yul\":8073:8185   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":8104:8183   */\n      tag_387\n      tag_245\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":8073:8185   */\n    tag_386:\n        /* \"#utility.yul\":8194:8235   */\n      tag_388\n        /* \"#utility.yul\":8228:8234   */\n      dup5\n        /* \"#utility.yul\":8223:8226   */\n      dup3\n        /* \"#utility.yul\":8218:8221   */\n      dup6\n        /* \"#utility.yul\":8194:8235   */\n      tag_247\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":7914:8241   */\n      pop\n        /* \"#utility.yul\":7831:8241   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8260:8598   */\n    tag_249:\n        /* \"#utility.yul\":8315:8320   */\n      0x00\n        /* \"#utility.yul\":8364:8367   */\n      dup3\n        /* \"#utility.yul\":8357:8361   */\n      0x1f\n        /* \"#utility.yul\":8349:8355   */\n      dup4\n        /* \"#utility.yul\":8345:8362   */\n      add\n        /* \"#utility.yul\":8341:8368   */\n      slt\n        /* \"#utility.yul\":8331:8453   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":8372:8451   */\n      tag_391\n      tag_238\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":8331:8453   */\n    tag_390:\n        /* \"#utility.yul\":8489:8495   */\n      dup2\n        /* \"#utility.yul\":8476:8496   */\n      calldataload\n        /* \"#utility.yul\":8514:8592   */\n      tag_392\n        /* \"#utility.yul\":8588:8591   */\n      dup5\n        /* \"#utility.yul\":8580:8586   */\n      dup3\n        /* \"#utility.yul\":8573:8577   */\n      0x20\n        /* \"#utility.yul\":8565:8571   */\n      dup7\n        /* \"#utility.yul\":8561:8578   */\n      add\n        /* \"#utility.yul\":8514:8592   */\n      tag_248\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":8505:8592   */\n      swap2\n      pop\n        /* \"#utility.yul\":8321:8598   */\n      pop\n        /* \"#utility.yul\":8260:8598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8604:10113   */\n    tag_32:\n        /* \"#utility.yul\":8758:8764   */\n      0x00\n        /* \"#utility.yul\":8766:8772   */\n      dup1\n        /* \"#utility.yul\":8774:8780   */\n      0x00\n        /* \"#utility.yul\":8782:8788   */\n      dup1\n        /* \"#utility.yul\":8790:8796   */\n      0x00\n        /* \"#utility.yul\":8839:8842   */\n      0xa0\n        /* \"#utility.yul\":8827:8836   */\n      dup7\n        /* \"#utility.yul\":8818:8825   */\n      dup9\n        /* \"#utility.yul\":8814:8837   */\n      sub\n        /* \"#utility.yul\":8810:8843   */\n      slt\n        /* \"#utility.yul\":8807:8927   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":8846:8925   */\n      tag_395\n      tag_218\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":8807:8927   */\n    tag_394:\n        /* \"#utility.yul\":8966:8967   */\n      0x00\n        /* \"#utility.yul\":8991:9044   */\n      tag_396\n        /* \"#utility.yul\":9036:9043   */\n      dup9\n        /* \"#utility.yul\":9027:9033   */\n      dup3\n        /* \"#utility.yul\":9016:9025   */\n      dup10\n        /* \"#utility.yul\":9012:9034   */\n      add\n        /* \"#utility.yul\":8991:9044   */\n      tag_223\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":8981:9044   */\n      swap6\n      pop\n        /* \"#utility.yul\":8937:9054   */\n      pop\n        /* \"#utility.yul\":9093:9095   */\n      0x20\n        /* \"#utility.yul\":9119:9172   */\n      tag_397\n        /* \"#utility.yul\":9164:9171   */\n      dup9\n        /* \"#utility.yul\":9155:9161   */\n      dup3\n        /* \"#utility.yul\":9144:9153   */\n      dup10\n        /* \"#utility.yul\":9140:9162   */\n      add\n        /* \"#utility.yul\":9119:9172   */\n      tag_223\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9109:9172   */\n      swap5\n      pop\n        /* \"#utility.yul\":9064:9182   */\n      pop\n        /* \"#utility.yul\":9249:9251   */\n      0x40\n        /* \"#utility.yul\":9238:9247   */\n      dup7\n        /* \"#utility.yul\":9234:9252   */\n      add\n        /* \"#utility.yul\":9221:9253   */\n      calldataload\n        /* \"#utility.yul\":9280:9298   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9272:9278   */\n      dup2\n        /* \"#utility.yul\":9269:9299   */\n      gt\n        /* \"#utility.yul\":9266:9383   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":9302:9381   */\n      tag_399\n      tag_219\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":9266:9383   */\n    tag_398:\n        /* \"#utility.yul\":9407:9485   */\n      tag_400\n        /* \"#utility.yul\":9477:9484   */\n      dup9\n        /* \"#utility.yul\":9468:9474   */\n      dup3\n        /* \"#utility.yul\":9457:9466   */\n      dup10\n        /* \"#utility.yul\":9453:9475   */\n      add\n        /* \"#utility.yul\":9407:9485   */\n      tag_244\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9397:9485   */\n      swap4\n      pop\n        /* \"#utility.yul\":9192:9495   */\n      pop\n        /* \"#utility.yul\":9562:9564   */\n      0x60\n        /* \"#utility.yul\":9551:9560   */\n      dup7\n        /* \"#utility.yul\":9547:9565   */\n      add\n        /* \"#utility.yul\":9534:9566   */\n      calldataload\n        /* \"#utility.yul\":9593:9611   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9585:9591   */\n      dup2\n        /* \"#utility.yul\":9582:9612   */\n      gt\n        /* \"#utility.yul\":9579:9696   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":9615:9694   */\n      tag_402\n      tag_219\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9579:9696   */\n    tag_401:\n        /* \"#utility.yul\":9720:9798   */\n      tag_403\n        /* \"#utility.yul\":9790:9797   */\n      dup9\n        /* \"#utility.yul\":9781:9787   */\n      dup3\n        /* \"#utility.yul\":9770:9779   */\n      dup10\n        /* \"#utility.yul\":9766:9788   */\n      add\n        /* \"#utility.yul\":9720:9798   */\n      tag_244\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9710:9798   */\n      swap3\n      pop\n        /* \"#utility.yul\":9505:9808   */\n      pop\n        /* \"#utility.yul\":9875:9878   */\n      0x80\n        /* \"#utility.yul\":9864:9873   */\n      dup7\n        /* \"#utility.yul\":9860:9879   */\n      add\n        /* \"#utility.yul\":9847:9880   */\n      calldataload\n        /* \"#utility.yul\":9907:9925   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9899:9905   */\n      dup2\n        /* \"#utility.yul\":9896:9926   */\n      gt\n        /* \"#utility.yul\":9893:10010   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":9929:10008   */\n      tag_405\n      tag_219\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":9893:10010   */\n    tag_404:\n        /* \"#utility.yul\":10034:10096   */\n      tag_406\n        /* \"#utility.yul\":10088:10095   */\n      dup9\n        /* \"#utility.yul\":10079:10085   */\n      dup3\n        /* \"#utility.yul\":10068:10077   */\n      dup10\n        /* \"#utility.yul\":10064:10086   */\n      add\n        /* \"#utility.yul\":10034:10096   */\n      tag_249\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":10024:10096   */\n      swap2\n      pop\n        /* \"#utility.yul\":9818:10106   */\n      pop\n        /* \"#utility.yul\":8604:10113   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10119:10430   */\n    tag_250:\n        /* \"#utility.yul\":10196:10200   */\n      0x00\n        /* \"#utility.yul\":10286:10304   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10278:10284   */\n      dup3\n        /* \"#utility.yul\":10275:10305   */\n      gt\n        /* \"#utility.yul\":10272:10328   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":10308:10326   */\n      tag_409\n      tag_86\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":10272:10328   */\n    tag_408:\n        /* \"#utility.yul\":10358:10362   */\n      0x20\n        /* \"#utility.yul\":10350:10356   */\n      dup3\n        /* \"#utility.yul\":10346:10363   */\n      mul\n        /* \"#utility.yul\":10338:10363   */\n      swap1\n      pop\n        /* \"#utility.yul\":10418:10422   */\n      0x20\n        /* \"#utility.yul\":10412:10416   */\n      dup2\n        /* \"#utility.yul\":10408:10423   */\n      add\n        /* \"#utility.yul\":10400:10423   */\n      swap1\n      pop\n        /* \"#utility.yul\":10119:10430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10453:11163   */\n    tag_251:\n        /* \"#utility.yul\":10549:10554   */\n      0x00\n        /* \"#utility.yul\":10574:10655   */\n      tag_411\n        /* \"#utility.yul\":10590:10654   */\n      tag_412\n        /* \"#utility.yul\":10647:10653   */\n      dup5\n        /* \"#utility.yul\":10590:10654   */\n      tag_250\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":10574:10655   */\n      tag_240\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":10565:10655   */\n      swap1\n      pop\n        /* \"#utility.yul\":10675:10680   */\n      dup1\n        /* \"#utility.yul\":10704:10710   */\n      dup4\n        /* \"#utility.yul\":10697:10702   */\n      dup3\n        /* \"#utility.yul\":10690:10711   */\n      mstore\n        /* \"#utility.yul\":10738:10742   */\n      0x20\n        /* \"#utility.yul\":10731:10736   */\n      dup3\n        /* \"#utility.yul\":10727:10743   */\n      add\n        /* \"#utility.yul\":10720:10743   */\n      swap1\n      pop\n        /* \"#utility.yul\":10791:10795   */\n      0x20\n        /* \"#utility.yul\":10783:10789   */\n      dup5\n        /* \"#utility.yul\":10779:10796   */\n      mul\n        /* \"#utility.yul\":10771:10777   */\n      dup4\n        /* \"#utility.yul\":10767:10797   */\n      add\n        /* \"#utility.yul\":10820:10823   */\n      dup6\n        /* \"#utility.yul\":10812:10818   */\n      dup2\n        /* \"#utility.yul\":10809:10824   */\n      gt\n        /* \"#utility.yul\":10806:10928   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":10839:10918   */\n      tag_414\n      tag_242\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":10806:10928   */\n    tag_413:\n        /* \"#utility.yul\":10954:10960   */\n      dup4\n        /* \"#utility.yul\":10937:11157   */\n    tag_415:\n        /* \"#utility.yul\":10971:10977   */\n      dup2\n        /* \"#utility.yul\":10966:10969   */\n      dup2\n        /* \"#utility.yul\":10963:10978   */\n      lt\n        /* \"#utility.yul\":10937:11157   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":11046:11049   */\n      dup1\n        /* \"#utility.yul\":11075:11112   */\n      tag_418\n        /* \"#utility.yul\":11108:11111   */\n      dup9\n        /* \"#utility.yul\":11096:11106   */\n      dup3\n        /* \"#utility.yul\":11075:11112   */\n      tag_223\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":11070:11073   */\n      dup5\n        /* \"#utility.yul\":11063:11113   */\n      mstore\n        /* \"#utility.yul\":11142:11146   */\n      0x20\n        /* \"#utility.yul\":11137:11140   */\n      dup5\n        /* \"#utility.yul\":11133:11147   */\n      add\n        /* \"#utility.yul\":11126:11147   */\n      swap4\n      pop\n        /* \"#utility.yul\":11013:11157   */\n      pop\n        /* \"#utility.yul\":10997:11001   */\n      0x20\n        /* \"#utility.yul\":10992:10995   */\n      dup2\n        /* \"#utility.yul\":10988:11002   */\n      add\n        /* \"#utility.yul\":10981:11002   */\n      swap1\n      pop\n        /* \"#utility.yul\":10937:11157   */\n      jump(tag_415)\n    tag_417:\n        /* \"#utility.yul\":10941:10962   */\n      pop\n        /* \"#utility.yul\":10555:11163   */\n      pop\n      pop\n        /* \"#utility.yul\":10453:11163   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11186:11556   */\n    tag_252:\n        /* \"#utility.yul\":11257:11262   */\n      0x00\n        /* \"#utility.yul\":11306:11309   */\n      dup3\n        /* \"#utility.yul\":11299:11303   */\n      0x1f\n        /* \"#utility.yul\":11291:11297   */\n      dup4\n        /* \"#utility.yul\":11287:11304   */\n      add\n        /* \"#utility.yul\":11283:11310   */\n      slt\n        /* \"#utility.yul\":11273:11395   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":11314:11393   */\n      tag_421\n      tag_238\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":11273:11395   */\n    tag_420:\n        /* \"#utility.yul\":11431:11437   */\n      dup2\n        /* \"#utility.yul\":11418:11438   */\n      calldataload\n        /* \"#utility.yul\":11456:11550   */\n      tag_422\n        /* \"#utility.yul\":11546:11549   */\n      dup5\n        /* \"#utility.yul\":11538:11544   */\n      dup3\n        /* \"#utility.yul\":11531:11535   */\n      0x20\n        /* \"#utility.yul\":11523:11529   */\n      dup7\n        /* \"#utility.yul\":11519:11536   */\n      add\n        /* \"#utility.yul\":11456:11550   */\n      tag_251\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":11447:11550   */\n      swap2\n      pop\n        /* \"#utility.yul\":11263:11556   */\n      pop\n        /* \"#utility.yul\":11186:11556   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11562:12456   */\n    tag_36:\n        /* \"#utility.yul\":11680:11686   */\n      0x00\n        /* \"#utility.yul\":11688:11694   */\n      dup1\n        /* \"#utility.yul\":11737:11739   */\n      0x40\n        /* \"#utility.yul\":11725:11734   */\n      dup4\n        /* \"#utility.yul\":11716:11723   */\n      dup6\n        /* \"#utility.yul\":11712:11735   */\n      sub\n        /* \"#utility.yul\":11708:11740   */\n      slt\n        /* \"#utility.yul\":11705:11824   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":11743:11822   */\n      tag_425\n      tag_218\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":11705:11824   */\n    tag_424:\n        /* \"#utility.yul\":11891:11892   */\n      0x00\n        /* \"#utility.yul\":11880:11889   */\n      dup4\n        /* \"#utility.yul\":11876:11893   */\n      add\n        /* \"#utility.yul\":11863:11894   */\n      calldataload\n        /* \"#utility.yul\":11921:11939   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11913:11919   */\n      dup2\n        /* \"#utility.yul\":11910:11940   */\n      gt\n        /* \"#utility.yul\":11907:12024   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":11943:12022   */\n      tag_427\n      tag_219\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":11907:12024   */\n    tag_426:\n        /* \"#utility.yul\":12048:12126   */\n      tag_428\n        /* \"#utility.yul\":12118:12125   */\n      dup6\n        /* \"#utility.yul\":12109:12115   */\n      dup3\n        /* \"#utility.yul\":12098:12107   */\n      dup7\n        /* \"#utility.yul\":12094:12116   */\n      add\n        /* \"#utility.yul\":12048:12126   */\n      tag_252\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":12038:12126   */\n      swap3\n      pop\n        /* \"#utility.yul\":11834:12136   */\n      pop\n        /* \"#utility.yul\":12203:12205   */\n      0x20\n        /* \"#utility.yul\":12192:12201   */\n      dup4\n        /* \"#utility.yul\":12188:12206   */\n      add\n        /* \"#utility.yul\":12175:12207   */\n      calldataload\n        /* \"#utility.yul\":12234:12252   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12226:12232   */\n      dup2\n        /* \"#utility.yul\":12223:12253   */\n      gt\n        /* \"#utility.yul\":12220:12337   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":12256:12335   */\n      tag_430\n      tag_219\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":12220:12337   */\n    tag_429:\n        /* \"#utility.yul\":12361:12439   */\n      tag_431\n        /* \"#utility.yul\":12431:12438   */\n      dup6\n        /* \"#utility.yul\":12422:12428   */\n      dup3\n        /* \"#utility.yul\":12411:12420   */\n      dup7\n        /* \"#utility.yul\":12407:12429   */\n      add\n        /* \"#utility.yul\":12361:12439   */\n      tag_244\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":12351:12439   */\n      swap2\n      pop\n        /* \"#utility.yul\":12146:12449   */\n      pop\n        /* \"#utility.yul\":11562:12456   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12462:12576   */\n    tag_253:\n        /* \"#utility.yul\":12529:12535   */\n      0x00\n        /* \"#utility.yul\":12563:12568   */\n      dup2\n        /* \"#utility.yul\":12557:12569   */\n      mload\n        /* \"#utility.yul\":12547:12569   */\n      swap1\n      pop\n        /* \"#utility.yul\":12462:12576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12582:12766   */\n    tag_254:\n        /* \"#utility.yul\":12681:12692   */\n      0x00\n        /* \"#utility.yul\":12715:12721   */\n      dup3\n        /* \"#utility.yul\":12710:12713   */\n      dup3\n        /* \"#utility.yul\":12703:12722   */\n      mstore\n        /* \"#utility.yul\":12755:12759   */\n      0x20\n        /* \"#utility.yul\":12750:12753   */\n      dup3\n        /* \"#utility.yul\":12746:12760   */\n      add\n        /* \"#utility.yul\":12731:12760   */\n      swap1\n      pop\n        /* \"#utility.yul\":12582:12766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12772:12904   */\n    tag_255:\n        /* \"#utility.yul\":12839:12843   */\n      0x00\n        /* \"#utility.yul\":12862:12865   */\n      dup2\n        /* \"#utility.yul\":12854:12865   */\n      swap1\n      pop\n        /* \"#utility.yul\":12892:12896   */\n      0x20\n        /* \"#utility.yul\":12887:12890   */\n      dup3\n        /* \"#utility.yul\":12883:12897   */\n      add\n        /* \"#utility.yul\":12875:12897   */\n      swap1\n      pop\n        /* \"#utility.yul\":12772:12904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12910:13018   */\n    tag_256:\n        /* \"#utility.yul\":12987:13011   */\n      tag_436\n        /* \"#utility.yul\":13005:13010   */\n      dup2\n        /* \"#utility.yul\":12987:13011   */\n      tag_224\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":12982:12985   */\n      dup3\n        /* \"#utility.yul\":12975:13012   */\n      mstore\n        /* \"#utility.yul\":12910:13018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13024:13203   */\n    tag_257:\n        /* \"#utility.yul\":13093:13103   */\n      0x00\n        /* \"#utility.yul\":13114:13160   */\n      tag_438\n        /* \"#utility.yul\":13156:13159   */\n      dup4\n        /* \"#utility.yul\":13148:13154   */\n      dup4\n        /* \"#utility.yul\":13114:13160   */\n      tag_256\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13192:13196   */\n      0x20\n        /* \"#utility.yul\":13187:13190   */\n      dup4\n        /* \"#utility.yul\":13183:13197   */\n      add\n        /* \"#utility.yul\":13169:13197   */\n      swap1\n      pop\n        /* \"#utility.yul\":13024:13203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13209:13322   */\n    tag_258:\n        /* \"#utility.yul\":13279:13283   */\n      0x00\n        /* \"#utility.yul\":13311:13315   */\n      0x20\n        /* \"#utility.yul\":13306:13309   */\n      dup3\n        /* \"#utility.yul\":13302:13316   */\n      add\n        /* \"#utility.yul\":13294:13316   */\n      swap1\n      pop\n        /* \"#utility.yul\":13209:13322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13358:14090   */\n    tag_259:\n        /* \"#utility.yul\":13477:13480   */\n      0x00\n        /* \"#utility.yul\":13506:13560   */\n      tag_441\n        /* \"#utility.yul\":13554:13559   */\n      dup3\n        /* \"#utility.yul\":13506:13560   */\n      tag_253\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":13576:13662   */\n      tag_442\n        /* \"#utility.yul\":13655:13661   */\n      dup2\n        /* \"#utility.yul\":13650:13653   */\n      dup6\n        /* \"#utility.yul\":13576:13662   */\n      tag_254\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13569:13662   */\n      swap4\n      pop\n        /* \"#utility.yul\":13686:13742   */\n      tag_443\n        /* \"#utility.yul\":13736:13741   */\n      dup4\n        /* \"#utility.yul\":13686:13742   */\n      tag_255\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":13765:13772   */\n      dup1\n        /* \"#utility.yul\":13796:13797   */\n      0x00\n        /* \"#utility.yul\":13781:14065   */\n    tag_444:\n        /* \"#utility.yul\":13806:13812   */\n      dup4\n        /* \"#utility.yul\":13803:13804   */\n      dup2\n        /* \"#utility.yul\":13800:13813   */\n      lt\n        /* \"#utility.yul\":13781:14065   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":13882:13888   */\n      dup2\n        /* \"#utility.yul\":13876:13889   */\n      mload\n        /* \"#utility.yul\":13909:13972   */\n      tag_447\n        /* \"#utility.yul\":13968:13971   */\n      dup9\n        /* \"#utility.yul\":13953:13966   */\n      dup3\n        /* \"#utility.yul\":13909:13972   */\n      tag_257\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":13902:13972   */\n      swap8\n      pop\n        /* \"#utility.yul\":13995:14055   */\n      tag_448\n        /* \"#utility.yul\":14048:14054   */\n      dup4\n        /* \"#utility.yul\":13995:14055   */\n      tag_258\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":13985:14055   */\n      swap3\n      pop\n        /* \"#utility.yul\":13841:14065   */\n      pop\n        /* \"#utility.yul\":13828:13829   */\n      0x01\n        /* \"#utility.yul\":13825:13826   */\n      dup2\n        /* \"#utility.yul\":13821:13830   */\n      add\n        /* \"#utility.yul\":13816:13830   */\n      swap1\n      pop\n        /* \"#utility.yul\":13781:14065   */\n      jump(tag_444)\n    tag_446:\n        /* \"#utility.yul\":13785:13799   */\n      pop\n        /* \"#utility.yul\":14081:14084   */\n      dup6\n        /* \"#utility.yul\":14074:14084   */\n      swap4\n      pop\n        /* \"#utility.yul\":13482:14090   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13358:14090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14096:14469   */\n    tag_39:\n        /* \"#utility.yul\":14239:14243   */\n      0x00\n        /* \"#utility.yul\":14277:14279   */\n      0x20\n        /* \"#utility.yul\":14266:14275   */\n      dup3\n        /* \"#utility.yul\":14262:14280   */\n      add\n        /* \"#utility.yul\":14254:14280   */\n      swap1\n      pop\n        /* \"#utility.yul\":14326:14335   */\n      dup2\n        /* \"#utility.yul\":14320:14324   */\n      dup2\n        /* \"#utility.yul\":14316:14336   */\n      sub\n        /* \"#utility.yul\":14312:14313   */\n      0x00\n        /* \"#utility.yul\":14301:14310   */\n      dup4\n        /* \"#utility.yul\":14297:14314   */\n      add\n        /* \"#utility.yul\":14290:14337   */\n      mstore\n        /* \"#utility.yul\":14354:14462   */\n      tag_450\n        /* \"#utility.yul\":14457:14461   */\n      dup2\n        /* \"#utility.yul\":14448:14454   */\n      dup5\n        /* \"#utility.yul\":14354:14462   */\n      tag_259\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":14346:14462   */\n      swap1\n      pop\n        /* \"#utility.yul\":14096:14469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14475:14591   */\n    tag_260:\n        /* \"#utility.yul\":14545:14566   */\n      tag_452\n        /* \"#utility.yul\":14560:14565   */\n      dup2\n        /* \"#utility.yul\":14545:14566   */\n      tag_231\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":14538:14543   */\n      dup2\n        /* \"#utility.yul\":14535:14567   */\n      eq\n        /* \"#utility.yul\":14525:14585   */\n      tag_453\n      jumpi\n        /* \"#utility.yul\":14581:14582   */\n      0x00\n        /* \"#utility.yul\":14578:14579   */\n      dup1\n        /* \"#utility.yul\":14571:14583   */\n      revert\n        /* \"#utility.yul\":14525:14585   */\n    tag_453:\n        /* \"#utility.yul\":14475:14591   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14597:14730   */\n    tag_261:\n        /* \"#utility.yul\":14640:14645   */\n      0x00\n        /* \"#utility.yul\":14678:14684   */\n      dup2\n        /* \"#utility.yul\":14665:14685   */\n      calldataload\n        /* \"#utility.yul\":14656:14685   */\n      swap1\n      pop\n        /* \"#utility.yul\":14694:14724   */\n      tag_455\n        /* \"#utility.yul\":14718:14723   */\n      dup2\n        /* \"#utility.yul\":14694:14724   */\n      tag_260\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":14597:14730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14736:15204   */\n    tag_42:\n        /* \"#utility.yul\":14801:14807   */\n      0x00\n        /* \"#utility.yul\":14809:14815   */\n      dup1\n        /* \"#utility.yul\":14858:14860   */\n      0x40\n        /* \"#utility.yul\":14846:14855   */\n      dup4\n        /* \"#utility.yul\":14837:14844   */\n      dup6\n        /* \"#utility.yul\":14833:14856   */\n      sub\n        /* \"#utility.yul\":14829:14861   */\n      slt\n        /* \"#utility.yul\":14826:14945   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":14864:14943   */\n      tag_458\n      tag_218\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":14826:14945   */\n    tag_457:\n        /* \"#utility.yul\":14984:14985   */\n      0x00\n        /* \"#utility.yul\":15009:15062   */\n      tag_459\n        /* \"#utility.yul\":15054:15061   */\n      dup6\n        /* \"#utility.yul\":15045:15051   */\n      dup3\n        /* \"#utility.yul\":15034:15043   */\n      dup7\n        /* \"#utility.yul\":15030:15052   */\n      add\n        /* \"#utility.yul\":15009:15062   */\n      tag_223\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":14999:15062   */\n      swap3\n      pop\n        /* \"#utility.yul\":14955:15072   */\n      pop\n        /* \"#utility.yul\":15111:15113   */\n      0x20\n        /* \"#utility.yul\":15137:15187   */\n      tag_460\n        /* \"#utility.yul\":15179:15186   */\n      dup6\n        /* \"#utility.yul\":15170:15176   */\n      dup3\n        /* \"#utility.yul\":15159:15168   */\n      dup7\n        /* \"#utility.yul\":15155:15177   */\n      add\n        /* \"#utility.yul\":15137:15187   */\n      tag_261\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":15127:15187   */\n      swap2\n      pop\n        /* \"#utility.yul\":15082:15197   */\n      pop\n        /* \"#utility.yul\":14736:15204   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15210:15684   */\n    tag_46:\n        /* \"#utility.yul\":15278:15284   */\n      0x00\n        /* \"#utility.yul\":15286:15292   */\n      dup1\n        /* \"#utility.yul\":15335:15337   */\n      0x40\n        /* \"#utility.yul\":15323:15332   */\n      dup4\n        /* \"#utility.yul\":15314:15321   */\n      dup6\n        /* \"#utility.yul\":15310:15333   */\n      sub\n        /* \"#utility.yul\":15306:15338   */\n      slt\n        /* \"#utility.yul\":15303:15422   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":15341:15420   */\n      tag_463\n      tag_218\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":15303:15422   */\n    tag_462:\n        /* \"#utility.yul\":15461:15462   */\n      0x00\n        /* \"#utility.yul\":15486:15539   */\n      tag_464\n        /* \"#utility.yul\":15531:15538   */\n      dup6\n        /* \"#utility.yul\":15522:15528   */\n      dup3\n        /* \"#utility.yul\":15511:15520   */\n      dup7\n        /* \"#utility.yul\":15507:15529   */\n      add\n        /* \"#utility.yul\":15486:15539   */\n      tag_223\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":15476:15539   */\n      swap3\n      pop\n        /* \"#utility.yul\":15432:15549   */\n      pop\n        /* \"#utility.yul\":15588:15590   */\n      0x20\n        /* \"#utility.yul\":15614:15667   */\n      tag_465\n        /* \"#utility.yul\":15659:15666   */\n      dup6\n        /* \"#utility.yul\":15650:15656   */\n      dup3\n        /* \"#utility.yul\":15639:15648   */\n      dup7\n        /* \"#utility.yul\":15635:15657   */\n      add\n        /* \"#utility.yul\":15614:15667   */\n      tag_223\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":15604:15667   */\n      swap2\n      pop\n        /* \"#utility.yul\":15559:15677   */\n      pop\n        /* \"#utility.yul\":15210:15684   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15690:16779   */\n    tag_51:\n        /* \"#utility.yul\":15794:15800   */\n      0x00\n        /* \"#utility.yul\":15802:15808   */\n      dup1\n        /* \"#utility.yul\":15810:15816   */\n      0x00\n        /* \"#utility.yul\":15818:15824   */\n      dup1\n        /* \"#utility.yul\":15826:15832   */\n      0x00\n        /* \"#utility.yul\":15875:15878   */\n      0xa0\n        /* \"#utility.yul\":15863:15872   */\n      dup7\n        /* \"#utility.yul\":15854:15861   */\n      dup9\n        /* \"#utility.yul\":15850:15873   */\n      sub\n        /* \"#utility.yul\":15846:15879   */\n      slt\n        /* \"#utility.yul\":15843:15963   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":15882:15961   */\n      tag_468\n      tag_218\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":15843:15963   */\n    tag_467:\n        /* \"#utility.yul\":16002:16003   */\n      0x00\n        /* \"#utility.yul\":16027:16080   */\n      tag_469\n        /* \"#utility.yul\":16072:16079   */\n      dup9\n        /* \"#utility.yul\":16063:16069   */\n      dup3\n        /* \"#utility.yul\":16052:16061   */\n      dup10\n        /* \"#utility.yul\":16048:16070   */\n      add\n        /* \"#utility.yul\":16027:16080   */\n      tag_223\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":16017:16080   */\n      swap6\n      pop\n        /* \"#utility.yul\":15973:16090   */\n      pop\n        /* \"#utility.yul\":16129:16131   */\n      0x20\n        /* \"#utility.yul\":16155:16208   */\n      tag_470\n        /* \"#utility.yul\":16200:16207   */\n      dup9\n        /* \"#utility.yul\":16191:16197   */\n      dup3\n        /* \"#utility.yul\":16180:16189   */\n      dup10\n        /* \"#utility.yul\":16176:16198   */\n      add\n        /* \"#utility.yul\":16155:16208   */\n      tag_223\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":16145:16208   */\n      swap5\n      pop\n        /* \"#utility.yul\":16100:16218   */\n      pop\n        /* \"#utility.yul\":16257:16259   */\n      0x40\n        /* \"#utility.yul\":16283:16336   */\n      tag_471\n        /* \"#utility.yul\":16328:16335   */\n      dup9\n        /* \"#utility.yul\":16319:16325   */\n      dup3\n        /* \"#utility.yul\":16308:16317   */\n      dup10\n        /* \"#utility.yul\":16304:16326   */\n      add\n        /* \"#utility.yul\":16283:16336   */\n      tag_226\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":16273:16336   */\n      swap4\n      pop\n        /* \"#utility.yul\":16228:16346   */\n      pop\n        /* \"#utility.yul\":16385:16387   */\n      0x60\n        /* \"#utility.yul\":16411:16464   */\n      tag_472\n        /* \"#utility.yul\":16456:16463   */\n      dup9\n        /* \"#utility.yul\":16447:16453   */\n      dup3\n        /* \"#utility.yul\":16436:16445   */\n      dup10\n        /* \"#utility.yul\":16432:16454   */\n      add\n        /* \"#utility.yul\":16411:16464   */\n      tag_226\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":16401:16464   */\n      swap3\n      pop\n        /* \"#utility.yul\":16356:16474   */\n      pop\n        /* \"#utility.yul\":16541:16544   */\n      0x80\n        /* \"#utility.yul\":16530:16539   */\n      dup7\n        /* \"#utility.yul\":16526:16545   */\n      add\n        /* \"#utility.yul\":16513:16546   */\n      calldataload\n        /* \"#utility.yul\":16573:16591   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16565:16571   */\n      dup2\n        /* \"#utility.yul\":16562:16592   */\n      gt\n        /* \"#utility.yul\":16559:16676   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":16595:16674   */\n      tag_474\n      tag_219\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":16559:16676   */\n    tag_473:\n        /* \"#utility.yul\":16700:16762   */\n      tag_475\n        /* \"#utility.yul\":16754:16761   */\n      dup9\n        /* \"#utility.yul\":16745:16751   */\n      dup3\n        /* \"#utility.yul\":16734:16743   */\n      dup10\n        /* \"#utility.yul\":16730:16752   */\n      add\n        /* \"#utility.yul\":16700:16762   */\n      tag_249\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":16690:16762   */\n      swap2\n      pop\n        /* \"#utility.yul\":16484:16772   */\n      pop\n        /* \"#utility.yul\":15690:16779   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16785:17015   */\n    tag_262:\n        /* \"#utility.yul\":16925:16959   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":16921:16922   */\n      0x00\n        /* \"#utility.yul\":16913:16919   */\n      dup3\n        /* \"#utility.yul\":16909:16923   */\n      add\n        /* \"#utility.yul\":16902:16960   */\n      mstore\n        /* \"#utility.yul\":16994:17007   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16989:16991   */\n      0x20\n        /* \"#utility.yul\":16981:16987   */\n      dup3\n        /* \"#utility.yul\":16977:16992   */\n      add\n        /* \"#utility.yul\":16970:17008   */\n      mstore\n        /* \"#utility.yul\":16785:17015   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17021:17387   */\n    tag_263:\n        /* \"#utility.yul\":17163:17166   */\n      0x00\n        /* \"#utility.yul\":17184:17251   */\n      tag_478\n        /* \"#utility.yul\":17248:17250   */\n      0x2b\n        /* \"#utility.yul\":17243:17246   */\n      dup4\n        /* \"#utility.yul\":17184:17251   */\n      tag_234\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":17177:17251   */\n      swap2\n      pop\n        /* \"#utility.yul\":17260:17353   */\n      tag_479\n        /* \"#utility.yul\":17349:17352   */\n      dup3\n        /* \"#utility.yul\":17260:17353   */\n      tag_262\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":17378:17380   */\n      0x40\n        /* \"#utility.yul\":17373:17376   */\n      dup3\n        /* \"#utility.yul\":17369:17381   */\n      add\n        /* \"#utility.yul\":17362:17381   */\n      swap1\n      pop\n        /* \"#utility.yul\":17021:17387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17393:17812   */\n    tag_56:\n        /* \"#utility.yul\":17559:17563   */\n      0x00\n        /* \"#utility.yul\":17597:17599   */\n      0x20\n        /* \"#utility.yul\":17586:17595   */\n      dup3\n        /* \"#utility.yul\":17582:17600   */\n      add\n        /* \"#utility.yul\":17574:17600   */\n      swap1\n      pop\n        /* \"#utility.yul\":17646:17655   */\n      dup2\n        /* \"#utility.yul\":17640:17644   */\n      dup2\n        /* \"#utility.yul\":17636:17656   */\n      sub\n        /* \"#utility.yul\":17632:17633   */\n      0x00\n        /* \"#utility.yul\":17621:17630   */\n      dup4\n        /* \"#utility.yul\":17617:17634   */\n      add\n        /* \"#utility.yul\":17610:17657   */\n      mstore\n        /* \"#utility.yul\":17674:17805   */\n      tag_481\n        /* \"#utility.yul\":17800:17804   */\n      dup2\n        /* \"#utility.yul\":17674:17805   */\n      tag_263\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":17666:17805   */\n      swap1\n      pop\n        /* \"#utility.yul\":17393:17812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17818:17998   */\n    tag_264:\n        /* \"#utility.yul\":17866:17943   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17863:17864   */\n      0x00\n        /* \"#utility.yul\":17856:17944   */\n      mstore\n        /* \"#utility.yul\":17963:17967   */\n      0x22\n        /* \"#utility.yul\":17960:17961   */\n      0x04\n        /* \"#utility.yul\":17953:17968   */\n      mstore\n        /* \"#utility.yul\":17987:17991   */\n      0x24\n        /* \"#utility.yul\":17984:17985   */\n      0x00\n        /* \"#utility.yul\":17977:17992   */\n      revert\n        /* \"#utility.yul\":18004:18324   */\n    tag_64:\n        /* \"#utility.yul\":18048:18054   */\n      0x00\n        /* \"#utility.yul\":18085:18086   */\n      0x02\n        /* \"#utility.yul\":18079:18083   */\n      dup3\n        /* \"#utility.yul\":18075:18087   */\n      div\n        /* \"#utility.yul\":18065:18087   */\n      swap1\n      pop\n        /* \"#utility.yul\":18132:18133   */\n      0x01\n        /* \"#utility.yul\":18126:18130   */\n      dup3\n        /* \"#utility.yul\":18122:18134   */\n      and\n        /* \"#utility.yul\":18153:18171   */\n      dup1\n        /* \"#utility.yul\":18143:18224   */\n      tag_484\n      jumpi\n        /* \"#utility.yul\":18209:18213   */\n      0x7f\n        /* \"#utility.yul\":18201:18207   */\n      dup3\n        /* \"#utility.yul\":18197:18214   */\n      and\n        /* \"#utility.yul\":18187:18214   */\n      swap2\n      pop\n        /* \"#utility.yul\":18143:18224   */\n    tag_484:\n        /* \"#utility.yul\":18271:18273   */\n      0x20\n        /* \"#utility.yul\":18263:18269   */\n      dup3\n        /* \"#utility.yul\":18260:18274   */\n      lt\n        /* \"#utility.yul\":18240:18258   */\n      dup2\n        /* \"#utility.yul\":18237:18275   */\n      sub\n        /* \"#utility.yul\":18234:18318   */\n      tag_485\n      jumpi\n        /* \"#utility.yul\":18290:18308   */\n      tag_486\n      tag_264\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":18234:18318   */\n    tag_485:\n        /* \"#utility.yul\":18055:18324   */\n      pop\n        /* \"#utility.yul\":18004:18324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18330:18567   */\n    tag_265:\n        /* \"#utility.yul\":18470:18504   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":18466:18467   */\n      0x00\n        /* \"#utility.yul\":18458:18464   */\n      dup3\n        /* \"#utility.yul\":18454:18468   */\n      add\n        /* \"#utility.yul\":18447:18505   */\n      mstore\n        /* \"#utility.yul\":18539:18559   */\n      0x6f776e6572206e6f7220617070726f7665640000000000000000000000000000\n        /* \"#utility.yul\":18534:18536   */\n      0x20\n        /* \"#utility.yul\":18526:18532   */\n      dup3\n        /* \"#utility.yul\":18522:18537   */\n      add\n        /* \"#utility.yul\":18515:18560   */\n      mstore\n        /* \"#utility.yul\":18330:18567   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18573:18939   */\n    tag_266:\n        /* \"#utility.yul\":18715:18718   */\n      0x00\n        /* \"#utility.yul\":18736:18803   */\n      tag_489\n        /* \"#utility.yul\":18800:18802   */\n      0x32\n        /* \"#utility.yul\":18795:18798   */\n      dup4\n        /* \"#utility.yul\":18736:18803   */\n      tag_234\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":18729:18803   */\n      swap2\n      pop\n        /* \"#utility.yul\":18812:18905   */\n      tag_490\n        /* \"#utility.yul\":18901:18904   */\n      dup3\n        /* \"#utility.yul\":18812:18905   */\n      tag_265\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":18930:18932   */\n      0x40\n        /* \"#utility.yul\":18925:18928   */\n      dup3\n        /* \"#utility.yul\":18921:18933   */\n      add\n        /* \"#utility.yul\":18914:18933   */\n      swap1\n      pop\n        /* \"#utility.yul\":18573:18939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18945:19364   */\n    tag_77:\n        /* \"#utility.yul\":19111:19115   */\n      0x00\n        /* \"#utility.yul\":19149:19151   */\n      0x20\n        /* \"#utility.yul\":19138:19147   */\n      dup3\n        /* \"#utility.yul\":19134:19152   */\n      add\n        /* \"#utility.yul\":19126:19152   */\n      swap1\n      pop\n        /* \"#utility.yul\":19198:19207   */\n      dup2\n        /* \"#utility.yul\":19192:19196   */\n      dup2\n        /* \"#utility.yul\":19188:19208   */\n      sub\n        /* \"#utility.yul\":19184:19185   */\n      0x00\n        /* \"#utility.yul\":19173:19182   */\n      dup4\n        /* \"#utility.yul\":19169:19186   */\n      add\n        /* \"#utility.yul\":19162:19209   */\n      mstore\n        /* \"#utility.yul\":19226:19357   */\n      tag_492\n        /* \"#utility.yul\":19352:19356   */\n      dup2\n        /* \"#utility.yul\":19226:19357   */\n      tag_266\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":19218:19357   */\n      swap1\n      pop\n        /* \"#utility.yul\":18945:19364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19370:19598   */\n    tag_267:\n        /* \"#utility.yul\":19510:19544   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":19506:19507   */\n      0x00\n        /* \"#utility.yul\":19498:19504   */\n      dup3\n        /* \"#utility.yul\":19494:19508   */\n      add\n        /* \"#utility.yul\":19487:19545   */\n      mstore\n        /* \"#utility.yul\":19579:19590   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19574:19576   */\n      0x20\n        /* \"#utility.yul\":19566:19572   */\n      dup3\n        /* \"#utility.yul\":19562:19577   */\n      add\n        /* \"#utility.yul\":19555:19591   */\n      mstore\n        /* \"#utility.yul\":19370:19598   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19604:19970   */\n    tag_268:\n        /* \"#utility.yul\":19746:19749   */\n      0x00\n        /* \"#utility.yul\":19767:19834   */\n      tag_495\n        /* \"#utility.yul\":19831:19833   */\n      0x29\n        /* \"#utility.yul\":19826:19829   */\n      dup4\n        /* \"#utility.yul\":19767:19834   */\n      tag_234\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":19760:19834   */\n      swap2\n      pop\n        /* \"#utility.yul\":19843:19936   */\n      tag_496\n        /* \"#utility.yul\":19932:19935   */\n      dup3\n        /* \"#utility.yul\":19843:19936   */\n      tag_267\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":19961:19963   */\n      0x40\n        /* \"#utility.yul\":19956:19959   */\n      dup3\n        /* \"#utility.yul\":19952:19964   */\n      add\n        /* \"#utility.yul\":19945:19964   */\n      swap1\n      pop\n        /* \"#utility.yul\":19604:19970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19976:20395   */\n    tag_83:\n        /* \"#utility.yul\":20142:20146   */\n      0x00\n        /* \"#utility.yul\":20180:20182   */\n      0x20\n        /* \"#utility.yul\":20169:20178   */\n      dup3\n        /* \"#utility.yul\":20165:20183   */\n      add\n        /* \"#utility.yul\":20157:20183   */\n      swap1\n      pop\n        /* \"#utility.yul\":20229:20238   */\n      dup2\n        /* \"#utility.yul\":20223:20227   */\n      dup2\n        /* \"#utility.yul\":20219:20239   */\n      sub\n        /* \"#utility.yul\":20215:20216   */\n      0x00\n        /* \"#utility.yul\":20204:20213   */\n      dup4\n        /* \"#utility.yul\":20200:20217   */\n      add\n        /* \"#utility.yul\":20193:20240   */\n      mstore\n        /* \"#utility.yul\":20257:20388   */\n      tag_498\n        /* \"#utility.yul\":20383:20387   */\n      dup2\n        /* \"#utility.yul\":20257:20388   */\n      tag_268\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":20249:20388   */\n      swap1\n      pop\n        /* \"#utility.yul\":19976:20395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20401:20581   */\n    tag_94:\n        /* \"#utility.yul\":20449:20526   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20446:20447   */\n      0x00\n        /* \"#utility.yul\":20439:20527   */\n      mstore\n        /* \"#utility.yul\":20546:20550   */\n      0x32\n        /* \"#utility.yul\":20543:20544   */\n      0x04\n        /* \"#utility.yul\":20536:20551   */\n      mstore\n        /* \"#utility.yul\":20570:20574   */\n      0x24\n        /* \"#utility.yul\":20567:20568   */\n      0x00\n        /* \"#utility.yul\":20560:20575   */\n      revert\n        /* \"#utility.yul\":20587:20767   */\n    tag_269:\n        /* \"#utility.yul\":20635:20712   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20632:20633   */\n      0x00\n        /* \"#utility.yul\":20625:20713   */\n      mstore\n        /* \"#utility.yul\":20732:20736   */\n      0x11\n        /* \"#utility.yul\":20729:20730   */\n      0x04\n        /* \"#utility.yul\":20722:20737   */\n      mstore\n        /* \"#utility.yul\":20756:20760   */\n      0x24\n        /* \"#utility.yul\":20753:20754   */\n      0x00\n        /* \"#utility.yul\":20746:20761   */\n      revert\n        /* \"#utility.yul\":20773:21006   */\n    tag_100:\n        /* \"#utility.yul\":20812:20815   */\n      0x00\n        /* \"#utility.yul\":20835:20859   */\n      tag_502\n        /* \"#utility.yul\":20853:20858   */\n      dup3\n        /* \"#utility.yul\":20835:20859   */\n      tag_224\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":20826:20859   */\n      swap2\n      pop\n        /* \"#utility.yul\":20881:20947   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20874:20879   */\n      dup3\n        /* \"#utility.yul\":20871:20948   */\n      sub\n        /* \"#utility.yul\":20868:20971   */\n      tag_503\n      jumpi\n        /* \"#utility.yul\":20951:20969   */\n      tag_504\n      tag_269\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":20868:20971   */\n    tag_503:\n        /* \"#utility.yul\":20998:20999   */\n      0x01\n        /* \"#utility.yul\":20991:20996   */\n      dup3\n        /* \"#utility.yul\":20987:21000   */\n      add\n        /* \"#utility.yul\":20980:21000   */\n      swap1\n      pop\n        /* \"#utility.yul\":20773:21006   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21012:21240   */\n    tag_270:\n        /* \"#utility.yul\":21152:21186   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":21148:21149   */\n      0x00\n        /* \"#utility.yul\":21140:21146   */\n      dup3\n        /* \"#utility.yul\":21136:21150   */\n      add\n        /* \"#utility.yul\":21129:21187   */\n      mstore\n        /* \"#utility.yul\":21221:21232   */\n      0x20617070726f7665640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21216:21218   */\n      0x20\n        /* \"#utility.yul\":21208:21214   */\n      dup3\n        /* \"#utility.yul\":21204:21219   */\n      add\n        /* \"#utility.yul\":21197:21233   */\n      mstore\n        /* \"#utility.yul\":21012:21240   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21246:21612   */\n    tag_271:\n        /* \"#utility.yul\":21388:21391   */\n      0x00\n        /* \"#utility.yul\":21409:21476   */\n      tag_507\n        /* \"#utility.yul\":21473:21475   */\n      0x29\n        /* \"#utility.yul\":21468:21471   */\n      dup4\n        /* \"#utility.yul\":21409:21476   */\n      tag_234\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":21402:21476   */\n      swap2\n      pop\n        /* \"#utility.yul\":21485:21578   */\n      tag_508\n        /* \"#utility.yul\":21574:21577   */\n      dup3\n        /* \"#utility.yul\":21485:21578   */\n      tag_270\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":21603:21605   */\n      0x40\n        /* \"#utility.yul\":21598:21601   */\n      dup3\n        /* \"#utility.yul\":21594:21606   */\n      add\n        /* \"#utility.yul\":21587:21606   */\n      swap1\n      pop\n        /* \"#utility.yul\":21246:21612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21618:22037   */\n    tag_113:\n        /* \"#utility.yul\":21784:21788   */\n      0x00\n        /* \"#utility.yul\":21822:21824   */\n      0x20\n        /* \"#utility.yul\":21811:21820   */\n      dup3\n        /* \"#utility.yul\":21807:21825   */\n      add\n        /* \"#utility.yul\":21799:21825   */\n      swap1\n      pop\n        /* \"#utility.yul\":21871:21880   */\n      dup2\n        /* \"#utility.yul\":21865:21869   */\n      dup2\n        /* \"#utility.yul\":21861:21881   */\n      sub\n        /* \"#utility.yul\":21857:21858   */\n      0x00\n        /* \"#utility.yul\":21846:21855   */\n      dup4\n        /* \"#utility.yul\":21842:21859   */\n      add\n        /* \"#utility.yul\":21835:21882   */\n      mstore\n        /* \"#utility.yul\":21899:22030   */\n      tag_510\n        /* \"#utility.yul\":22025:22029   */\n      dup2\n        /* \"#utility.yul\":21899:22030   */\n      tag_271\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":21891:22030   */\n      swap1\n      pop\n        /* \"#utility.yul\":21618:22037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22043:22270   */\n    tag_272:\n        /* \"#utility.yul\":22183:22217   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":22179:22180   */\n      0x00\n        /* \"#utility.yul\":22171:22177   */\n      dup3\n        /* \"#utility.yul\":22167:22181   */\n      add\n        /* \"#utility.yul\":22160:22218   */\n      mstore\n        /* \"#utility.yul\":22252:22262   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22247:22249   */\n      0x20\n        /* \"#utility.yul\":22239:22245   */\n      dup3\n        /* \"#utility.yul\":22235:22250   */\n      add\n        /* \"#utility.yul\":22228:22263   */\n      mstore\n        /* \"#utility.yul\":22043:22270   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22276:22642   */\n    tag_273:\n        /* \"#utility.yul\":22418:22421   */\n      0x00\n        /* \"#utility.yul\":22439:22506   */\n      tag_513\n        /* \"#utility.yul\":22503:22505   */\n      0x28\n        /* \"#utility.yul\":22498:22501   */\n      dup4\n        /* \"#utility.yul\":22439:22506   */\n      tag_234\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":22432:22506   */\n      swap2\n      pop\n        /* \"#utility.yul\":22515:22608   */\n      tag_514\n        /* \"#utility.yul\":22604:22607   */\n      dup3\n        /* \"#utility.yul\":22515:22608   */\n      tag_272\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":22633:22635   */\n      0x40\n        /* \"#utility.yul\":22628:22631   */\n      dup3\n        /* \"#utility.yul\":22624:22636   */\n      add\n        /* \"#utility.yul\":22617:22636   */\n      swap1\n      pop\n        /* \"#utility.yul\":22276:22642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22648:23067   */\n    tag_121:\n        /* \"#utility.yul\":22814:22818   */\n      0x00\n        /* \"#utility.yul\":22852:22854   */\n      0x20\n        /* \"#utility.yul\":22841:22850   */\n      dup3\n        /* \"#utility.yul\":22837:22855   */\n      add\n        /* \"#utility.yul\":22829:22855   */\n      swap1\n      pop\n        /* \"#utility.yul\":22901:22910   */\n      dup2\n        /* \"#utility.yul\":22895:22899   */\n      dup2\n        /* \"#utility.yul\":22891:22911   */\n      sub\n        /* \"#utility.yul\":22887:22888   */\n      0x00\n        /* \"#utility.yul\":22876:22885   */\n      dup4\n        /* \"#utility.yul\":22872:22889   */\n      add\n        /* \"#utility.yul\":22865:22912   */\n      mstore\n        /* \"#utility.yul\":22929:23060   */\n      tag_516\n        /* \"#utility.yul\":23055:23059   */\n      dup2\n        /* \"#utility.yul\":22929:23060   */\n      tag_273\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":22921:23060   */\n      swap1\n      pop\n        /* \"#utility.yul\":22648:23067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23073:23297   */\n    tag_274:\n        /* \"#utility.yul\":23213:23247   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":23209:23210   */\n      0x00\n        /* \"#utility.yul\":23201:23207   */\n      dup3\n        /* \"#utility.yul\":23197:23211   */\n      add\n        /* \"#utility.yul\":23190:23248   */\n      mstore\n        /* \"#utility.yul\":23282:23289   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23277:23279   */\n      0x20\n        /* \"#utility.yul\":23269:23275   */\n      dup3\n        /* \"#utility.yul\":23265:23280   */\n      add\n        /* \"#utility.yul\":23258:23290   */\n      mstore\n        /* \"#utility.yul\":23073:23297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23303:23669   */\n    tag_275:\n        /* \"#utility.yul\":23445:23448   */\n      0x00\n        /* \"#utility.yul\":23466:23533   */\n      tag_519\n        /* \"#utility.yul\":23530:23532   */\n      0x25\n        /* \"#utility.yul\":23525:23528   */\n      dup4\n        /* \"#utility.yul\":23466:23533   */\n      tag_234\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":23459:23533   */\n      swap2\n      pop\n        /* \"#utility.yul\":23542:23635   */\n      tag_520\n        /* \"#utility.yul\":23631:23634   */\n      dup3\n        /* \"#utility.yul\":23542:23635   */\n      tag_274\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":23660:23662   */\n      0x40\n        /* \"#utility.yul\":23655:23658   */\n      dup3\n        /* \"#utility.yul\":23651:23663   */\n      add\n        /* \"#utility.yul\":23644:23663   */\n      swap1\n      pop\n        /* \"#utility.yul\":23303:23669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23675:24094   */\n    tag_124:\n        /* \"#utility.yul\":23841:23845   */\n      0x00\n        /* \"#utility.yul\":23879:23881   */\n      0x20\n        /* \"#utility.yul\":23868:23877   */\n      dup3\n        /* \"#utility.yul\":23864:23882   */\n      add\n        /* \"#utility.yul\":23856:23882   */\n      swap1\n      pop\n        /* \"#utility.yul\":23928:23937   */\n      dup2\n        /* \"#utility.yul\":23922:23926   */\n      dup2\n        /* \"#utility.yul\":23918:23938   */\n      sub\n        /* \"#utility.yul\":23914:23915   */\n      0x00\n        /* \"#utility.yul\":23903:23912   */\n      dup4\n        /* \"#utility.yul\":23899:23916   */\n      add\n        /* \"#utility.yul\":23892:23939   */\n      mstore\n        /* \"#utility.yul\":23956:24087   */\n      tag_522\n        /* \"#utility.yul\":24082:24086   */\n      dup2\n        /* \"#utility.yul\":23956:24087   */\n      tag_275\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":23948:24087   */\n      swap1\n      pop\n        /* \"#utility.yul\":23675:24094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24100:24329   */\n    tag_276:\n        /* \"#utility.yul\":24240:24274   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":24236:24237   */\n      0x00\n        /* \"#utility.yul\":24228:24234   */\n      dup3\n        /* \"#utility.yul\":24224:24238   */\n      add\n        /* \"#utility.yul\":24217:24275   */\n      mstore\n        /* \"#utility.yul\":24309:24321   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24304:24306   */\n      0x20\n        /* \"#utility.yul\":24296:24302   */\n      dup3\n        /* \"#utility.yul\":24292:24307   */\n      add\n        /* \"#utility.yul\":24285:24322   */\n      mstore\n        /* \"#utility.yul\":24100:24329   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24335:24701   */\n    tag_277:\n        /* \"#utility.yul\":24477:24480   */\n      0x00\n        /* \"#utility.yul\":24498:24565   */\n      tag_525\n        /* \"#utility.yul\":24562:24564   */\n      0x2a\n        /* \"#utility.yul\":24557:24560   */\n      dup4\n        /* \"#utility.yul\":24498:24565   */\n      tag_234\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":24491:24565   */\n      swap2\n      pop\n        /* \"#utility.yul\":24574:24667   */\n      tag_526\n        /* \"#utility.yul\":24663:24666   */\n      dup3\n        /* \"#utility.yul\":24574:24667   */\n      tag_276\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":24692:24694   */\n      0x40\n        /* \"#utility.yul\":24687:24690   */\n      dup3\n        /* \"#utility.yul\":24683:24695   */\n      add\n        /* \"#utility.yul\":24676:24695   */\n      swap1\n      pop\n        /* \"#utility.yul\":24335:24701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24707:25126   */\n    tag_137:\n        /* \"#utility.yul\":24873:24877   */\n      0x00\n        /* \"#utility.yul\":24911:24913   */\n      0x20\n        /* \"#utility.yul\":24900:24909   */\n      dup3\n        /* \"#utility.yul\":24896:24914   */\n      add\n        /* \"#utility.yul\":24888:24914   */\n      swap1\n      pop\n        /* \"#utility.yul\":24960:24969   */\n      dup2\n        /* \"#utility.yul\":24954:24958   */\n      dup2\n        /* \"#utility.yul\":24950:24970   */\n      sub\n        /* \"#utility.yul\":24946:24947   */\n      0x00\n        /* \"#utility.yul\":24935:24944   */\n      dup4\n        /* \"#utility.yul\":24931:24948   */\n      add\n        /* \"#utility.yul\":24924:24971   */\n      mstore\n        /* \"#utility.yul\":24988:25119   */\n      tag_528\n        /* \"#utility.yul\":25114:25118   */\n      dup2\n        /* \"#utility.yul\":24988:25119   */\n      tag_277\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":24980:25119   */\n      swap1\n      pop\n        /* \"#utility.yul\":24707:25126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25132:25437   */\n    tag_139:\n        /* \"#utility.yul\":25172:25175   */\n      0x00\n        /* \"#utility.yul\":25191:25211   */\n      tag_530\n        /* \"#utility.yul\":25209:25210   */\n      dup3\n        /* \"#utility.yul\":25191:25211   */\n      tag_224\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":25186:25211   */\n      swap2\n      pop\n        /* \"#utility.yul\":25225:25245   */\n      tag_531\n        /* \"#utility.yul\":25243:25244   */\n      dup4\n        /* \"#utility.yul\":25225:25245   */\n      tag_224\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":25220:25245   */\n      swap3\n      pop\n        /* \"#utility.yul\":25379:25380   */\n      dup3\n        /* \"#utility.yul\":25311:25377   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25307:25381   */\n      sub\n        /* \"#utility.yul\":25304:25305   */\n      dup3\n        /* \"#utility.yul\":25301:25382   */\n      gt\n        /* \"#utility.yul\":25298:25405   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":25385:25403   */\n      tag_533\n      tag_269\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":25298:25405   */\n    tag_532:\n        /* \"#utility.yul\":25429:25430   */\n      dup3\n        /* \"#utility.yul\":25426:25427   */\n      dup3\n        /* \"#utility.yul\":25422:25431   */\n      add\n        /* \"#utility.yul\":25415:25431   */\n      swap1\n      pop\n        /* \"#utility.yul\":25132:25437   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25443:26077   */\n    tag_142:\n        /* \"#utility.yul\":25664:25668   */\n      0x00\n        /* \"#utility.yul\":25702:25704   */\n      0x40\n        /* \"#utility.yul\":25691:25700   */\n      dup3\n        /* \"#utility.yul\":25687:25705   */\n      add\n        /* \"#utility.yul\":25679:25705   */\n      swap1\n      pop\n        /* \"#utility.yul\":25751:25760   */\n      dup2\n        /* \"#utility.yul\":25745:25749   */\n      dup2\n        /* \"#utility.yul\":25741:25761   */\n      sub\n        /* \"#utility.yul\":25737:25738   */\n      0x00\n        /* \"#utility.yul\":25726:25735   */\n      dup4\n        /* \"#utility.yul\":25722:25739   */\n      add\n        /* \"#utility.yul\":25715:25762   */\n      mstore\n        /* \"#utility.yul\":25779:25887   */\n      tag_535\n        /* \"#utility.yul\":25882:25886   */\n      dup2\n        /* \"#utility.yul\":25873:25879   */\n      dup6\n        /* \"#utility.yul\":25779:25887   */\n      tag_259\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":25771:25887   */\n      swap1\n      pop\n        /* \"#utility.yul\":25934:25943   */\n      dup2\n        /* \"#utility.yul\":25928:25932   */\n      dup2\n        /* \"#utility.yul\":25924:25944   */\n      sub\n        /* \"#utility.yul\":25919:25921   */\n      0x20\n        /* \"#utility.yul\":25908:25917   */\n      dup4\n        /* \"#utility.yul\":25904:25922   */\n      add\n        /* \"#utility.yul\":25897:25945   */\n      mstore\n        /* \"#utility.yul\":25962:26070   */\n      tag_536\n        /* \"#utility.yul\":26065:26069   */\n      dup2\n        /* \"#utility.yul\":26056:26062   */\n      dup5\n        /* \"#utility.yul\":25962:26070   */\n      tag_259\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":25954:26070   */\n      swap1\n      pop\n        /* \"#utility.yul\":25443:26077   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26083:26311   */\n    tag_278:\n        /* \"#utility.yul\":26223:26257   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":26219:26220   */\n      0x00\n        /* \"#utility.yul\":26211:26217   */\n      dup3\n        /* \"#utility.yul\":26207:26221   */\n      add\n        /* \"#utility.yul\":26200:26258   */\n      mstore\n        /* \"#utility.yul\":26292:26303   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26287:26289   */\n      0x20\n        /* \"#utility.yul\":26279:26285   */\n      dup3\n        /* \"#utility.yul\":26275:26290   */\n      add\n        /* \"#utility.yul\":26268:26304   */\n      mstore\n        /* \"#utility.yul\":26083:26311   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26317:26683   */\n    tag_279:\n        /* \"#utility.yul\":26459:26462   */\n      0x00\n        /* \"#utility.yul\":26480:26547   */\n      tag_539\n        /* \"#utility.yul\":26544:26546   */\n      0x29\n        /* \"#utility.yul\":26539:26542   */\n      dup4\n        /* \"#utility.yul\":26480:26547   */\n      tag_234\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":26473:26547   */\n      swap2\n      pop\n        /* \"#utility.yul\":26556:26649   */\n      tag_540\n        /* \"#utility.yul\":26645:26648   */\n      dup3\n        /* \"#utility.yul\":26556:26649   */\n      tag_278\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":26674:26676   */\n      0x40\n        /* \"#utility.yul\":26669:26672   */\n      dup3\n        /* \"#utility.yul\":26665:26677   */\n      add\n        /* \"#utility.yul\":26658:26677   */\n      swap1\n      pop\n        /* \"#utility.yul\":26317:26683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26689:27108   */\n    tag_148:\n        /* \"#utility.yul\":26855:26859   */\n      0x00\n        /* \"#utility.yul\":26893:26895   */\n      0x20\n        /* \"#utility.yul\":26882:26891   */\n      dup3\n        /* \"#utility.yul\":26878:26896   */\n      add\n        /* \"#utility.yul\":26870:26896   */\n      swap1\n      pop\n        /* \"#utility.yul\":26942:26951   */\n      dup2\n        /* \"#utility.yul\":26936:26940   */\n      dup2\n        /* \"#utility.yul\":26932:26952   */\n      sub\n        /* \"#utility.yul\":26928:26929   */\n      0x00\n        /* \"#utility.yul\":26917:26926   */\n      dup4\n        /* \"#utility.yul\":26913:26930   */\n      add\n        /* \"#utility.yul\":26906:26953   */\n      mstore\n        /* \"#utility.yul\":26970:27101   */\n      tag_542\n        /* \"#utility.yul\":27096:27100   */\n      dup2\n        /* \"#utility.yul\":26970:27101   */\n      tag_279\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":26962:27101   */\n      swap1\n      pop\n        /* \"#utility.yul\":26689:27108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27114:27446   */\n    tag_162:\n        /* \"#utility.yul\":27235:27239   */\n      0x00\n        /* \"#utility.yul\":27273:27275   */\n      0x40\n        /* \"#utility.yul\":27262:27271   */\n      dup3\n        /* \"#utility.yul\":27258:27276   */\n      add\n        /* \"#utility.yul\":27250:27276   */\n      swap1\n      pop\n        /* \"#utility.yul\":27286:27357   */\n      tag_544\n        /* \"#utility.yul\":27354:27355   */\n      0x00\n        /* \"#utility.yul\":27343:27352   */\n      dup4\n        /* \"#utility.yul\":27339:27356   */\n      add\n        /* \"#utility.yul\":27330:27336   */\n      dup6\n        /* \"#utility.yul\":27286:27357   */\n      tag_227\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":27367:27439   */\n      tag_545\n        /* \"#utility.yul\":27435:27437   */\n      0x20\n        /* \"#utility.yul\":27424:27433   */\n      dup4\n        /* \"#utility.yul\":27420:27438   */\n      add\n        /* \"#utility.yul\":27411:27417   */\n      dup5\n        /* \"#utility.yul\":27367:27439   */\n      tag_227\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":27114:27446   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27452:27570   */\n    tag_280:\n        /* \"#utility.yul\":27539:27563   */\n      tag_547\n        /* \"#utility.yul\":27557:27562   */\n      dup2\n        /* \"#utility.yul\":27539:27563   */\n      tag_221\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":27534:27537   */\n      dup3\n        /* \"#utility.yul\":27527:27564   */\n      mstore\n        /* \"#utility.yul\":27452:27570   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27576:27674   */\n    tag_281:\n        /* \"#utility.yul\":27627:27633   */\n      0x00\n        /* \"#utility.yul\":27661:27666   */\n      dup2\n        /* \"#utility.yul\":27655:27667   */\n      mload\n        /* \"#utility.yul\":27645:27667   */\n      swap1\n      pop\n        /* \"#utility.yul\":27576:27674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27680:27848   */\n    tag_282:\n        /* \"#utility.yul\":27763:27774   */\n      0x00\n        /* \"#utility.yul\":27797:27803   */\n      dup3\n        /* \"#utility.yul\":27792:27795   */\n      dup3\n        /* \"#utility.yul\":27785:27804   */\n      mstore\n        /* \"#utility.yul\":27837:27841   */\n      0x20\n        /* \"#utility.yul\":27832:27835   */\n      dup3\n        /* \"#utility.yul\":27828:27842   */\n      add\n        /* \"#utility.yul\":27813:27842   */\n      swap1\n      pop\n        /* \"#utility.yul\":27680:27848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27854:28214   */\n    tag_283:\n        /* \"#utility.yul\":27940:27943   */\n      0x00\n        /* \"#utility.yul\":27968:28006   */\n      tag_551\n        /* \"#utility.yul\":28000:28005   */\n      dup3\n        /* \"#utility.yul\":27968:28006   */\n      tag_281\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":28022:28092   */\n      tag_552\n        /* \"#utility.yul\":28085:28091   */\n      dup2\n        /* \"#utility.yul\":28080:28083   */\n      dup6\n        /* \"#utility.yul\":28022:28092   */\n      tag_282\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":28015:28092   */\n      swap4\n      pop\n        /* \"#utility.yul\":28101:28153   */\n      tag_553\n        /* \"#utility.yul\":28146:28152   */\n      dup2\n        /* \"#utility.yul\":28141:28144   */\n      dup6\n        /* \"#utility.yul\":28134:28138   */\n      0x20\n        /* \"#utility.yul\":28127:28132   */\n      dup7\n        /* \"#utility.yul\":28123:28139   */\n      add\n        /* \"#utility.yul\":28101:28153   */\n      tag_235\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":28178:28207   */\n      tag_554\n        /* \"#utility.yul\":28200:28206   */\n      dup2\n        /* \"#utility.yul\":28178:28207   */\n      tag_236\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":28173:28176   */\n      dup5\n        /* \"#utility.yul\":28169:28208   */\n      add\n        /* \"#utility.yul\":28162:28208   */\n      swap2\n      pop\n        /* \"#utility.yul\":27944:28214   */\n      pop\n        /* \"#utility.yul\":27854:28214   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28220:29273   */\n    tag_171:\n        /* \"#utility.yul\":28543:28547   */\n      0x00\n        /* \"#utility.yul\":28581:28584   */\n      0xa0\n        /* \"#utility.yul\":28570:28579   */\n      dup3\n        /* \"#utility.yul\":28566:28585   */\n      add\n        /* \"#utility.yul\":28558:28585   */\n      swap1\n      pop\n        /* \"#utility.yul\":28595:28666   */\n      tag_556\n        /* \"#utility.yul\":28663:28664   */\n      0x00\n        /* \"#utility.yul\":28652:28661   */\n      dup4\n        /* \"#utility.yul\":28648:28665   */\n      add\n        /* \"#utility.yul\":28639:28645   */\n      dup9\n        /* \"#utility.yul\":28595:28666   */\n      tag_280\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":28676:28748   */\n      tag_557\n        /* \"#utility.yul\":28744:28746   */\n      0x20\n        /* \"#utility.yul\":28733:28742   */\n      dup4\n        /* \"#utility.yul\":28729:28747   */\n      add\n        /* \"#utility.yul\":28720:28726   */\n      dup8\n        /* \"#utility.yul\":28676:28748   */\n      tag_280\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":28795:28804   */\n      dup2\n        /* \"#utility.yul\":28789:28793   */\n      dup2\n        /* \"#utility.yul\":28785:28805   */\n      sub\n        /* \"#utility.yul\":28780:28782   */\n      0x40\n        /* \"#utility.yul\":28769:28778   */\n      dup4\n        /* \"#utility.yul\":28765:28783   */\n      add\n        /* \"#utility.yul\":28758:28806   */\n      mstore\n        /* \"#utility.yul\":28823:28931   */\n      tag_558\n        /* \"#utility.yul\":28926:28930   */\n      dup2\n        /* \"#utility.yul\":28917:28923   */\n      dup7\n        /* \"#utility.yul\":28823:28931   */\n      tag_259\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":28815:28931   */\n      swap1\n      pop\n        /* \"#utility.yul\":28978:28987   */\n      dup2\n        /* \"#utility.yul\":28972:28976   */\n      dup2\n        /* \"#utility.yul\":28968:28988   */\n      sub\n        /* \"#utility.yul\":28963:28965   */\n      0x60\n        /* \"#utility.yul\":28952:28961   */\n      dup4\n        /* \"#utility.yul\":28948:28966   */\n      add\n        /* \"#utility.yul\":28941:28989   */\n      mstore\n        /* \"#utility.yul\":29006:29114   */\n      tag_559\n        /* \"#utility.yul\":29109:29113   */\n      dup2\n        /* \"#utility.yul\":29100:29106   */\n      dup6\n        /* \"#utility.yul\":29006:29114   */\n      tag_259\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":28998:29114   */\n      swap1\n      pop\n        /* \"#utility.yul\":29162:29171   */\n      dup2\n        /* \"#utility.yul\":29156:29160   */\n      dup2\n        /* \"#utility.yul\":29152:29172   */\n      sub\n        /* \"#utility.yul\":29146:29149   */\n      0x80\n        /* \"#utility.yul\":29135:29144   */\n      dup4\n        /* \"#utility.yul\":29131:29150   */\n      add\n        /* \"#utility.yul\":29124:29173   */\n      mstore\n        /* \"#utility.yul\":29190:29266   */\n      tag_560\n        /* \"#utility.yul\":29261:29265   */\n      dup2\n        /* \"#utility.yul\":29252:29258   */\n      dup5\n        /* \"#utility.yul\":29190:29266   */\n      tag_283\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":29182:29266   */\n      swap1\n      pop\n        /* \"#utility.yul\":28220:29273   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29279:29420   */\n    tag_284:\n        /* \"#utility.yul\":29335:29340   */\n      0x00\n        /* \"#utility.yul\":29366:29372   */\n      dup2\n        /* \"#utility.yul\":29360:29373   */\n      mload\n        /* \"#utility.yul\":29351:29373   */\n      swap1\n      pop\n        /* \"#utility.yul\":29382:29414   */\n      tag_562\n        /* \"#utility.yul\":29408:29413   */\n      dup2\n        /* \"#utility.yul\":29382:29414   */\n      tag_229\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":29279:29420   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29426:29775   */\n    tag_174:\n        /* \"#utility.yul\":29495:29501   */\n      0x00\n        /* \"#utility.yul\":29544:29546   */\n      0x20\n        /* \"#utility.yul\":29532:29541   */\n      dup3\n        /* \"#utility.yul\":29523:29530   */\n      dup5\n        /* \"#utility.yul\":29519:29542   */\n      sub\n        /* \"#utility.yul\":29515:29547   */\n      slt\n        /* \"#utility.yul\":29512:29631   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":29550:29629   */\n      tag_565\n      tag_218\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":29512:29631   */\n    tag_564:\n        /* \"#utility.yul\":29670:29671   */\n      0x00\n        /* \"#utility.yul\":29695:29758   */\n      tag_566\n        /* \"#utility.yul\":29750:29757   */\n      dup5\n        /* \"#utility.yul\":29741:29747   */\n      dup3\n        /* \"#utility.yul\":29730:29739   */\n      dup6\n        /* \"#utility.yul\":29726:29748   */\n      add\n        /* \"#utility.yul\":29695:29758   */\n      tag_284\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":29685:29758   */\n      swap2\n      pop\n        /* \"#utility.yul\":29641:29768   */\n      pop\n        /* \"#utility.yul\":29426:29775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29781:29887   */\n    tag_285:\n        /* \"#utility.yul\":29825:29833   */\n      0x00\n        /* \"#utility.yul\":29874:29879   */\n      dup2\n        /* \"#utility.yul\":29869:29872   */\n      0xe0\n        /* \"#utility.yul\":29865:29880   */\n      shr\n        /* \"#utility.yul\":29844:29880   */\n      swap1\n      pop\n        /* \"#utility.yul\":29781:29887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29893:30076   */\n    tag_180:\n        /* \"#utility.yul\":29928:29931   */\n      0x00\n        /* \"#utility.yul\":29966:29967   */\n      0x03\n        /* \"#utility.yul\":29948:29964   */\n      returndatasize\n        /* \"#utility.yul\":29945:29968   */\n      gt\n        /* \"#utility.yul\":29942:30070   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":30004:30005   */\n      0x04\n        /* \"#utility.yul\":30001:30002   */\n      0x00\n        /* \"#utility.yul\":29998:29999   */\n      dup1\n        /* \"#utility.yul\":29983:30006   */\n      returndatacopy\n        /* \"#utility.yul\":30026:30060   */\n      tag_570\n        /* \"#utility.yul\":30057:30058   */\n      0x00\n        /* \"#utility.yul\":30051:30059   */\n      mload\n        /* \"#utility.yul\":30026:30060   */\n      tag_285\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":30019:30060   */\n      swap1\n      pop\n        /* \"#utility.yul\":29942:30070   */\n    tag_569:\n        /* \"#utility.yul\":29893:30076   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":30082:30793   */\n    tag_182:\n        /* \"#utility.yul\":30121:30124   */\n      0x00\n        /* \"#utility.yul\":30159:30163   */\n      0x44\n        /* \"#utility.yul\":30141:30157   */\n      returndatasize\n        /* \"#utility.yul\":30138:30164   */\n      lt\n        /* \"#utility.yul\":30167:30172   */\n      tag_571\n        /* \"#utility.yul\":30135:30174   */\n      jumpi\n        /* \"#utility.yul\":30196:30216   */\n      tag_573\n      tag_217\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":30271:30272   */\n      0x04\n        /* \"#utility.yul\":30253:30269   */\n      returndatasize\n        /* \"#utility.yul\":30249:30273   */\n      sub\n        /* \"#utility.yul\":30246:30247   */\n      0x04\n        /* \"#utility.yul\":30240:30244   */\n      dup3\n        /* \"#utility.yul\":30225:30274   */\n      returndatacopy\n        /* \"#utility.yul\":30304:30308   */\n      dup1\n        /* \"#utility.yul\":30298:30309   */\n      mload\n        /* \"#utility.yul\":30403:30419   */\n      returndatasize\n        /* \"#utility.yul\":30396:30400   */\n      0x24\n        /* \"#utility.yul\":30388:30394   */\n      dup3\n        /* \"#utility.yul\":30384:30401   */\n      add\n        /* \"#utility.yul\":30381:30420   */\n      gt\n        /* \"#utility.yul\":30348:30366   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":30340:30346   */\n      dup3\n        /* \"#utility.yul\":30337:30367   */\n      gt\n        /* \"#utility.yul\":30321:30434   */\n      or\n        /* \"#utility.yul\":30318:30464   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":30449:30454   */\n      pop\n      pop\n      jump(tag_571)\n        /* \"#utility.yul\":30318:30464   */\n    tag_574:\n        /* \"#utility.yul\":30495:30501   */\n      dup1\n        /* \"#utility.yul\":30489:30493   */\n      dup3\n        /* \"#utility.yul\":30485:30502   */\n      add\n        /* \"#utility.yul\":30531:30534   */\n      dup1\n        /* \"#utility.yul\":30525:30535   */\n      mload\n        /* \"#utility.yul\":30558:30576   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":30550:30556   */\n      dup2\n        /* \"#utility.yul\":30547:30577   */\n      gt\n        /* \"#utility.yul\":30544:30587   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":30580:30585   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_571)\n        /* \"#utility.yul\":30544:30587   */\n    tag_575:\n        /* \"#utility.yul\":30628:30634   */\n      dup1\n        /* \"#utility.yul\":30621:30625   */\n      0x20\n        /* \"#utility.yul\":30616:30619   */\n      dup4\n        /* \"#utility.yul\":30612:30626   */\n      add\n        /* \"#utility.yul\":30608:30635   */\n      add\n        /* \"#utility.yul\":30687:30688   */\n      0x04\n        /* \"#utility.yul\":30669:30685   */\n      returndatasize\n        /* \"#utility.yul\":30665:30689   */\n      sub\n        /* \"#utility.yul\":30659:30663   */\n      dup6\n        /* \"#utility.yul\":30655:30690   */\n      add\n        /* \"#utility.yul\":30650:30653   */\n      dup2\n        /* \"#utility.yul\":30647:30691   */\n      gt\n        /* \"#utility.yul\":30644:30701   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":30694:30699   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_571)\n        /* \"#utility.yul\":30644:30701   */\n    tag_576:\n        /* \"#utility.yul\":30711:30768   */\n      tag_577\n        /* \"#utility.yul\":30759:30765   */\n      dup3\n        /* \"#utility.yul\":30753:30757   */\n      0x20\n        /* \"#utility.yul\":30749:30766   */\n      add\n        /* \"#utility.yul\":30741:30747   */\n      dup6\n        /* \"#utility.yul\":30737:30767   */\n      add\n        /* \"#utility.yul\":30731:30735   */\n      dup7\n        /* \"#utility.yul\":30711:30768   */\n      tag_239\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":30784:30787   */\n      dup3\n        /* \"#utility.yul\":30777:30787   */\n      swap6\n      pop\n        /* \"#utility.yul\":30125:30793   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":30082:30793   */\n    tag_571:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":30799:31038   */\n    tag_286:\n        /* \"#utility.yul\":30939:30973   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":30935:30936   */\n      0x00\n        /* \"#utility.yul\":30927:30933   */\n      dup3\n        /* \"#utility.yul\":30923:30937   */\n      add\n        /* \"#utility.yul\":30916:30974   */\n      mstore\n        /* \"#utility.yul\":31008:31030   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":31003:31005   */\n      0x20\n        /* \"#utility.yul\":30995:31001   */\n      dup3\n        /* \"#utility.yul\":30991:31006   */\n      add\n        /* \"#utility.yul\":30984:31031   */\n      mstore\n        /* \"#utility.yul\":30799:31038   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31044:31410   */\n    tag_287:\n        /* \"#utility.yul\":31186:31189   */\n      0x00\n        /* \"#utility.yul\":31207:31274   */\n      tag_580\n        /* \"#utility.yul\":31271:31273   */\n      0x34\n        /* \"#utility.yul\":31266:31269   */\n      dup4\n        /* \"#utility.yul\":31207:31274   */\n      tag_234\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":31200:31274   */\n      swap2\n      pop\n        /* \"#utility.yul\":31283:31376   */\n      tag_581\n        /* \"#utility.yul\":31372:31375   */\n      dup3\n        /* \"#utility.yul\":31283:31376   */\n      tag_286\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":31401:31403   */\n      0x40\n        /* \"#utility.yul\":31396:31399   */\n      dup3\n        /* \"#utility.yul\":31392:31404   */\n      add\n        /* \"#utility.yul\":31385:31404   */\n      swap1\n      pop\n        /* \"#utility.yul\":31044:31410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31416:31835   */\n    tag_186:\n        /* \"#utility.yul\":31582:31586   */\n      0x00\n        /* \"#utility.yul\":31620:31622   */\n      0x20\n        /* \"#utility.yul\":31609:31618   */\n      dup3\n        /* \"#utility.yul\":31605:31623   */\n      add\n        /* \"#utility.yul\":31597:31623   */\n      swap1\n      pop\n        /* \"#utility.yul\":31669:31678   */\n      dup2\n        /* \"#utility.yul\":31663:31667   */\n      dup2\n        /* \"#utility.yul\":31659:31679   */\n      sub\n        /* \"#utility.yul\":31655:31656   */\n      0x00\n        /* \"#utility.yul\":31644:31653   */\n      dup4\n        /* \"#utility.yul\":31640:31657   */\n      add\n        /* \"#utility.yul\":31633:31680   */\n      mstore\n        /* \"#utility.yul\":31697:31828   */\n      tag_583\n        /* \"#utility.yul\":31823:31827   */\n      dup2\n        /* \"#utility.yul\":31697:31828   */\n      tag_287\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":31689:31828   */\n      swap1\n      pop\n        /* \"#utility.yul\":31416:31835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31841:32068   */\n    tag_288:\n        /* \"#utility.yul\":31981:32015   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":31977:31978   */\n      0x00\n        /* \"#utility.yul\":31969:31975   */\n      dup3\n        /* \"#utility.yul\":31965:31979   */\n      add\n        /* \"#utility.yul\":31958:32016   */\n      mstore\n        /* \"#utility.yul\":32050:32060   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":32045:32047   */\n      0x20\n        /* \"#utility.yul\":32037:32043   */\n      dup3\n        /* \"#utility.yul\":32033:32048   */\n      add\n        /* \"#utility.yul\":32026:32061   */\n      mstore\n        /* \"#utility.yul\":31841:32068   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32074:32440   */\n    tag_289:\n        /* \"#utility.yul\":32216:32219   */\n      0x00\n        /* \"#utility.yul\":32237:32304   */\n      tag_586\n        /* \"#utility.yul\":32301:32303   */\n      0x28\n        /* \"#utility.yul\":32296:32299   */\n      dup4\n        /* \"#utility.yul\":32237:32304   */\n      tag_234\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":32230:32304   */\n      swap2\n      pop\n        /* \"#utility.yul\":32313:32406   */\n      tag_587\n        /* \"#utility.yul\":32402:32405   */\n      dup3\n        /* \"#utility.yul\":32313:32406   */\n      tag_288\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":32431:32433   */\n      0x40\n        /* \"#utility.yul\":32426:32429   */\n      dup3\n        /* \"#utility.yul\":32422:32434   */\n      add\n        /* \"#utility.yul\":32415:32434   */\n      swap1\n      pop\n        /* \"#utility.yul\":32074:32440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32446:32865   */\n    tag_190:\n        /* \"#utility.yul\":32612:32616   */\n      0x00\n        /* \"#utility.yul\":32650:32652   */\n      0x20\n        /* \"#utility.yul\":32639:32648   */\n      dup3\n        /* \"#utility.yul\":32635:32653   */\n      add\n        /* \"#utility.yul\":32627:32653   */\n      swap1\n      pop\n        /* \"#utility.yul\":32699:32708   */\n      dup2\n        /* \"#utility.yul\":32693:32697   */\n      dup2\n        /* \"#utility.yul\":32689:32709   */\n      sub\n        /* \"#utility.yul\":32685:32686   */\n      0x00\n        /* \"#utility.yul\":32674:32683   */\n      dup4\n        /* \"#utility.yul\":32670:32687   */\n      add\n        /* \"#utility.yul\":32663:32710   */\n      mstore\n        /* \"#utility.yul\":32727:32858   */\n      tag_589\n        /* \"#utility.yul\":32853:32857   */\n      dup2\n        /* \"#utility.yul\":32727:32858   */\n      tag_289\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":32719:32858   */\n      swap1\n      pop\n        /* \"#utility.yul\":32446:32865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32871:33622   */\n    tag_201:\n        /* \"#utility.yul\":33094:33098   */\n      0x00\n        /* \"#utility.yul\":33132:33135   */\n      0xa0\n        /* \"#utility.yul\":33121:33130   */\n      dup3\n        /* \"#utility.yul\":33117:33136   */\n      add\n        /* \"#utility.yul\":33109:33136   */\n      swap1\n      pop\n        /* \"#utility.yul\":33146:33217   */\n      tag_591\n        /* \"#utility.yul\":33214:33215   */\n      0x00\n        /* \"#utility.yul\":33203:33212   */\n      dup4\n        /* \"#utility.yul\":33199:33216   */\n      add\n        /* \"#utility.yul\":33190:33196   */\n      dup9\n        /* \"#utility.yul\":33146:33217   */\n      tag_280\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":33227:33299   */\n      tag_592\n        /* \"#utility.yul\":33295:33297   */\n      0x20\n        /* \"#utility.yul\":33284:33293   */\n      dup4\n        /* \"#utility.yul\":33280:33298   */\n      add\n        /* \"#utility.yul\":33271:33277   */\n      dup8\n        /* \"#utility.yul\":33227:33299   */\n      tag_280\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":33309:33381   */\n      tag_593\n        /* \"#utility.yul\":33377:33379   */\n      0x40\n        /* \"#utility.yul\":33366:33375   */\n      dup4\n        /* \"#utility.yul\":33362:33380   */\n      add\n        /* \"#utility.yul\":33353:33359   */\n      dup7\n        /* \"#utility.yul\":33309:33381   */\n      tag_227\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":33391:33463   */\n      tag_594\n        /* \"#utility.yul\":33459:33461   */\n      0x60\n        /* \"#utility.yul\":33448:33457   */\n      dup4\n        /* \"#utility.yul\":33444:33462   */\n      add\n        /* \"#utility.yul\":33435:33441   */\n      dup6\n        /* \"#utility.yul\":33391:33463   */\n      tag_227\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":33511:33520   */\n      dup2\n        /* \"#utility.yul\":33505:33509   */\n      dup2\n        /* \"#utility.yul\":33501:33521   */\n      sub\n        /* \"#utility.yul\":33495:33498   */\n      0x80\n        /* \"#utility.yul\":33484:33493   */\n      dup4\n        /* \"#utility.yul\":33480:33499   */\n      add\n        /* \"#utility.yul\":33473:33522   */\n      mstore\n        /* \"#utility.yul\":33539:33615   */\n      tag_595\n        /* \"#utility.yul\":33610:33614   */\n      dup2\n        /* \"#utility.yul\":33601:33607   */\n      dup5\n        /* \"#utility.yul\":33539:33615   */\n      tag_283\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":33531:33615   */\n      swap1\n      pop\n        /* \"#utility.yul\":32871:33622   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220626b3d7992e73c3b600f159ae579c7061e4ec05ddcaec93c34296e465960b81864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_523": {
									"entryPoint": 79,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 570,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 308,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 293,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3764:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:9",
														"type": ""
													}
												],
												"src": "580:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:9"
															},
															"nodeType": "YulIf",
															"src": "1030:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:9",
														"type": ""
													}
												],
												"src": "874:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:9",
														"type": ""
													}
												],
												"src": "1161:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:9"
															},
															"nodeType": "YulIf",
															"src": "1434:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:9",
														"type": ""
													}
												],
												"src": "1296:308:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1659:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1669:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1678:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1673:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1738:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1763:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1768:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1759:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1759:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1782:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1787:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1778:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1778:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1772:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1752:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1752:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1752:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1699:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1702:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1710:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1712:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1721:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1724:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1717:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1717:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1712:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1692:3:9",
																"statements": []
															},
															"src": "1688:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1835:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1885:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1890:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1881:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1881:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1816:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1819:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1813:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:13:9"
															},
															"nodeType": "YulIf",
															"src": "1810:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1641:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1646:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1651:6:9",
														"type": ""
													}
												],
												"src": "1610:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2018:326:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2028:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2095:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2053:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2037:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2028:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2119:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2142:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2157:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2146:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2207:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2209:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2209:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2188:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2193:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2202:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2181:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:25:9"
															},
															"nodeType": "YulIf",
															"src": "2178:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2321:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2326:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2331:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2299:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2299:39:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1991:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1996:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2004:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2012:5:9",
														"type": ""
													}
												],
												"src": "1923:421:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:282:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2486:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2488:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2488:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2488:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2465:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2473:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2461:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2461:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:35:9"
															},
															"nodeType": "YulIf",
															"src": "2447:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2578:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2598:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2592:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2582:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2614:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2709:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2623:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2614:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2415:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2423:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2431:5:9",
														"type": ""
													}
												],
												"src": "2364:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2812:437:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2858:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2860:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2833:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2842:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2829:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2829:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2854:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2825:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2825:32:9"
															},
															"nodeType": "YulIf",
															"src": "2822:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2951:291:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2966:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2990:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3001:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2986:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2986:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2980:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2980:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2970:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3051:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3053:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3053:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3053:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3023:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3031:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3020:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3020:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "3017:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3148:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3204:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3215:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3200:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3200:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3224:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3158:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3158:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3148:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2782:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2793:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2805:6:9",
														"type": ""
													}
												],
												"src": "2725:524:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3283:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3300:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3303:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3293:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3293:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3293:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3397:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3400:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3390:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3390:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3390:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3421:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3424:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3414:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3414:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3255:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3492:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3502:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3516:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3522:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3512:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3512:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3502:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3533:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3563:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3569:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3559:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3559:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3537:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3610:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3624:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3638:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3646:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3634:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3634:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3624:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3590:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3583:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3583:26:9"
															},
															"nodeType": "YulIf",
															"src": "3580:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3713:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "3727:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3727:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3727:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3677:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3700:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3708:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3697:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3697:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3674:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3674:38:9"
															},
															"nodeType": "YulIf",
															"src": "3671:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3476:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3485:6:9",
														"type": ""
													}
												],
												"src": "3441:320:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x28F1 CODESIZE SUB DUP1 PUSH3 0x28F1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2B8 JUMP JUMPDEST PUSH3 0x48 DUP2 PUSH3 0x4F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x36D JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x67 SWAP3 SWAP2 SWAP1 PUSH3 0x6B JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x79 SWAP1 PUSH3 0x338 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xCB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xF8 SWAP2 SWAP1 PUSH3 0xFC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x117 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0xFD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x184 DUP3 PUSH3 0x139 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1A6 JUMPI PUSH3 0x1A5 PUSH3 0x14A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1BB PUSH3 0x11B JUMP JUMPDEST SWAP1 POP PUSH3 0x1C9 DUP3 DUP3 PUSH3 0x179 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1EC JUMPI PUSH3 0x1EB PUSH3 0x14A JUMP JUMPDEST JUMPDEST PUSH3 0x1F7 DUP3 PUSH3 0x139 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x224 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x207 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x251 PUSH3 0x24B DUP5 PUSH3 0x1CE JUMP JUMPDEST PUSH3 0x1AF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x270 JUMPI PUSH3 0x26F PUSH3 0x134 JUMP JUMPDEST JUMPDEST PUSH3 0x27D DUP5 DUP3 DUP6 PUSH3 0x204 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x29D JUMPI PUSH3 0x29C PUSH3 0x12F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2AF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x23A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2D1 JUMPI PUSH3 0x2D0 PUSH3 0x125 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F2 JUMPI PUSH3 0x2F1 PUSH3 0x12A JUMP JUMPDEST JUMPDEST PUSH3 0x300 DUP5 DUP3 DUP6 ADD PUSH3 0x285 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x351 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x367 JUMPI PUSH3 0x366 PUSH3 0x309 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2574 DUP1 PUSH3 0x37D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x1432 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x147A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x177A JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1A90 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x147A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x240 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x237 SWAP1 PUSH2 0x1C19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x363 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x373 JUMPI POP PUSH2 0x372 DUP3 PUSH2 0x713 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x389 SWAP1 PUSH2 0x1C68 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B5 SWAP1 PUSH2 0x1C68 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x402 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x402 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x416 PUSH2 0x77D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45C JUMPI POP PUSH2 0x45B DUP6 PUSH2 0x456 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST JUMPDEST PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x492 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A8 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x785 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EC SWAP1 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x512 JUMPI PUSH2 0x511 PUSH2 0x1582 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x540 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x58D DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x565 JUMPI PUSH2 0x564 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x580 JUMPI PUSH2 0x57F PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A0 JUMPI PUSH2 0x59F PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B6 SWAP1 PUSH2 0x1E1B JUMP JUMPDEST SWAP1 POP PUSH2 0x546 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DA PUSH2 0x5D3 PUSH2 0x77D JUMP JUMPDEST DUP4 DUP4 PUSH2 0xA98 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67A PUSH2 0x77D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C0 JUMPI POP PUSH2 0x6BF DUP6 PUSH2 0x6BA PUSH2 0x77D JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST JUMPDEST PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F6 SWAP1 PUSH2 0x1ED5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70C DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC04 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C0 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x842 PUSH2 0x77D JUMP JUMPDEST SWAP1 POP PUSH2 0x852 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA03 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x873 JUMPI PUSH2 0x872 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x892 JUMPI PUSH2 0x891 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0x208B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x20AB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9FC SWAP1 PUSH2 0x1E1B JUMP JUMPDEST SWAP1 POP PUSH2 0x855 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA7A SWAP3 SWAP2 SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA90 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xE8D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFD SWAP1 PUSH2 0x21AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBF7 SWAP2 SWAP1 PUSH2 0x147A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6A SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC7D PUSH2 0x77D JUMP JUMPDEST SWAP1 POP PUSH2 0xC9D DUP2 DUP8 DUP8 PUSH2 0xC8E DUP9 PUSH2 0x1064 JUMP JUMPDEST PUSH2 0xC97 DUP9 PUSH2 0x1064 JUMP JUMPDEST DUP8 PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xD34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2B SWAP1 PUSH2 0x208B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP2 SUB PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDE9 SWAP2 SWAP1 PUSH2 0x20AB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xE66 SWAP3 SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE7C DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x10DE JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEAC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12B5 JUMP JUMPDEST ISZERO PUSH2 0x105C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2257 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF2E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF2B SWAP2 SWAP1 PUSH2 0x22D4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFD3 JUMPI PUSH2 0xF3A PUSH2 0x230E JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xF96 JUMPI POP PUSH2 0xF4E PUSH2 0x2330 JUMP JUMPDEST DUP1 PUSH2 0xF59 JUMPI POP PUSH2 0xF98 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8D SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCA SWAP1 PUSH2 0x2432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x105A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1051 SWAP1 PUSH2 0x24C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1083 JUMPI PUSH2 0x1082 PUSH2 0x1582 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10B1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10C9 JUMPI PUSH2 0x10C8 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10FD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12B5 JUMP JUMPDEST ISZERO PUSH2 0x12AD JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1143 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x117F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x117C SWAP2 SWAP1 PUSH2 0x22D4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1224 JUMPI PUSH2 0x118B PUSH2 0x230E JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x11E7 JUMPI POP PUSH2 0x119F PUSH2 0x2330 JUMP JUMPDEST DUP1 PUSH2 0x11AA JUMPI POP PUSH2 0x11E9 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DE SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121B SWAP1 PUSH2 0x2432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A2 SWAP1 PUSH2 0x24C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1307 DUP3 PUSH2 0x12DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1317 DUP2 PUSH2 0x12FC JUMP JUMPDEST DUP2 EQ PUSH2 0x1322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1334 DUP2 PUSH2 0x130E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x134D DUP2 PUSH2 0x133A JUMP JUMPDEST DUP2 EQ PUSH2 0x1358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x136A DUP2 PUSH2 0x1344 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1387 JUMPI PUSH2 0x1386 PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1395 DUP6 DUP3 DUP7 ADD PUSH2 0x1325 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13A6 DUP6 DUP3 DUP7 ADD PUSH2 0x135B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B9 DUP2 PUSH2 0x133A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140F DUP2 PUSH2 0x13DA JUMP JUMPDEST DUP2 EQ PUSH2 0x141A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x142C DUP2 PUSH2 0x1406 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1448 JUMPI PUSH2 0x1447 PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1456 DUP5 DUP3 DUP6 ADD PUSH2 0x141D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1474 DUP2 PUSH2 0x145F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x148F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x146B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14AB JUMPI PUSH2 0x14AA PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14B9 DUP5 DUP3 DUP6 ADD PUSH2 0x135B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14FC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14E1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x150B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x152D DUP3 PUSH2 0x14C2 JUMP JUMPDEST PUSH2 0x1537 DUP2 DUP6 PUSH2 0x14CD JUMP JUMPDEST SWAP4 POP PUSH2 0x1547 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14DE JUMP JUMPDEST PUSH2 0x1550 DUP2 PUSH2 0x1511 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1575 DUP2 DUP5 PUSH2 0x1522 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15BA DUP3 PUSH2 0x1511 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15D9 JUMPI PUSH2 0x15D8 PUSH2 0x1582 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15EC PUSH2 0x12C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x15F8 DUP3 DUP3 PUSH2 0x15B1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1618 JUMPI PUSH2 0x1617 PUSH2 0x1582 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1641 PUSH2 0x163C DUP5 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1664 JUMPI PUSH2 0x1663 PUSH2 0x1629 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x168D JUMPI DUP1 PUSH2 0x1679 DUP9 DUP3 PUSH2 0x135B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1666 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16AC JUMPI PUSH2 0x16AB PUSH2 0x157D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x162E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16E5 JUMPI PUSH2 0x16E4 PUSH2 0x1582 JUMP JUMPDEST JUMPDEST PUSH2 0x16EE DUP3 PUSH2 0x1511 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171D PUSH2 0x1718 DUP5 PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1739 JUMPI PUSH2 0x1738 PUSH2 0x16C5 JUMP JUMPDEST JUMPDEST PUSH2 0x1744 DUP5 DUP3 DUP6 PUSH2 0x16FB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1761 JUMPI PUSH2 0x1760 PUSH2 0x157D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1771 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x170A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1796 JUMPI PUSH2 0x1795 PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17A4 DUP9 DUP3 DUP10 ADD PUSH2 0x1325 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x17B5 DUP9 DUP3 DUP10 ADD PUSH2 0x1325 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17D6 JUMPI PUSH2 0x17D5 PUSH2 0x12D7 JUMP JUMPDEST JUMPDEST PUSH2 0x17E2 DUP9 DUP3 DUP10 ADD PUSH2 0x1697 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1803 JUMPI PUSH2 0x1802 PUSH2 0x12D7 JUMP JUMPDEST JUMPDEST PUSH2 0x180F DUP9 DUP3 DUP10 ADD PUSH2 0x1697 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1830 JUMPI PUSH2 0x182F PUSH2 0x12D7 JUMP JUMPDEST JUMPDEST PUSH2 0x183C DUP9 DUP3 DUP10 ADD PUSH2 0x174C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1864 JUMPI PUSH2 0x1863 PUSH2 0x1582 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1888 PUSH2 0x1883 DUP5 PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x18AB JUMPI PUSH2 0x18AA PUSH2 0x1629 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18D4 JUMPI DUP1 PUSH2 0x18C0 DUP9 DUP3 PUSH2 0x1325 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18AD JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18F3 JUMPI PUSH2 0x18F2 PUSH2 0x157D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1903 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1875 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1923 JUMPI PUSH2 0x1922 PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1941 JUMPI PUSH2 0x1940 PUSH2 0x12D7 JUMP JUMPDEST JUMPDEST PUSH2 0x194D DUP6 DUP3 DUP7 ADD PUSH2 0x18DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x196E JUMPI PUSH2 0x196D PUSH2 0x12D7 JUMP JUMPDEST JUMPDEST PUSH2 0x197A DUP6 DUP3 DUP7 ADD PUSH2 0x1697 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B9 DUP2 PUSH2 0x133A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19CB DUP4 DUP4 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19EF DUP3 PUSH2 0x1984 JUMP JUMPDEST PUSH2 0x19F9 DUP2 DUP6 PUSH2 0x198F JUMP JUMPDEST SWAP4 POP PUSH2 0x1A04 DUP4 PUSH2 0x19A0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A35 JUMPI DUP2 MLOAD PUSH2 0x1A1C DUP9 DUP3 PUSH2 0x19BF JUMP JUMPDEST SWAP8 POP PUSH2 0x1A27 DUP4 PUSH2 0x19D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A08 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A5C DUP2 DUP5 PUSH2 0x19E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6D DUP2 PUSH2 0x145F JUMP JUMPDEST DUP2 EQ PUSH2 0x1A78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A8A DUP2 PUSH2 0x1A64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AA7 JUMPI PUSH2 0x1AA6 PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AB5 DUP6 DUP3 DUP7 ADD PUSH2 0x1325 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AC6 DUP6 DUP3 DUP7 ADD PUSH2 0x1A7B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE7 JUMPI PUSH2 0x1AE6 PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF5 DUP6 DUP3 DUP7 ADD PUSH2 0x1325 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B06 DUP6 DUP3 DUP7 ADD PUSH2 0x1325 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B2C JUMPI PUSH2 0x1B2B PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B3A DUP9 DUP3 DUP10 ADD PUSH2 0x1325 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B4B DUP9 DUP3 DUP10 ADD PUSH2 0x1325 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1B5C DUP9 DUP3 DUP10 ADD PUSH2 0x135B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1B6D DUP9 DUP3 DUP10 ADD PUSH2 0x135B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B8E JUMPI PUSH2 0x1B8D PUSH2 0x12D7 JUMP JUMPDEST JUMPDEST PUSH2 0x1B9A DUP9 DUP3 DUP10 ADD PUSH2 0x174C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C03 PUSH1 0x2B DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0E DUP3 PUSH2 0x1BA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C32 DUP2 PUSH2 0x1BF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C80 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C93 JUMPI PUSH2 0x1C92 PUSH2 0x1C39 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF5 PUSH1 0x32 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1D00 DUP3 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D24 DUP2 PUSH2 0x1CE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D87 PUSH1 0x29 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1D92 DUP3 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB6 DUP2 PUSH2 0x1D7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E26 DUP3 PUSH2 0x133A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E58 JUMPI PUSH2 0x1E57 PUSH2 0x1DEC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EBF PUSH1 0x29 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECA DUP3 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EEE DUP2 PUSH2 0x1EB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F51 PUSH1 0x28 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1F5C DUP3 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F80 DUP2 PUSH2 0x1F44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE3 PUSH1 0x25 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEE DUP3 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2012 DUP2 PUSH2 0x1FD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2075 PUSH1 0x2A DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x2080 DUP3 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20A4 DUP2 PUSH2 0x2068 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B6 DUP3 PUSH2 0x133A JUMP JUMPDEST SWAP2 POP PUSH2 0x20C1 DUP4 PUSH2 0x133A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x20F6 JUMPI PUSH2 0x20F5 PUSH2 0x1DEC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x211B DUP2 DUP6 PUSH2 0x19E4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x212F DUP2 DUP5 PUSH2 0x19E4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2194 PUSH1 0x29 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x219F DUP3 PUSH2 0x2138 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21C3 DUP2 PUSH2 0x2187 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21DF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13B0 JUMP JUMPDEST PUSH2 0x21EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x21FC DUP2 PUSH2 0x12FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2229 DUP3 PUSH2 0x2202 JUMP JUMPDEST PUSH2 0x2233 DUP2 DUP6 PUSH2 0x220D JUMP JUMPDEST SWAP4 POP PUSH2 0x2243 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14DE JUMP JUMPDEST PUSH2 0x224C DUP2 PUSH2 0x1511 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x226C PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x2279 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x21F3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x228B DUP2 DUP7 PUSH2 0x19E4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x229F DUP2 DUP6 PUSH2 0x19E4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x22B3 DUP2 DUP5 PUSH2 0x221E JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22CE DUP2 PUSH2 0x1406 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22EA JUMPI PUSH2 0x22E9 PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22F8 DUP5 DUP3 DUP6 ADD PUSH2 0x22BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x232D JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x232A PUSH1 0x0 MLOAD PUSH2 0x2301 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x23BD JUMPI PUSH2 0x2342 PUSH2 0x12C8 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x236A JUMPI POP POP PUSH2 0x23BD JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2388 JUMPI POP POP POP POP PUSH2 0x23BD JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x23A5 JUMPI POP POP POP POP POP PUSH2 0x23BD JUMP JUMPDEST PUSH2 0x23B4 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x15B1 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x241C PUSH1 0x34 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x2427 DUP3 PUSH2 0x23C0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x244B DUP2 PUSH2 0x240F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24AE PUSH1 0x28 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x24B9 DUP3 PUSH2 0x2452 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24DD DUP2 PUSH2 0x24A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x24F9 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x2506 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x2513 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x13B0 JUMP JUMPDEST PUSH2 0x2520 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x13B0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2532 DUP2 DUP5 PUSH2 0x221E JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x6B3D79 SWAP3 0xE7 EXTCODECOPY EXTCODESIZE PUSH1 0xF ISZERO SWAP11 0xE5 PUSH26 0xC7061E4EC05DDCAEC93C34296E465960B81864736F6C63430008 0xD STOP CALLER ",
							"sourceMap": "555:14720:0:-:0;;;1092:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1134:13;1142:4;1134:7;;;:13;;:::i;:::-;1092:62;555:14720;;7936:86;8009:6;8002:4;:13;;;;;;;;;;;;:::i;:::-;;7936:86;:::o;555:14720::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:524::-;2805:6;2854:2;2842:9;2833:7;2829:23;2825:32;2822:119;;;2860:79;;:::i;:::-;2822:119;3001:1;2990:9;2986:17;2980:24;3031:18;3023:6;3020:30;3017:117;;;3053:79;;:::i;:::-;3017:117;3158:74;3224:7;3215:6;3204:9;3200:22;3158:74;:::i;:::-;3148:84;;2951:291;2725:524;;;;:::o;3255:180::-;3303:77;3300:1;3293:88;3400:4;3397:1;3390:15;3424:4;3421:1;3414:15;3441:320;3485:6;3522:1;3516:4;3512:12;3502:22;;3569:1;3563:4;3559:12;3590:18;3580:81;;3646:4;3638:6;3634:17;3624:27;;3580:81;3708:2;3700:6;3697:14;3677:18;3674:38;3671:84;;3727:18;;:::i;:::-;3671:84;3492:269;3441:320;;;:::o;555:14720:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArray_1094": {
									"entryPoint": 4196,
									"id": 1094,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_938": {
									"entryPoint": 3717,
									"id": 938,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1066": {
									"entryPoint": 3725,
									"id": 1066,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1001": {
									"entryPoint": 4318,
									"id": 1001,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1582": {
									"entryPoint": 1917,
									"id": 1582,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_512": {
									"entryPoint": 1925,
									"id": 512,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_386": {
									"entryPoint": 3076,
									"id": 386,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_919": {
									"entryPoint": 2712,
									"id": 919,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_179": {
									"entryPoint": 1199,
									"id": 179,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_115": {
									"entryPoint": 464,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_214": {
									"entryPoint": 1502,
									"id": 214,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1293": {
									"entryPoint": 4789,
									"id": 1293,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_292": {
									"entryPoint": 1038,
									"id": 292,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_252": {
									"entryPoint": 1650,
									"id": 252,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_196": {
									"entryPoint": 1480,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1615": {
									"entryPoint": 1811,
									"id": 1615,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_75": {
									"entryPoint": 664,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_87": {
									"entryPoint": 890,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6261,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5678,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5898,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 6010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 6928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8791,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9444,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8449,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8650,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4808,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 5883,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 5342,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 7707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7660,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7225,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7613,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 8974,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5501,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5673,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5829,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4823,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4818,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_224_unsigned": {
									"entryPoint": 8961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed": {
									"entryPoint": 9152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503": {
									"entryPoint": 9298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9": {
									"entryPoint": 7079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a": {
									"entryPoint": 7779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d": {
									"entryPoint": 8071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686": {
									"entryPoint": 7321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf": {
									"entryPoint": 8217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2": {
									"entryPoint": 8504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5": {
									"entryPoint": 7467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807": {
									"entryPoint": 7925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"try_decode_error_message": {
									"entryPoint": 9008,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:33625:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:9",
														"type": ""
													}
												],
												"src": "696:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:9",
														"type": ""
													}
												],
												"src": "841:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:9"
															},
															"nodeType": "YulIf",
															"src": "977:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:9",
														"type": ""
													}
												],
												"src": "924:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:9",
														"type": ""
													}
												],
												"src": "1052:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:9"
															},
															"nodeType": "YulIf",
															"src": "1290:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:9",
														"type": ""
													}
												],
												"src": "1197:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:9",
														"type": ""
													}
												],
												"src": "1677:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:9",
														"type": ""
													}
												],
												"src": "1801:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2083:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2055:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2065:7:9",
														"type": ""
													}
												],
												"src": "2029:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2226:78:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2282:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:42:9"
															},
															"nodeType": "YulIf",
															"src": "2236:62:9"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2219:5:9",
														"type": ""
													}
												],
												"src": "2184:120:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2361:86:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2371:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2339:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2347:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2355:5:9",
														"type": ""
													}
												],
												"src": "2310:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:262:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2564:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:32:9"
															},
															"nodeType": "YulIf",
															"src": "2528:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2657:116:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2701:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2488:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2499:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2511:6:9",
														"type": ""
													}
												],
												"src": "2453:327:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2828:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2838:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2810:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2820:7:9",
														"type": ""
													}
												],
												"src": "2786:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2941:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2929:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2936:3:9",
														"type": ""
													}
												],
												"src": "2882:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3089:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3099:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3107:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3061:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3073:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3084:4:9",
														"type": ""
													}
												],
												"src": "2997:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3279:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3325:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:32:9"
															},
															"nodeType": "YulIf",
															"src": "3289:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3418:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3462:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3249:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3260:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3272:6:9",
														"type": ""
													}
												],
												"src": "3213:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3607:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3618:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3634:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3628:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3590:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3600:6:9",
														"type": ""
													}
												],
												"src": "3548:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3749:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3766:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3771:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3759:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3787:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3806:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3802:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3787:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3721:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3726:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3737:11:9",
														"type": ""
													}
												],
												"src": "3653:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3877:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3887:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3896:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3891:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3956:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3981:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3986:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3977:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3977:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4000:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4005:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3996:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3996:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3990:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3990:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3970:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3970:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3970:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3917:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3920:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3914:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3914:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3928:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3930:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3939:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3942:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3935:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3935:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3930:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3910:3:9",
																"statements": []
															},
															"src": "3906:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4053:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4103:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "4108:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4099:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4099:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4117:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4092:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4092:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4092:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4034:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4037:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4031:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4031:13:9"
															},
															"nodeType": "YulIf",
															"src": "4028:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3859:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3864:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3869:6:9",
														"type": ""
													}
												],
												"src": "3828:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4189:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4199:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4217:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4224:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4213:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4213:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4233:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4229:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4229:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4209:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4209:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4199:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4172:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4182:6:9",
														"type": ""
													}
												],
												"src": "4141:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4341:272:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4351:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4398:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4365:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4355:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4413:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4479:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4484:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4420:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4420:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4413:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4526:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4533:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4522:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4522:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4540:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4545:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4500:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4500:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4561:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4572:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4599:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4577:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4577:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4568:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4568:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4561:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4322:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4329:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4337:3:9",
														"type": ""
													}
												],
												"src": "4249:364:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4737:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4747:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4759:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4770:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4755:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4755:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4747:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4794:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4805:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4790:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4790:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4813:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4819:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4809:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4809:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4783:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4783:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4783:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4839:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4911:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4920:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4847:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4839:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4709:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4721:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4732:4:9",
														"type": ""
													}
												],
												"src": "4619:313:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5027:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5044:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5047:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5037:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5037:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5037:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4938:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5089:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5106:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5109:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5099:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5099:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5099:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5203:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5206:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5196:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5196:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5196:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5227:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5230:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5220:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5220:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5220:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5061:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5290:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5300:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5322:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "5352:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5330:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5330:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5318:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5318:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5304:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5469:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5471:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5471:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5471:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5412:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5424:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5409:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5409:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5448:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5460:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5445:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5445:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5406:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5406:62:9"
															},
															"nodeType": "YulIf",
															"src": "5403:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5507:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5511:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5500:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5500:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5276:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5284:4:9",
														"type": ""
													}
												],
												"src": "5247:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5575:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5585:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5595:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5595:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5585:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5644:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5652:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5624:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5624:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5624:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5559:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5568:6:9",
														"type": ""
													}
												],
												"src": "5534:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5751:229:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5856:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5858:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5858:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5858:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5828:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5836:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5825:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5825:30:9"
															},
															"nodeType": "YulIf",
															"src": "5822:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5888:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5900:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5908:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5896:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5896:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5888:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5950:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5962:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5968:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5958:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5958:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5950:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5735:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5746:4:9",
														"type": ""
													}
												],
												"src": "5669:311:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6075:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6092:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6095:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6085:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6085:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6085:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "5986:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6228:608:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6238:90:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6320:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6263:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6263:64:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6247:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6247:81:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6238:5:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6337:16:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "6348:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6341:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6370:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6377:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6363:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6363:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6363:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6393:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6404:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6411:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6400:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6393:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6426:44:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6444:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6456:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6464:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6452:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6452:17:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6440:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:30:9"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6430:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6498:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "6512:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6512:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6512:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6485:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6493:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6482:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6482:15:9"
															},
															"nodeType": "YulIf",
															"src": "6479:122:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6686:144:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6701:21:9",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "6719:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "6705:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6743:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "6769:10:9"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "6781:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "6748:20:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6748:37:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6736:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6736:50:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6736:50:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6799:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6810:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6815:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6806:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6806:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6799:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6639:3:9"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6644:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6636:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6636:15:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6652:25:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6654:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6665:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6670:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6661:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6661:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6654:3:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6614:21:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6616:17:9",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "6627:6:9"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "6620:3:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6610:220:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6198:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6206:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6214:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6222:5:9",
														"type": ""
													}
												],
												"src": "6126:710:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6936:293:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6985:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6987:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6987:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6987:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6964:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6972:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6960:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6960:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6979:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6956:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6956:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6949:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6949:35:9"
															},
															"nodeType": "YulIf",
															"src": "6946:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7077:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7104:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7091:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7091:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7081:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7120:103:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7196:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7204:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7192:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7192:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7211:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7129:62:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7129:94:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7120:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6914:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6922:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6930:5:9",
														"type": ""
													}
												],
												"src": "6859:370:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7324:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7341:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7344:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7334:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7334:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7334:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7235:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7424:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7529:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7531:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7531:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7531:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7501:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7509:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7498:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7498:30:9"
															},
															"nodeType": "YulIf",
															"src": "7495:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7561:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7591:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7569:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7569:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7561:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7635:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7647:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7653:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7643:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7643:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7635:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7408:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7419:4:9",
														"type": ""
													}
												],
												"src": "7358:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7722:103:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7745:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7750:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7755:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7732:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7732:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7732:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7803:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7808:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7799:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7799:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7817:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7792:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7792:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7792:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7704:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7709:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7714:6:9",
														"type": ""
													}
												],
												"src": "7671:154:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7914:327:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7924:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7990:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7949:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7949:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7933:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7933:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7924:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8014:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8021:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8007:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8007:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8007:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8037:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8052:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8059:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8048:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8048:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8041:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8102:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8104:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8104:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8104:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8083:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8088:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8079:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8079:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8097:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8076:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:25:9"
															},
															"nodeType": "YulIf",
															"src": "8073:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8218:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8223:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8228:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8194:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8194:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8194:41:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7887:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7892:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7900:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7908:5:9",
														"type": ""
													}
												],
												"src": "7831:410:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8321:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8370:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8372:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8372:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8372:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8349:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8357:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8345:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8345:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8364:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8341:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8341:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8334:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8334:35:9"
															},
															"nodeType": "YulIf",
															"src": "8331:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8489:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8476:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8476:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8466:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8505:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8565:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8573:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8561:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8561:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8580:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8588:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8514:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8514:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8505:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8299:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8307:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8315:5:9",
														"type": ""
													}
												],
												"src": "8260:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8797:1316:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8844:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8846:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8846:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8846:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8818:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8827:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8814:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8814:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8839:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8810:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8810:33:9"
															},
															"nodeType": "YulIf",
															"src": "8807:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "8937:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8952:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8966:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8956:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8981:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9016:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9027:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9012:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9012:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9036:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8991:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8991:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8981:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9064:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9079:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9093:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9083:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9109:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9144:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9155:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9140:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9140:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9164:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9119:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9119:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9109:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9192:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9207:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9238:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9249:2:9",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9234:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9234:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9221:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9221:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9211:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9300:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9302:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9302:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9302:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9272:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9280:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9269:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9269:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "9266:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9397:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9457:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9468:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9453:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9453:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9477:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9407:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9407:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9397:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9505:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9520:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9551:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9562:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9547:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9547:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9534:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9534:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9524:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9613:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9615:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9615:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9615:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9585:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9593:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9582:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9582:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "9579:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9710:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9770:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9781:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9766:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9766:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9790:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9720:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9710:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9818:288:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9833:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9864:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9875:3:9",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9860:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9860:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9847:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9847:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9837:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9927:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9929:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9929:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9929:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9899:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9907:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9896:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9896:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "9893:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10024:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10068:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10079:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10064:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10064:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10088:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10034:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10034:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "10024:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8735:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8746:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8758:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8766:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8774:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8782:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8790:6:9",
														"type": ""
													}
												],
												"src": "8604:1509:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10201:229:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10306:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10308:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10308:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10308:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10278:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10286:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10275:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10275:30:9"
															},
															"nodeType": "YulIf",
															"src": "10272:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10338:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10350:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10358:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10346:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10346:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10338:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10400:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10412:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10418:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10408:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10408:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10400:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10196:4:9",
														"type": ""
													}
												],
												"src": "10119:311:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10555:608:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10565:90:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10647:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10590:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10590:64:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10574:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10574:81:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10565:5:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10664:16:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "10675:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10668:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10697:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10704:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10690:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10690:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10690:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10720:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10731:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10727:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10727:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "10720:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10753:44:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10771:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10783:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10791:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "10779:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10779:17:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10767:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10767:30:9"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "10757:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10825:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "10839:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10839:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10839:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10812:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10820:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10809:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10809:15:9"
															},
															"nodeType": "YulIf",
															"src": "10806:122:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11013:144:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11028:21:9",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "11046:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "11032:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11070:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "11096:10:9"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "11108:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "11075:20:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11075:37:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11063:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11063:50:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11063:50:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11126:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11137:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11142:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11133:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11133:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11126:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10966:3:9"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10971:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10963:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10963:15:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10979:25:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10981:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "10992:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10997:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10988:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10988:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "10981:3:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10941:21:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10943:17:9",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "10954:6:9"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "10947:3:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10937:220:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10525:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10533:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10541:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10549:5:9",
														"type": ""
													}
												],
												"src": "10453:710:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11263:293:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11312:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "11314:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11314:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11314:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11291:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11299:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11287:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11287:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11306:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11283:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11283:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11276:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11276:35:9"
															},
															"nodeType": "YulIf",
															"src": "11273:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11404:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11431:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11418:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11418:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11408:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11447:103:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11523:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11531:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11519:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11519:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11538:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "11546:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11456:62:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11456:94:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "11447:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11241:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11249:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11257:5:9",
														"type": ""
													}
												],
												"src": "11186:370:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11695:761:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11741:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11743:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11743:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11743:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11716:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11725:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11712:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11712:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11737:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11708:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11708:32:9"
															},
															"nodeType": "YulIf",
															"src": "11705:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "11834:302:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11849:45:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11880:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11891:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11876:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11876:17:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11863:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11863:31:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11853:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11941:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11943:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11943:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11943:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11913:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11921:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11910:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11910:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "11907:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12038:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12098:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12109:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12094:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12094:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12118:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12048:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12048:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12038:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12146:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12161:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12192:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12203:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12188:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12188:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12175:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12175:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12165:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12254:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "12256:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12256:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12256:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12226:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12234:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12223:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12223:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "12220:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12351:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12411:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12422:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12407:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12407:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12431:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12361:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12361:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12351:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11657:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11668:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11680:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11688:6:9",
														"type": ""
													}
												],
												"src": "11562:894:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12536:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12547:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12563:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12557:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12557:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12547:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12519:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12529:6:9",
														"type": ""
													}
												],
												"src": "12462:114:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12693:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12710:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12715:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12703:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12703:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12703:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12731:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12750:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12755:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12746:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12746:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12731:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12665:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12670:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12681:11:9",
														"type": ""
													}
												],
												"src": "12582:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12844:60:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12854:11:9",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "12862:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12854:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12875:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12887:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12892:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12883:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12883:14:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12875:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "12831:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12839:4:9",
														"type": ""
													}
												],
												"src": "12772:132:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12965:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12982:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13005:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12987:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12987:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12975:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12975:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12975:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12953:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12960:3:9",
														"type": ""
													}
												],
												"src": "12910:108:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13104:99:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13148:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13156:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13114:33:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13114:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13114:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13169:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13187:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13192:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13183:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13183:14:9"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "13169:10:9"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13077:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13085:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "13093:10:9",
														"type": ""
													}
												],
												"src": "13024:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13284:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13294:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13306:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13311:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13302:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13302:14:9"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "13294:4:9"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13271:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "13279:4:9",
														"type": ""
													}
												],
												"src": "13209:113:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13482:608:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13492:68:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13554:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13506:47:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13506:54:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13496:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13569:93:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13650:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13655:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13576:73:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13576:86:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13569:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13671:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13736:5:9"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13686:49:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13686:56:9"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "13675:7:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13751:21:9",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "13765:7:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "13755:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13841:224:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13855:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "13882:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "13876:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13876:13:9"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "13859:13:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13902:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "13953:13:9"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "13968:3:9"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "13909:43:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13909:63:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13902:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13985:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "14048:6:9"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "13995:52:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13995:60:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13985:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13803:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13806:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13800:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13800:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13814:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13816:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13825:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13828:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13821:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13821:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13816:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13785:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13787:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13796:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "13791:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13781:284:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14074:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14081:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14074:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13461:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13468:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13477:3:9",
														"type": ""
													}
												],
												"src": "13358:732:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14244:225:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14254:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14266:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14277:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14262:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14262:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14254:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14301:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14312:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14297:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14297:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14320:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14326:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14316:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14316:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14290:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14290:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14290:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14346:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14448:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14457:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14354:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14354:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14346:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14216:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14228:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14239:4:9",
														"type": ""
													}
												],
												"src": "14096:373:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14515:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14569:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14578:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14581:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14571:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14571:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14571:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14538:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14560:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "14545:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14545:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14535:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14535:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14528:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14528:40:9"
															},
															"nodeType": "YulIf",
															"src": "14525:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14508:5:9",
														"type": ""
													}
												],
												"src": "14475:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14646:84:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14656:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14678:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "14665:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14665:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14656:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14718:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "14694:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14694:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14694:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14624:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14632:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14640:5:9",
														"type": ""
													}
												],
												"src": "14597:133:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14816:388:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14862:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14864:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14864:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14864:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14837:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14846:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14833:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14833:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14858:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14829:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14829:32:9"
															},
															"nodeType": "YulIf",
															"src": "14826:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "14955:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14970:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14984:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14974:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14999:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15034:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15045:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15030:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15030:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15054:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15009:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15009:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14999:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15082:115:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15097:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15111:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15101:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15127:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15159:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15170:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15155:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15155:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15179:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "15137:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15137:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15127:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14778:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14789:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14801:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14809:6:9",
														"type": ""
													}
												],
												"src": "14736:468:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15293:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15339:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15341:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15341:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15341:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15314:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15323:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15310:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15310:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15335:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15306:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15306:32:9"
															},
															"nodeType": "YulIf",
															"src": "15303:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "15432:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15447:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15461:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15451:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15476:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15511:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15522:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15507:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15507:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15531:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15486:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15486:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15476:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15559:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15574:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15588:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15578:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15604:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15639:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15650:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15635:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15635:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15659:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15614:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15614:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15604:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15255:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15266:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15278:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15286:6:9",
														"type": ""
													}
												],
												"src": "15210:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15833:946:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15880:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15882:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15882:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15882:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15854:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15863:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15850:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15850:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15875:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15846:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15846:33:9"
															},
															"nodeType": "YulIf",
															"src": "15843:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "15973:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15988:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16002:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15992:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16017:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16052:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16063:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16048:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16048:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16072:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "16027:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16027:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16017:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16100:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16115:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16129:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16119:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16145:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16180:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16191:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16176:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16176:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16200:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "16155:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16155:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "16145:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16228:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16243:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16257:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16247:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16273:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16308:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16319:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16304:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16304:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16328:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16283:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16283:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "16273:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16356:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16371:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16385:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16375:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16401:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16436:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16447:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16432:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16432:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16456:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16411:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16411:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "16401:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16484:288:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16499:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16530:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16541:3:9",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16526:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16526:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "16513:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16513:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16503:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16593:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "16595:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16595:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16595:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16565:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16573:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16562:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16562:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "16559:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16690:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16734:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16745:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16730:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16730:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16754:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "16700:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16700:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "16690:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15771:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15782:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15794:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15802:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15810:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15818:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15826:6:9",
														"type": ""
													}
												],
												"src": "15690:1089:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16891:124:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16913:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16921:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16909:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16909:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16925:34:9",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16902:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16902:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16902:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16981:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16989:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16977:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16977:15:9"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16994:13:9",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16970:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16970:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16970:38:9"
														}
													]
												},
												"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16883:6:9",
														"type": ""
													}
												],
												"src": "16785:230:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17167:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17177:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17243:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17248:2:9",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17184:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17184:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17177:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17349:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																	"nodeType": "YulIdentifier",
																	"src": "17260:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17260:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17260:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17362:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17373:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17378:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17369:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17369:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17362:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17155:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17163:3:9",
														"type": ""
													}
												],
												"src": "17021:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17564:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17574:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17586:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17597:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17582:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17582:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17574:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17621:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17632:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17617:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17617:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17640:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17646:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17636:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17636:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17610:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17610:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17610:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17666:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17800:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17674:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17674:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17666:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17544:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17559:4:9",
														"type": ""
													}
												],
												"src": "17393:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17846:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17863:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17866:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17856:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17856:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17856:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17960:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17963:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17953:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17953:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17953:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17984:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17987:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17977:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17977:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17977:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "17818:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18055:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18065:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18079:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18085:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "18075:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18075:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18065:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18096:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18126:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18132:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18122:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18122:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "18100:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18173:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18187:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "18201:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18209:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "18197:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18197:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18187:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "18153:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18146:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18146:26:9"
															},
															"nodeType": "YulIf",
															"src": "18143:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18276:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "18290:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18290:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18290:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "18240:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18263:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18271:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "18260:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18260:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "18237:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18237:38:9"
															},
															"nodeType": "YulIf",
															"src": "18234:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18039:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18048:6:9",
														"type": ""
													}
												],
												"src": "18004:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18436:131:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18458:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18466:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18454:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18454:14:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18470:34:9",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18447:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18447:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18447:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18526:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18534:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18522:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18522:15:9"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18539:20:9",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18515:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18515:45:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18515:45:9"
														}
													]
												},
												"name": "store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18428:6:9",
														"type": ""
													}
												],
												"src": "18330:237:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18719:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18729:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18795:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18800:2:9",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18736:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18736:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18729:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18901:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																	"nodeType": "YulIdentifier",
																	"src": "18812:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18812:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18812:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18914:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18925:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18930:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18921:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18921:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18914:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18707:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18715:3:9",
														"type": ""
													}
												],
												"src": "18573:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19116:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19126:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19138:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19149:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19134:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19134:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19126:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19173:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19184:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19169:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19169:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19192:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19198:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19188:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19188:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19162:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19162:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19162:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19218:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19352:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19226:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19226:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19218:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19096:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19111:4:9",
														"type": ""
													}
												],
												"src": "18945:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19476:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19498:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19506:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19494:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19494:14:9"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19510:34:9",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19487:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19487:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19487:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19566:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19574:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19562:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19562:15:9"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19579:11:9",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19555:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19555:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19555:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19468:6:9",
														"type": ""
													}
												],
												"src": "19370:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19750:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19760:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19826:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19831:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19767:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19767:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19760:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19932:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "19843:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19843:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19843:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19945:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19956:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19961:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19952:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19952:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19945:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19738:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19746:3:9",
														"type": ""
													}
												],
												"src": "19604:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20147:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20157:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20169:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20180:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20165:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20165:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20157:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20204:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20215:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20200:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20200:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20223:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20229:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20219:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20219:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20193:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20193:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20193:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20249:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20383:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20257:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20257:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20249:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20127:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20142:4:9",
														"type": ""
													}
												],
												"src": "19976:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20429:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20446:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20449:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20439:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20439:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20439:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20543:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20546:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20536:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20536:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20536:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20567:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20570:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20560:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20560:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20560:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "20401:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20615:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20632:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20635:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20625:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20625:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20625:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20729:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20732:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20722:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20722:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20722:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20753:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20756:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20746:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20746:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20746:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "20587:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20816:190:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20826:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20853:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20835:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20835:24:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20826:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20949:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20951:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20951:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20951:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20874:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20881:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20871:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20871:77:9"
															},
															"nodeType": "YulIf",
															"src": "20868:103:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20980:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20991:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20998:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20987:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20987:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20980:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20802:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20812:3:9",
														"type": ""
													}
												],
												"src": "20773:233:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21118:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21140:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21148:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21136:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21136:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21152:34:9",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21129:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21129:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21129:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21208:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21216:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21204:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21204:15:9"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21221:11:9",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21197:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21197:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21197:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21110:6:9",
														"type": ""
													}
												],
												"src": "21012:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21392:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21402:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21468:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21473:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21409:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21409:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21402:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21574:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																	"nodeType": "YulIdentifier",
																	"src": "21485:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21485:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21485:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21587:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21598:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21603:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21594:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21594:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21587:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21380:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21388:3:9",
														"type": ""
													}
												],
												"src": "21246:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21789:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21799:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21811:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21822:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21807:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21807:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21799:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21846:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21857:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21842:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21842:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21865:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21871:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21861:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21861:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21835:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21835:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21835:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21891:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22025:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21899:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21899:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21891:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21769:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21784:4:9",
														"type": ""
													}
												],
												"src": "21618:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22149:121:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22171:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22179:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22167:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22167:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22183:34:9",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22160:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22160:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22160:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22239:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22247:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22235:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22235:15:9"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22252:10:9",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22228:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22228:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22228:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22141:6:9",
														"type": ""
													}
												],
												"src": "22043:227:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22422:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22432:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22498:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22503:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22439:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22439:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22432:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22604:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																	"nodeType": "YulIdentifier",
																	"src": "22515:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22515:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22515:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22617:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22628:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22633:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22624:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22624:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22617:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22410:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22418:3:9",
														"type": ""
													}
												],
												"src": "22276:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22819:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22829:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22841:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22852:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22837:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22837:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22829:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22876:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22887:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22872:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22872:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22895:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22901:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22891:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22891:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22865:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22865:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22865:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22921:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23055:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22929:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22929:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22921:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22799:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22814:4:9",
														"type": ""
													}
												],
												"src": "22648:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23179:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23201:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23209:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23197:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23197:14:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23213:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23190:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23190:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23190:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23269:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23277:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23265:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23265:15:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23282:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23258:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23258:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23258:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23171:6:9",
														"type": ""
													}
												],
												"src": "23073:224:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23449:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23459:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23525:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23530:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23466:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23466:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23459:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23631:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																	"nodeType": "YulIdentifier",
																	"src": "23542:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23542:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23542:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23644:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23655:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23660:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23651:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23651:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23644:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23437:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23445:3:9",
														"type": ""
													}
												],
												"src": "23303:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23846:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23856:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23868:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23879:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23864:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23864:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23856:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23903:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23914:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23899:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23899:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23922:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23928:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23918:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23918:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23892:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23892:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23892:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23948:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24082:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23956:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23956:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23948:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23826:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23841:4:9",
														"type": ""
													}
												],
												"src": "23675:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24206:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24228:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24236:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24224:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24224:14:9"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24240:34:9",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24217:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24217:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24217:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24296:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24304:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24292:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24292:15:9"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24309:12:9",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24285:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24285:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24285:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24198:6:9",
														"type": ""
													}
												],
												"src": "24100:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24481:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24491:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24557:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24562:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24498:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24498:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24491:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24663:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"nodeType": "YulIdentifier",
																	"src": "24574:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24574:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24574:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24676:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24687:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24692:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24683:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24683:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24676:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24469:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24477:3:9",
														"type": ""
													}
												],
												"src": "24335:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24878:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24888:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24900:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24911:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24896:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24896:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24888:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24935:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24946:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24931:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24931:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24954:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24960:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24950:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24950:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24924:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24924:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24924:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24980:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25114:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24988:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24988:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24980:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24858:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24873:4:9",
														"type": ""
													}
												],
												"src": "24707:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25176:261:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25186:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25209:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25191:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25191:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25186:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25220:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25243:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25225:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25225:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25220:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25383:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25385:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25385:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25385:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25304:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25311:66:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "25379:1:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25307:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25307:74:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25301:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25301:81:9"
															},
															"nodeType": "YulIf",
															"src": "25298:107:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25415:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25426:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25429:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25422:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25422:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "25415:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25163:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25166:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "25172:3:9",
														"type": ""
													}
												],
												"src": "25132:305:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25669:408:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25679:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25691:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25702:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25687:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25687:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25679:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25726:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25737:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25722:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25722:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25745:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25751:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25741:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25741:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25715:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25715:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25715:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25771:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25873:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25882:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25779:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25779:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25771:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25908:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25919:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25904:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25904:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25928:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25934:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25924:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25924:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25897:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25897:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25897:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25954:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26056:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26065:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25962:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25962:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25954:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25633:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25645:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25653:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25664:4:9",
														"type": ""
													}
												],
												"src": "25443:634:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26189:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26211:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26219:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26207:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26207:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26223:34:9",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26200:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26200:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26200:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26279:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26287:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26275:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26275:15:9"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26292:11:9",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26268:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26268:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26268:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26181:6:9",
														"type": ""
													}
												],
												"src": "26083:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26463:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26473:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26539:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26544:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26480:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26480:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26473:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26645:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "26556:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26556:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26556:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26658:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26669:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26674:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26665:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26665:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26658:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26451:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26459:3:9",
														"type": ""
													}
												],
												"src": "26317:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26860:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26870:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26882:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26893:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26878:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26878:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26870:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26917:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26928:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26913:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26913:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26936:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26942:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26932:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26932:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26906:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26906:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26906:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26962:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27096:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26970:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26970:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26962:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26840:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26855:4:9",
														"type": ""
													}
												],
												"src": "26689:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27240:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27250:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27262:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27273:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27258:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27258:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27250:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27330:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27343:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27354:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27339:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27339:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27286:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27286:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27286:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "27411:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27424:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27435:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27420:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27420:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27367:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27367:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27367:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27204:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27216:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27224:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27235:4:9",
														"type": ""
													}
												],
												"src": "27114:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27517:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27534:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27557:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "27539:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27539:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27527:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27527:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27527:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27505:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27512:3:9",
														"type": ""
													}
												],
												"src": "27452:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27634:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27645:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27661:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27655:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27655:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "27645:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27617:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27627:6:9",
														"type": ""
													}
												],
												"src": "27576:98:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27775:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27792:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27797:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27785:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27785:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27785:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27813:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27832:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27837:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27828:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27828:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "27813:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27747:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27752:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "27763:11:9",
														"type": ""
													}
												],
												"src": "27680:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27944:270:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27954:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28000:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "27968:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27968:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "27958:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28015:77:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28080:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28085:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28022:57:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28022:70:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28015:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28127:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28134:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28123:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28123:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28141:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28146:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "28101:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28101:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28101:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28162:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28173:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "28200:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "28178:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28178:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28169:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28169:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28162:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27925:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27932:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27940:3:9",
														"type": ""
													}
												],
												"src": "27854:360:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28548:725:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28558:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28570:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28581:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28566:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28566:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28558:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28639:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28652:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28663:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28648:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28648:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28595:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28595:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28595:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "28720:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28733:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28744:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28729:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28729:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28676:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28676:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28676:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28769:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28780:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28765:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28765:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28789:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28795:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28785:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28785:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28758:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28758:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28758:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28815:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "28917:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28926:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28823:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28823:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28815:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28952:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28963:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28948:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28948:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28972:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28978:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28968:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28968:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28941:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28941:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28941:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28998:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "29100:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29109:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29006:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29006:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28998:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29135:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29146:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29131:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29131:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29156:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29162:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29152:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29152:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29124:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29124:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29124:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29182:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "29252:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29261:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29190:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29190:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29182:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28488:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "28500:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "28508:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "28516:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "28524:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28532:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28543:4:9",
														"type": ""
													}
												],
												"src": "28220:1053:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29341:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29351:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "29366:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "29360:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29360:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "29351:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29408:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "29382:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29382:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29382:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "29319:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29327:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29335:5:9",
														"type": ""
													}
												],
												"src": "29279:141:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29502:273:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29548:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "29550:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29550:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29550:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "29523:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29532:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29519:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29519:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29544:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "29515:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29515:32:9"
															},
															"nodeType": "YulIf",
															"src": "29512:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "29641:127:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "29656:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29670:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "29660:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "29685:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "29730:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "29741:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29726:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29726:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "29750:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "29695:30:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29695:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "29685:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29472:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "29483:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29495:6:9",
														"type": ""
													}
												],
												"src": "29426:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29834:53:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29844:36:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29869:3:9",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29874:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "29865:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29865:15:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "29844:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_224_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29815:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "29825:8:9",
														"type": ""
													}
												],
												"src": "29781:106:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29932:144:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29969:101:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29998:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30001:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30004:1:9",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "29983:14:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29983:23:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29983:23:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "30019:41:9",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30057:1:9",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "30051:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30051:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_224_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "30026:24:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30026:34:9"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "30019:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "29948:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29948:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29966:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29945:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29945:23:9"
															},
															"nodeType": "YulIf",
															"src": "29942:128:9"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "29928:3:9",
														"type": ""
													}
												],
												"src": "29893:183:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30125:668:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30165:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30167:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "30141:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30141:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30159:4:9",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "30138:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30138:26:9"
															},
															"nodeType": "YulIf",
															"src": "30135:39:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30184:32:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "30196:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30196:20:9"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "30188:4:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30240:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30246:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "30253:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30253:16:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30271:1:9",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30249:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30249:24:9"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "30225:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30225:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30225:49:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30284:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30304:4:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30298:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30298:11:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "30288:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30435:29:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30449:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "30340:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30348:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "30337:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30337:30:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "30388:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30396:4:9",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30384:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30384:17:9"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "30403:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30403:16:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "30381:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30381:39:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "30321:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30321:113:9"
															},
															"nodeType": "YulIf",
															"src": "30318:146:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30474:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30489:4:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "30495:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30485:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30485:17:9"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "30478:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30511:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "30531:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30525:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30525:10:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "30515:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30578:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30580:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30550:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30558:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30547:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30547:30:9"
															},
															"nodeType": "YulIf",
															"src": "30544:43:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30597:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msg",
																				"nodeType": "YulIdentifier",
																				"src": "30616:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30621:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30612:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30612:14:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30628:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30608:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30608:27:9"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "30601:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30692:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30694:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "30650:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "30659:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "30669:14:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "30669:16:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30687:1:9",
																						"type": "",
																						"value": "4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "30665:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30665:24:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30655:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30655:35:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30647:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30647:44:9"
															},
															"nodeType": "YulIf",
															"src": "30644:57:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30731:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "30741:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30753:4:9",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "30759:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30749:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30749:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30737:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30737:30:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "30711:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30711:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30711:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30777:10:9",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "30784:3:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "30777:3:9"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "30121:3:9",
														"type": ""
													}
												],
												"src": "30082:711:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30905:133:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30927:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30935:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30923:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30923:14:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30939:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30916:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30916:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30916:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30995:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31003:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30991:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30991:15:9"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31008:22:9",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30984:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30984:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30984:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30897:6:9",
														"type": ""
													}
												],
												"src": "30799:239:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31190:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31200:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31266:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31271:2:9",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31207:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31207:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "31200:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31372:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																	"nodeType": "YulIdentifier",
																	"src": "31283:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31283:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31283:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31385:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31396:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31401:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31392:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31392:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "31385:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31178:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31186:3:9",
														"type": ""
													}
												],
												"src": "31044:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31587:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31597:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31609:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31620:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31605:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31605:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31597:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31644:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31655:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31640:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31640:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "31663:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31669:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31659:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31659:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31633:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31633:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31633:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31689:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31823:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31697:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31697:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31689:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31567:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "31582:4:9",
														"type": ""
													}
												],
												"src": "31416:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31947:121:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31969:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31977:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31965:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31965:14:9"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31981:34:9",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31958:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31958:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31958:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32037:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32045:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32033:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32033:15:9"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32050:10:9",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32026:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32026:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32026:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31939:6:9",
														"type": ""
													}
												],
												"src": "31841:227:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32220:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32230:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32296:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32301:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32237:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32237:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "32230:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32402:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																	"nodeType": "YulIdentifier",
																	"src": "32313:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32313:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32313:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32415:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32426:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32431:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32422:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32422:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "32415:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "32208:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "32216:3:9",
														"type": ""
													}
												],
												"src": "32074:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32617:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32627:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "32639:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32650:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32635:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32635:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32627:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32674:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32685:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32670:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32670:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "32693:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32699:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "32689:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32689:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32663:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32663:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32663:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32719:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "32853:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32727:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32727:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32719:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "32597:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "32612:4:9",
														"type": ""
													}
												],
												"src": "32446:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33099:523:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33109:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "33121:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33132:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33117:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33117:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33109:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "33190:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33203:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33214:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33199:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33199:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33146:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33146:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33146:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "33271:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33284:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33295:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33280:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33280:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33227:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33227:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33227:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "33353:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33366:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33377:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33362:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33362:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33309:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33309:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33309:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "33435:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33448:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33459:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33444:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33444:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33391:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33391:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33391:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33484:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33495:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33480:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33480:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "33505:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33511:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "33501:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33501:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33473:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33473:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33473:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "33531:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "33601:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "33610:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33539:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33539:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33531:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "33039:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "33051:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "33059:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "33067:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "33075:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "33083:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "33094:4:9",
														"type": ""
													}
												],
												"src": "32871:751:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: balance query for the z\")\n\n        mstore(add(memPtr, 32), \"ero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer caller is not \")\n\n        mstore(add(memPtr, 32), \"owner nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not owner nor\")\n\n        mstore(add(memPtr, 32), \" approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r transfer\")\n\n    }\n\n    function abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a19190611370565b6101d0565b6040516100b391906113bf565b60405180910390f35b6100d660048036038101906100d19190611432565b610298565b6040516100e3919061147a565b60405180910390f35b61010660048036038101906101019190611495565b61037a565b604051610113919061155b565b60405180910390f35b6101366004803603810190610131919061177a565b61040e565b005b610152600480360381019061014d919061190c565b6104af565b60405161015f9190611a42565b60405180910390f35b610182600480360381019061017d9190611a90565b6105c8565b005b61019e60048036038101906101999190611ad0565b6105de565b6040516101ab919061147a565b60405180910390f35b6101ce60048036038101906101c99190611b10565b610672565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610240576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023790611c19565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036357507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610373575061037282610713565b5b9050919050565b60606002805461038990611c68565b80601f01602080910402602001604051908101604052809291908181526020018280546103b590611c68565b80156104025780601f106103d757610100808354040283529160200191610402565b820191906000526020600020905b8154815290600101906020018083116103e557829003601f168201915b50505050509050919050565b61041661077d565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061045c575061045b8561045661077d565b6105de565b5b61049b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049290611d0b565b60405180910390fd5b6104a88585858585610785565b5050505050565b606081518351146104f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ec90611d9d565b60405180910390fd5b6000835167ffffffffffffffff81111561051257610511611582565b5b6040519080825280602002602001820160405280156105405781602001602082028036833780820191505090505b50905060005b84518110156105bd5761058d85828151811061056557610564611dbd565b5b60200260200101518583815181106105805761057f611dbd565b5b60200260200101516101d0565b8282815181106105a05761059f611dbd565b5b602002602001018181525050806105b690611e1b565b9050610546565b508091505092915050565b6105da6105d361077d565b8383610a98565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61067a61077d565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806106c057506106bf856106ba61077d565b6105de565b5b6106ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f690611ed5565b60405180910390fd5b61070c8585858585610c04565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b81518351146107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c090611f67565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f90611ff9565b60405180910390fd5b600061084261077d565b9050610852818787878787610e85565b60005b8451811015610a0357600085828151811061087357610872611dbd565b5b60200260200101519050600085838151811061089257610891611dbd565b5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a9061208b565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109e891906120ab565b92505081905550505050806109fc90611e1b565b9050610855565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a7a929190612101565b60405180910390a4610a90818787878787610e8d565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afd906121aa565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bf7919061147a565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6a90611ff9565b60405180910390fd5b6000610c7d61077d565b9050610c9d818787610c8e88611064565b610c9788611064565b87610e85565b600080600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610d34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2b9061208b565b60405180910390fd5b83810360008087815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508360008087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610de991906120ab565b925050819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051610e669291906121ca565b60405180910390a4610e7c8288888888886110de565b50505050505050565b505050505050565b610eac8473ffffffffffffffffffffffffffffffffffffffff166112b5565b1561105c578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610ef2959493929190612257565b6020604051808303816000875af1925050508015610f2e57506040513d601f19601f82011682018060405250810190610f2b91906122d4565b60015b610fd357610f3a61230e565b806308c379a003610f965750610f4e612330565b80610f595750610f98565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8d919061155b565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fca90612432565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461105a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611051906124c4565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff81111561108357611082611582565b5b6040519080825280602002602001820160405280156110b15781602001602082028036833780820191505090505b50905082816000815181106110c9576110c8611dbd565b5b60200260200101818152505080915050919050565b6110fd8473ffffffffffffffffffffffffffffffffffffffff166112b5565b156112ad578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016111439594939291906124e4565b6020604051808303816000875af192505050801561117f57506040513d601f19601f8201168201806040525081019061117c91906122d4565b60015b6112245761118b61230e565b806308c379a0036111e7575061119f612330565b806111aa57506111e9565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111de919061155b565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121b90612432565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a2906124c4565b60405180910390fd5b505b505050505050565b600080823b905060008111915050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611307826112dc565b9050919050565b611317816112fc565b811461132257600080fd5b50565b6000813590506113348161130e565b92915050565b6000819050919050565b61134d8161133a565b811461135857600080fd5b50565b60008135905061136a81611344565b92915050565b60008060408385031215611387576113866112d2565b5b600061139585828601611325565b92505060206113a68582860161135b565b9150509250929050565b6113b98161133a565b82525050565b60006020820190506113d460008301846113b0565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61140f816113da565b811461141a57600080fd5b50565b60008135905061142c81611406565b92915050565b600060208284031215611448576114476112d2565b5b60006114568482850161141d565b91505092915050565b60008115159050919050565b6114748161145f565b82525050565b600060208201905061148f600083018461146b565b92915050565b6000602082840312156114ab576114aa6112d2565b5b60006114b98482850161135b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114fc5780820151818401526020810190506114e1565b8381111561150b576000848401525b50505050565b6000601f19601f8301169050919050565b600061152d826114c2565b61153781856114cd565b93506115478185602086016114de565b61155081611511565b840191505092915050565b600060208201905081810360008301526115758184611522565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115ba82611511565b810181811067ffffffffffffffff821117156115d9576115d8611582565b5b80604052505050565b60006115ec6112c8565b90506115f882826115b1565b919050565b600067ffffffffffffffff82111561161857611617611582565b5b602082029050602081019050919050565b600080fd5b600061164161163c846115fd565b6115e2565b9050808382526020820190506020840283018581111561166457611663611629565b5b835b8181101561168d5780611679888261135b565b845260208401935050602081019050611666565b5050509392505050565b600082601f8301126116ac576116ab61157d565b5b81356116bc84826020860161162e565b91505092915050565b600080fd5b600067ffffffffffffffff8211156116e5576116e4611582565b5b6116ee82611511565b9050602081019050919050565b82818337600083830152505050565b600061171d611718846116ca565b6115e2565b905082815260208101848484011115611739576117386116c5565b5b6117448482856116fb565b509392505050565b600082601f8301126117615761176061157d565b5b813561177184826020860161170a565b91505092915050565b600080600080600060a08688031215611796576117956112d2565b5b60006117a488828901611325565b95505060206117b588828901611325565b945050604086013567ffffffffffffffff8111156117d6576117d56112d7565b5b6117e288828901611697565b935050606086013567ffffffffffffffff811115611803576118026112d7565b5b61180f88828901611697565b925050608086013567ffffffffffffffff8111156118305761182f6112d7565b5b61183c8882890161174c565b9150509295509295909350565b600067ffffffffffffffff82111561186457611863611582565b5b602082029050602081019050919050565b600061188861188384611849565b6115e2565b905080838252602082019050602084028301858111156118ab576118aa611629565b5b835b818110156118d457806118c08882611325565b8452602084019350506020810190506118ad565b5050509392505050565b600082601f8301126118f3576118f261157d565b5b8135611903848260208601611875565b91505092915050565b60008060408385031215611923576119226112d2565b5b600083013567ffffffffffffffff811115611941576119406112d7565b5b61194d858286016118de565b925050602083013567ffffffffffffffff81111561196e5761196d6112d7565b5b61197a85828601611697565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6119b98161133a565b82525050565b60006119cb83836119b0565b60208301905092915050565b6000602082019050919050565b60006119ef82611984565b6119f9818561198f565b9350611a04836119a0565b8060005b83811015611a35578151611a1c88826119bf565b9750611a27836119d7565b925050600181019050611a08565b5085935050505092915050565b60006020820190508181036000830152611a5c81846119e4565b905092915050565b611a6d8161145f565b8114611a7857600080fd5b50565b600081359050611a8a81611a64565b92915050565b60008060408385031215611aa757611aa66112d2565b5b6000611ab585828601611325565b9250506020611ac685828601611a7b565b9150509250929050565b60008060408385031215611ae757611ae66112d2565b5b6000611af585828601611325565b9250506020611b0685828601611325565b9150509250929050565b600080600080600060a08688031215611b2c57611b2b6112d2565b5b6000611b3a88828901611325565b9550506020611b4b88828901611325565b9450506040611b5c8882890161135b565b9350506060611b6d8882890161135b565b925050608086013567ffffffffffffffff811115611b8e57611b8d6112d7565b5b611b9a8882890161174c565b9150509295509295909350565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b6000611c03602b836114cd565b9150611c0e82611ba7565b604082019050919050565b60006020820190508181036000830152611c3281611bf6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c8057607f821691505b602082108103611c9357611c92611c39565b5b50919050565b7f455243313135353a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b6000611cf56032836114cd565b9150611d0082611c99565b604082019050919050565b60006020820190508181036000830152611d2481611ce8565b9050919050565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b6000611d876029836114cd565b9150611d9282611d2b565b604082019050919050565b60006020820190508181036000830152611db681611d7a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e268261133a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e5857611e57611dec565b5b600182019050919050565b7f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260008201527f20617070726f7665640000000000000000000000000000000000000000000000602082015250565b6000611ebf6029836114cd565b9150611eca82611e63565b604082019050919050565b60006020820190508181036000830152611eee81611eb2565b9050919050565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b6000611f516028836114cd565b9150611f5c82611ef5565b604082019050919050565b60006020820190508181036000830152611f8081611f44565b9050919050565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611fe36025836114cd565b9150611fee82611f87565b604082019050919050565b6000602082019050818103600083015261201281611fd6565b9050919050565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b6000612075602a836114cd565b915061208082612019565b604082019050919050565b600060208201905081810360008301526120a481612068565b9050919050565b60006120b68261133a565b91506120c18361133a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156120f6576120f5611dec565b5b828201905092915050565b6000604082019050818103600083015261211b81856119e4565b9050818103602083015261212f81846119e4565b90509392505050565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b60006121946029836114cd565b915061219f82612138565b604082019050919050565b600060208201905081810360008301526121c381612187565b9050919050565b60006040820190506121df60008301856113b0565b6121ec60208301846113b0565b9392505050565b6121fc816112fc565b82525050565b600081519050919050565b600082825260208201905092915050565b600061222982612202565b612233818561220d565b93506122438185602086016114de565b61224c81611511565b840191505092915050565b600060a08201905061226c60008301886121f3565b61227960208301876121f3565b818103604083015261228b81866119e4565b9050818103606083015261229f81856119e4565b905081810360808301526122b3818461221e565b90509695505050505050565b6000815190506122ce81611406565b92915050565b6000602082840312156122ea576122e96112d2565b5b60006122f8848285016122bf565b91505092915050565b60008160e01c9050919050565b600060033d111561232d5760046000803e61232a600051612301565b90505b90565b600060443d106123bd576123426112c8565b60043d036004823e80513d602482011167ffffffffffffffff8211171561236a5750506123bd565b808201805167ffffffffffffffff81111561238857505050506123bd565b80602083010160043d0385018111156123a55750505050506123bd565b6123b4826020018501866115b1565b82955050505050505b90565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b600061241c6034836114cd565b9150612427826123c0565b604082019050919050565b6000602082019050818103600083015261244b8161240f565b9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b60006124ae6028836114cd565b91506124b982612452565b604082019050919050565b600060208201905081810360008301526124dd816124a1565b9050919050565b600060a0820190506124f960008301886121f3565b61250660208301876121f3565b61251360408301866113b0565b61252060608301856113b0565b8181036080830152612532818461221e565b9050969550505050505056fea2646970667358221220626b3d7992e73c3b600f159ae579c7061e4ec05ddcaec93c34296e465960b81864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x1432 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x147A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x177A JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1A90 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x147A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x240 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x237 SWAP1 PUSH2 0x1C19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x363 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x373 JUMPI POP PUSH2 0x372 DUP3 PUSH2 0x713 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x389 SWAP1 PUSH2 0x1C68 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B5 SWAP1 PUSH2 0x1C68 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x402 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x402 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x416 PUSH2 0x77D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45C JUMPI POP PUSH2 0x45B DUP6 PUSH2 0x456 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST JUMPDEST PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x492 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A8 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x785 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EC SWAP1 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x512 JUMPI PUSH2 0x511 PUSH2 0x1582 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x540 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x58D DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x565 JUMPI PUSH2 0x564 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x580 JUMPI PUSH2 0x57F PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A0 JUMPI PUSH2 0x59F PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B6 SWAP1 PUSH2 0x1E1B JUMP JUMPDEST SWAP1 POP PUSH2 0x546 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DA PUSH2 0x5D3 PUSH2 0x77D JUMP JUMPDEST DUP4 DUP4 PUSH2 0xA98 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67A PUSH2 0x77D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C0 JUMPI POP PUSH2 0x6BF DUP6 PUSH2 0x6BA PUSH2 0x77D JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST JUMPDEST PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F6 SWAP1 PUSH2 0x1ED5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70C DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC04 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C0 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x842 PUSH2 0x77D JUMP JUMPDEST SWAP1 POP PUSH2 0x852 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA03 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x873 JUMPI PUSH2 0x872 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x892 JUMPI PUSH2 0x891 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0x208B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x20AB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9FC SWAP1 PUSH2 0x1E1B JUMP JUMPDEST SWAP1 POP PUSH2 0x855 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA7A SWAP3 SWAP2 SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA90 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xE8D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFD SWAP1 PUSH2 0x21AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBF7 SWAP2 SWAP1 PUSH2 0x147A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6A SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC7D PUSH2 0x77D JUMP JUMPDEST SWAP1 POP PUSH2 0xC9D DUP2 DUP8 DUP8 PUSH2 0xC8E DUP9 PUSH2 0x1064 JUMP JUMPDEST PUSH2 0xC97 DUP9 PUSH2 0x1064 JUMP JUMPDEST DUP8 PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xD34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2B SWAP1 PUSH2 0x208B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP2 SUB PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDE9 SWAP2 SWAP1 PUSH2 0x20AB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xE66 SWAP3 SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE7C DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x10DE JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEAC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12B5 JUMP JUMPDEST ISZERO PUSH2 0x105C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2257 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF2E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF2B SWAP2 SWAP1 PUSH2 0x22D4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFD3 JUMPI PUSH2 0xF3A PUSH2 0x230E JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xF96 JUMPI POP PUSH2 0xF4E PUSH2 0x2330 JUMP JUMPDEST DUP1 PUSH2 0xF59 JUMPI POP PUSH2 0xF98 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8D SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCA SWAP1 PUSH2 0x2432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x105A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1051 SWAP1 PUSH2 0x24C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1083 JUMPI PUSH2 0x1082 PUSH2 0x1582 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10B1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10C9 JUMPI PUSH2 0x10C8 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10FD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12B5 JUMP JUMPDEST ISZERO PUSH2 0x12AD JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1143 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x117F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x117C SWAP2 SWAP1 PUSH2 0x22D4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1224 JUMPI PUSH2 0x118B PUSH2 0x230E JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x11E7 JUMPI POP PUSH2 0x119F PUSH2 0x2330 JUMP JUMPDEST DUP1 PUSH2 0x11AA JUMPI POP PUSH2 0x11E9 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DE SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121B SWAP1 PUSH2 0x2432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A2 SWAP1 PUSH2 0x24C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1307 DUP3 PUSH2 0x12DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1317 DUP2 PUSH2 0x12FC JUMP JUMPDEST DUP2 EQ PUSH2 0x1322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1334 DUP2 PUSH2 0x130E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x134D DUP2 PUSH2 0x133A JUMP JUMPDEST DUP2 EQ PUSH2 0x1358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x136A DUP2 PUSH2 0x1344 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1387 JUMPI PUSH2 0x1386 PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1395 DUP6 DUP3 DUP7 ADD PUSH2 0x1325 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13A6 DUP6 DUP3 DUP7 ADD PUSH2 0x135B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B9 DUP2 PUSH2 0x133A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140F DUP2 PUSH2 0x13DA JUMP JUMPDEST DUP2 EQ PUSH2 0x141A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x142C DUP2 PUSH2 0x1406 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1448 JUMPI PUSH2 0x1447 PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1456 DUP5 DUP3 DUP6 ADD PUSH2 0x141D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1474 DUP2 PUSH2 0x145F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x148F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x146B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14AB JUMPI PUSH2 0x14AA PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14B9 DUP5 DUP3 DUP6 ADD PUSH2 0x135B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14FC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14E1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x150B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x152D DUP3 PUSH2 0x14C2 JUMP JUMPDEST PUSH2 0x1537 DUP2 DUP6 PUSH2 0x14CD JUMP JUMPDEST SWAP4 POP PUSH2 0x1547 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14DE JUMP JUMPDEST PUSH2 0x1550 DUP2 PUSH2 0x1511 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1575 DUP2 DUP5 PUSH2 0x1522 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15BA DUP3 PUSH2 0x1511 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15D9 JUMPI PUSH2 0x15D8 PUSH2 0x1582 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15EC PUSH2 0x12C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x15F8 DUP3 DUP3 PUSH2 0x15B1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1618 JUMPI PUSH2 0x1617 PUSH2 0x1582 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1641 PUSH2 0x163C DUP5 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1664 JUMPI PUSH2 0x1663 PUSH2 0x1629 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x168D JUMPI DUP1 PUSH2 0x1679 DUP9 DUP3 PUSH2 0x135B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1666 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16AC JUMPI PUSH2 0x16AB PUSH2 0x157D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x162E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16E5 JUMPI PUSH2 0x16E4 PUSH2 0x1582 JUMP JUMPDEST JUMPDEST PUSH2 0x16EE DUP3 PUSH2 0x1511 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171D PUSH2 0x1718 DUP5 PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1739 JUMPI PUSH2 0x1738 PUSH2 0x16C5 JUMP JUMPDEST JUMPDEST PUSH2 0x1744 DUP5 DUP3 DUP6 PUSH2 0x16FB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1761 JUMPI PUSH2 0x1760 PUSH2 0x157D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1771 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x170A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1796 JUMPI PUSH2 0x1795 PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17A4 DUP9 DUP3 DUP10 ADD PUSH2 0x1325 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x17B5 DUP9 DUP3 DUP10 ADD PUSH2 0x1325 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17D6 JUMPI PUSH2 0x17D5 PUSH2 0x12D7 JUMP JUMPDEST JUMPDEST PUSH2 0x17E2 DUP9 DUP3 DUP10 ADD PUSH2 0x1697 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1803 JUMPI PUSH2 0x1802 PUSH2 0x12D7 JUMP JUMPDEST JUMPDEST PUSH2 0x180F DUP9 DUP3 DUP10 ADD PUSH2 0x1697 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1830 JUMPI PUSH2 0x182F PUSH2 0x12D7 JUMP JUMPDEST JUMPDEST PUSH2 0x183C DUP9 DUP3 DUP10 ADD PUSH2 0x174C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1864 JUMPI PUSH2 0x1863 PUSH2 0x1582 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1888 PUSH2 0x1883 DUP5 PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x18AB JUMPI PUSH2 0x18AA PUSH2 0x1629 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18D4 JUMPI DUP1 PUSH2 0x18C0 DUP9 DUP3 PUSH2 0x1325 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18AD JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18F3 JUMPI PUSH2 0x18F2 PUSH2 0x157D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1903 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1875 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1923 JUMPI PUSH2 0x1922 PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1941 JUMPI PUSH2 0x1940 PUSH2 0x12D7 JUMP JUMPDEST JUMPDEST PUSH2 0x194D DUP6 DUP3 DUP7 ADD PUSH2 0x18DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x196E JUMPI PUSH2 0x196D PUSH2 0x12D7 JUMP JUMPDEST JUMPDEST PUSH2 0x197A DUP6 DUP3 DUP7 ADD PUSH2 0x1697 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B9 DUP2 PUSH2 0x133A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19CB DUP4 DUP4 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19EF DUP3 PUSH2 0x1984 JUMP JUMPDEST PUSH2 0x19F9 DUP2 DUP6 PUSH2 0x198F JUMP JUMPDEST SWAP4 POP PUSH2 0x1A04 DUP4 PUSH2 0x19A0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A35 JUMPI DUP2 MLOAD PUSH2 0x1A1C DUP9 DUP3 PUSH2 0x19BF JUMP JUMPDEST SWAP8 POP PUSH2 0x1A27 DUP4 PUSH2 0x19D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A08 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A5C DUP2 DUP5 PUSH2 0x19E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6D DUP2 PUSH2 0x145F JUMP JUMPDEST DUP2 EQ PUSH2 0x1A78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A8A DUP2 PUSH2 0x1A64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AA7 JUMPI PUSH2 0x1AA6 PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AB5 DUP6 DUP3 DUP7 ADD PUSH2 0x1325 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AC6 DUP6 DUP3 DUP7 ADD PUSH2 0x1A7B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE7 JUMPI PUSH2 0x1AE6 PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF5 DUP6 DUP3 DUP7 ADD PUSH2 0x1325 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B06 DUP6 DUP3 DUP7 ADD PUSH2 0x1325 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B2C JUMPI PUSH2 0x1B2B PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B3A DUP9 DUP3 DUP10 ADD PUSH2 0x1325 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B4B DUP9 DUP3 DUP10 ADD PUSH2 0x1325 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1B5C DUP9 DUP3 DUP10 ADD PUSH2 0x135B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1B6D DUP9 DUP3 DUP10 ADD PUSH2 0x135B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B8E JUMPI PUSH2 0x1B8D PUSH2 0x12D7 JUMP JUMPDEST JUMPDEST PUSH2 0x1B9A DUP9 DUP3 DUP10 ADD PUSH2 0x174C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C03 PUSH1 0x2B DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0E DUP3 PUSH2 0x1BA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C32 DUP2 PUSH2 0x1BF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C80 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C93 JUMPI PUSH2 0x1C92 PUSH2 0x1C39 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF5 PUSH1 0x32 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1D00 DUP3 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D24 DUP2 PUSH2 0x1CE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D87 PUSH1 0x29 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1D92 DUP3 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB6 DUP2 PUSH2 0x1D7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E26 DUP3 PUSH2 0x133A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E58 JUMPI PUSH2 0x1E57 PUSH2 0x1DEC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EBF PUSH1 0x29 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECA DUP3 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EEE DUP2 PUSH2 0x1EB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F51 PUSH1 0x28 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1F5C DUP3 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F80 DUP2 PUSH2 0x1F44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE3 PUSH1 0x25 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEE DUP3 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2012 DUP2 PUSH2 0x1FD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2075 PUSH1 0x2A DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x2080 DUP3 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20A4 DUP2 PUSH2 0x2068 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B6 DUP3 PUSH2 0x133A JUMP JUMPDEST SWAP2 POP PUSH2 0x20C1 DUP4 PUSH2 0x133A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x20F6 JUMPI PUSH2 0x20F5 PUSH2 0x1DEC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x211B DUP2 DUP6 PUSH2 0x19E4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x212F DUP2 DUP5 PUSH2 0x19E4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2194 PUSH1 0x29 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x219F DUP3 PUSH2 0x2138 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21C3 DUP2 PUSH2 0x2187 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21DF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13B0 JUMP JUMPDEST PUSH2 0x21EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x21FC DUP2 PUSH2 0x12FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2229 DUP3 PUSH2 0x2202 JUMP JUMPDEST PUSH2 0x2233 DUP2 DUP6 PUSH2 0x220D JUMP JUMPDEST SWAP4 POP PUSH2 0x2243 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14DE JUMP JUMPDEST PUSH2 0x224C DUP2 PUSH2 0x1511 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x226C PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x2279 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x21F3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x228B DUP2 DUP7 PUSH2 0x19E4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x229F DUP2 DUP6 PUSH2 0x19E4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x22B3 DUP2 DUP5 PUSH2 0x221E JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22CE DUP2 PUSH2 0x1406 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22EA JUMPI PUSH2 0x22E9 PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22F8 DUP5 DUP3 DUP6 ADD PUSH2 0x22BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x232D JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x232A PUSH1 0x0 MLOAD PUSH2 0x2301 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x23BD JUMPI PUSH2 0x2342 PUSH2 0x12C8 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x236A JUMPI POP POP PUSH2 0x23BD JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2388 JUMPI POP POP POP POP PUSH2 0x23BD JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x23A5 JUMPI POP POP POP POP POP PUSH2 0x23BD JUMP JUMPDEST PUSH2 0x23B4 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x15B1 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x241C PUSH1 0x34 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x2427 DUP3 PUSH2 0x23C0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x244B DUP2 PUSH2 0x240F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24AE PUSH1 0x28 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x24B9 DUP3 PUSH2 0x2452 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24DD DUP2 PUSH2 0x24A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x24F9 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x2506 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x2513 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x13B0 JUMP JUMPDEST PUSH2 0x2520 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x13B0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2532 DUP2 DUP5 PUSH2 0x221E JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x6B3D79 SWAP3 0xE7 EXTCODECOPY EXTCODESIZE PUSH1 0xF ISZERO SWAP11 0xE5 PUSH26 0xC7061E4EC05DDCAEC93C34296E465960B81864736F6C63430008 0xD STOP CALLER ",
							"sourceMap": "555:14720:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:228;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1221:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1925:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4045:430;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2555:508;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3131:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3351:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3584:389;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2170:228;2256:7;2302:1;2283:21;;:7;:21;;;2275:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2369:9;:13;2379:2;2369:13;;;;;;;;;;;:22;2383:7;2369:22;;;;;;;;;;;;;;;;2362:29;;2170:228;;;;:::o;1221:305::-;1323:4;1373:26;1358:41;;;:11;:41;;;;:109;;;;1430:37;1415:52;;;:11;:52;;;;1358:109;:161;;;;1483:36;1507:11;1483:23;:36::i;:::-;1358:161;1339:180;;1221:305;;;:::o;1925:103::-;1985:13;2017:4;2010:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:103;;;:::o;4045:430::-;4278:12;:10;:12::i;:::-;4270:20;;:4;:20;;;:60;;;;4294:36;4311:4;4317:12;:10;:12::i;:::-;4294:16;:36::i;:::-;4270:60;4249:157;;;;;;;;;;;;:::i;:::-;;;;;;;;;4416:52;4439:4;4445:2;4449:3;4454:7;4463:4;4416:22;:52::i;:::-;4045:430;;;;;:::o;2555:508::-;2706:16;2765:3;:10;2746:8;:15;:29;2738:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;2832:30;2879:8;:15;2865:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2832:63;;2911:9;2906:120;2930:8;:15;2926:1;:19;2906:120;;;2985:30;2995:8;3004:1;2995:11;;;;;;;;:::i;:::-;;;;;;;;3008:3;3012:1;3008:6;;;;;;;;:::i;:::-;;;;;;;;2985:9;:30::i;:::-;2966:13;2980:1;2966:16;;;;;;;;:::i;:::-;;;;;;;:49;;;;;2947:3;;;;:::i;:::-;;;2906:120;;;;3043:13;3036:20;;;2555:508;;;;:::o;3131:153::-;3225:52;3244:12;:10;:12::i;:::-;3258:8;3268;3225:18;:52::i;:::-;3131:153;;:::o;3351:166::-;3450:4;3473:18;:27;3492:7;3473:27;;;;;;;;;;;;;;;:37;3501:8;3473:37;;;;;;;;;;;;;;;;;;;;;;;;;3466:44;;3351:166;;;;:::o;3584:389::-;3792:12;:10;:12::i;:::-;3784:20;;:4;:20;;;:60;;;;3808:36;3825:4;3831:12;:10;:12::i;:::-;3808:16;:36::i;:::-;3784:60;3763:148;;;;;;;;;;;;:::i;:::-;;;;;;;;;3921:45;3939:4;3945:2;3949;3953:6;3961:4;3921:17;:45::i;:::-;3584:389;;;;;:::o;829:155:6:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;6068:1045:0:-;6288:7;:14;6274:3;:10;:28;6266:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;6379:1;6365:16;;:2;:16;;;6357:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6434:16;6453:12;:10;:12::i;:::-;6434:31;;6476:60;6497:8;6507:4;6513:2;6517:3;6522:7;6531:4;6476:20;:60::i;:::-;6552:9;6547:411;6571:3;:10;6567:1;:14;6547:411;;;6602:10;6615:3;6619:1;6615:6;;;;;;;;:::i;:::-;;;;;;;;6602:19;;6635:14;6652:7;6660:1;6652:10;;;;;;;;:::i;:::-;;;;;;;;6635:27;;6677:19;6699:9;:13;6709:2;6699:13;;;;;;;;;;;:19;6713:4;6699:19;;;;;;;;;;;;;;;;6677:41;;6755:6;6740:11;:21;;6732:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;6886:6;6872:11;:20;6850:9;:13;6860:2;6850:13;;;;;;;;;;;:19;6864:4;6850:19;;;;;;;;;;;;;;;:42;;;;6941:6;6920:9;:13;6930:2;6920:13;;;;;;;;;;;:17;6934:2;6920:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;6588:370;;;6583:3;;;;:::i;:::-;;;6547:411;;;;7003:2;6973:47;;6997:4;6973:47;;6987:8;6973:47;;;7007:3;7012:7;6973:47;;;;;;;:::i;:::-;;;;;;;;7031:75;7067:8;7077:4;7083:2;7087:3;7092:7;7101:4;7031:35;:75::i;:::-;6256:857;6068:1045;;;;;:::o;12074:323::-;12224:8;12215:17;;:5;:17;;;12207:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;12326:8;12288:18;:25;12307:5;12288:25;;;;;;;;;;;;;;;:35;12314:8;12288:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;12371:8;12349:41;;12364:5;12349:41;;;12381:8;12349:41;;;;;;:::i;:::-;;;;;;;;12074:323;;;:::o;4925:797::-;5120:1;5106:16;;:2;:16;;;5098:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5175:16;5194:12;:10;:12::i;:::-;5175:31;;5217:96;5238:8;5248:4;5254:2;5258:21;5276:2;5258:17;:21::i;:::-;5281:25;5299:6;5281:17;:25::i;:::-;5308:4;5217:20;:96::i;:::-;5324:19;5346:9;:13;5356:2;5346:13;;;;;;;;;;;:19;5360:4;5346:19;;;;;;;;;;;;;;;;5324:41;;5398:6;5383:11;:21;;5375:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5521:6;5507:11;:20;5485:9;:13;5495:2;5485:13;;;;;;;;;;;:19;5499:4;5485:19;;;;;;;;;;;;;;;:42;;;;5568:6;5547:9;:13;5557:2;5547:13;;;;;;;;;;;:17;5561:2;5547:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;5621:2;5590:46;;5615:4;5590:46;;5605:8;5590:46;;;5625:2;5629:6;5590:46;;;;;;;:::i;:::-;;;;;;;;5647:68;5678:8;5688:4;5694:2;5698;5702:6;5710:4;5647:30;:68::i;:::-;5088:634;;4925:797;;;;;:::o;13331:214::-;;;;;;;:::o;14282:792::-;14514:15;:2;:13;;;:15::i;:::-;14510:558;;;14566:2;14549:43;;;14593:8;14603:4;14609:3;14614:7;14623:4;14549:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14545:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;14934:6;14927:14;;;;;;;;;;;:::i;:::-;;;;;;;;14545:513;;;14981:62;;;;;;;;;;:::i;:::-;;;;;;;;14545:513;14719:48;;;14707:60;;;:8;:60;;;;14703:157;;14791:50;;;;;;;;;;:::i;:::-;;;;;;;;14703:157;14629:245;14510:558;14282:792;;;;;;:::o;15080:193::-;15146:16;15174:22;15213:1;15199:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15174:41;;15236:7;15225:5;15231:1;15225:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;15261:5;15254:12;;;15080:193;;;:::o;13551:725::-;13758:15;:2;:13;;;:15::i;:::-;13754:516;;;13810:2;13793:38;;;13832:8;13842:4;13848:2;13852:6;13860:4;13793:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;13789:471;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;14136:6;14129:14;;;;;;;;;;;:::i;:::-;;;;;;;;13789:471;;;14183:62;;;;;;;;;;:::i;:::-;;;;;;;;13789:471;13926:43;;;13914:55;;;:8;:55;;;;13910:152;;13993:50;;;;;;;;;;:::i;:::-;;;;;;;;13910:152;13866:210;13754:516;13551:725;;;;;;:::o;771:377:4:-;831:4;1034:12;1099:7;1087:20;1079:28;;1140:1;1133:4;:8;1126:15;;;771:377;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:307::-;3896:1;3906:113;3920:6;3917:1;3914:13;3906:113;;;4005:1;4000:3;3996:11;3990:18;3986:1;3981:3;3977:11;3970:39;3942:2;3939:1;3935:10;3930:15;;3906:113;;;4037:6;4034:1;4031:13;4028:101;;;4117:1;4108:6;4103:3;4099:16;4092:27;4028:101;3877:258;3828:307;;;:::o;4141:102::-;4182:6;4233:2;4229:7;4224:2;4217:5;4213:14;4209:28;4199:38;;4141:102;;;:::o;4249:364::-;4337:3;4365:39;4398:5;4365:39;:::i;:::-;4420:71;4484:6;4479:3;4420:71;:::i;:::-;4413:78;;4500:52;4545:6;4540:3;4533:4;4526:5;4522:16;4500:52;:::i;:::-;4577:29;4599:6;4577:29;:::i;:::-;4572:3;4568:39;4561:46;;4341:272;4249:364;;;;:::o;4619:313::-;4732:4;4770:2;4759:9;4755:18;4747:26;;4819:9;4813:4;4809:20;4805:1;4794:9;4790:17;4783:47;4847:78;4920:4;4911:6;4847:78;:::i;:::-;4839:86;;4619:313;;;;:::o;4938:117::-;5047:1;5044;5037:12;5061:180;5109:77;5106:1;5099:88;5206:4;5203:1;5196:15;5230:4;5227:1;5220:15;5247:281;5330:27;5352:4;5330:27;:::i;:::-;5322:6;5318:40;5460:6;5448:10;5445:22;5424:18;5412:10;5409:34;5406:62;5403:88;;;5471:18;;:::i;:::-;5403:88;5511:10;5507:2;5500:22;5290:238;5247:281;;:::o;5534:129::-;5568:6;5595:20;;:::i;:::-;5585:30;;5624:33;5652:4;5644:6;5624:33;:::i;:::-;5534:129;;;:::o;5669:311::-;5746:4;5836:18;5828:6;5825:30;5822:56;;;5858:18;;:::i;:::-;5822:56;5908:4;5900:6;5896:17;5888:25;;5968:4;5962;5958:15;5950:23;;5669:311;;;:::o;5986:117::-;6095:1;6092;6085:12;6126:710;6222:5;6247:81;6263:64;6320:6;6263:64;:::i;:::-;6247:81;:::i;:::-;6238:90;;6348:5;6377:6;6370:5;6363:21;6411:4;6404:5;6400:16;6393:23;;6464:4;6456:6;6452:17;6444:6;6440:30;6493:3;6485:6;6482:15;6479:122;;;6512:79;;:::i;:::-;6479:122;6627:6;6610:220;6644:6;6639:3;6636:15;6610:220;;;6719:3;6748:37;6781:3;6769:10;6748:37;:::i;:::-;6743:3;6736:50;6815:4;6810:3;6806:14;6799:21;;6686:144;6670:4;6665:3;6661:14;6654:21;;6610:220;;;6614:21;6228:608;;6126:710;;;;;:::o;6859:370::-;6930:5;6979:3;6972:4;6964:6;6960:17;6956:27;6946:122;;6987:79;;:::i;:::-;6946:122;7104:6;7091:20;7129:94;7219:3;7211:6;7204:4;7196:6;7192:17;7129:94;:::i;:::-;7120:103;;6936:293;6859:370;;;;:::o;7235:117::-;7344:1;7341;7334:12;7358:307;7419:4;7509:18;7501:6;7498:30;7495:56;;;7531:18;;:::i;:::-;7495:56;7569:29;7591:6;7569:29;:::i;:::-;7561:37;;7653:4;7647;7643:15;7635:23;;7358:307;;;:::o;7671:154::-;7755:6;7750:3;7745;7732:30;7817:1;7808:6;7803:3;7799:16;7792:27;7671:154;;;:::o;7831:410::-;7908:5;7933:65;7949:48;7990:6;7949:48;:::i;:::-;7933:65;:::i;:::-;7924:74;;8021:6;8014:5;8007:21;8059:4;8052:5;8048:16;8097:3;8088:6;8083:3;8079:16;8076:25;8073:112;;;8104:79;;:::i;:::-;8073:112;8194:41;8228:6;8223:3;8218;8194:41;:::i;:::-;7914:327;7831:410;;;;;:::o;8260:338::-;8315:5;8364:3;8357:4;8349:6;8345:17;8341:27;8331:122;;8372:79;;:::i;:::-;8331:122;8489:6;8476:20;8514:78;8588:3;8580:6;8573:4;8565:6;8561:17;8514:78;:::i;:::-;8505:87;;8321:277;8260:338;;;;:::o;8604:1509::-;8758:6;8766;8774;8782;8790;8839:3;8827:9;8818:7;8814:23;8810:33;8807:120;;;8846:79;;:::i;:::-;8807:120;8966:1;8991:53;9036:7;9027:6;9016:9;9012:22;8991:53;:::i;:::-;8981:63;;8937:117;9093:2;9119:53;9164:7;9155:6;9144:9;9140:22;9119:53;:::i;:::-;9109:63;;9064:118;9249:2;9238:9;9234:18;9221:32;9280:18;9272:6;9269:30;9266:117;;;9302:79;;:::i;:::-;9266:117;9407:78;9477:7;9468:6;9457:9;9453:22;9407:78;:::i;:::-;9397:88;;9192:303;9562:2;9551:9;9547:18;9534:32;9593:18;9585:6;9582:30;9579:117;;;9615:79;;:::i;:::-;9579:117;9720:78;9790:7;9781:6;9770:9;9766:22;9720:78;:::i;:::-;9710:88;;9505:303;9875:3;9864:9;9860:19;9847:33;9907:18;9899:6;9896:30;9893:117;;;9929:79;;:::i;:::-;9893:117;10034:62;10088:7;10079:6;10068:9;10064:22;10034:62;:::i;:::-;10024:72;;9818:288;8604:1509;;;;;;;;:::o;10119:311::-;10196:4;10286:18;10278:6;10275:30;10272:56;;;10308:18;;:::i;:::-;10272:56;10358:4;10350:6;10346:17;10338:25;;10418:4;10412;10408:15;10400:23;;10119:311;;;:::o;10453:710::-;10549:5;10574:81;10590:64;10647:6;10590:64;:::i;:::-;10574:81;:::i;:::-;10565:90;;10675:5;10704:6;10697:5;10690:21;10738:4;10731:5;10727:16;10720:23;;10791:4;10783:6;10779:17;10771:6;10767:30;10820:3;10812:6;10809:15;10806:122;;;10839:79;;:::i;:::-;10806:122;10954:6;10937:220;10971:6;10966:3;10963:15;10937:220;;;11046:3;11075:37;11108:3;11096:10;11075:37;:::i;:::-;11070:3;11063:50;11142:4;11137:3;11133:14;11126:21;;11013:144;10997:4;10992:3;10988:14;10981:21;;10937:220;;;10941:21;10555:608;;10453:710;;;;;:::o;11186:370::-;11257:5;11306:3;11299:4;11291:6;11287:17;11283:27;11273:122;;11314:79;;:::i;:::-;11273:122;11431:6;11418:20;11456:94;11546:3;11538:6;11531:4;11523:6;11519:17;11456:94;:::i;:::-;11447:103;;11263:293;11186:370;;;;:::o;11562:894::-;11680:6;11688;11737:2;11725:9;11716:7;11712:23;11708:32;11705:119;;;11743:79;;:::i;:::-;11705:119;11891:1;11880:9;11876:17;11863:31;11921:18;11913:6;11910:30;11907:117;;;11943:79;;:::i;:::-;11907:117;12048:78;12118:7;12109:6;12098:9;12094:22;12048:78;:::i;:::-;12038:88;;11834:302;12203:2;12192:9;12188:18;12175:32;12234:18;12226:6;12223:30;12220:117;;;12256:79;;:::i;:::-;12220:117;12361:78;12431:7;12422:6;12411:9;12407:22;12361:78;:::i;:::-;12351:88;;12146:303;11562:894;;;;;:::o;12462:114::-;12529:6;12563:5;12557:12;12547:22;;12462:114;;;:::o;12582:184::-;12681:11;12715:6;12710:3;12703:19;12755:4;12750:3;12746:14;12731:29;;12582:184;;;;:::o;12772:132::-;12839:4;12862:3;12854:11;;12892:4;12887:3;12883:14;12875:22;;12772:132;;;:::o;12910:108::-;12987:24;13005:5;12987:24;:::i;:::-;12982:3;12975:37;12910:108;;:::o;13024:179::-;13093:10;13114:46;13156:3;13148:6;13114:46;:::i;:::-;13192:4;13187:3;13183:14;13169:28;;13024:179;;;;:::o;13209:113::-;13279:4;13311;13306:3;13302:14;13294:22;;13209:113;;;:::o;13358:732::-;13477:3;13506:54;13554:5;13506:54;:::i;:::-;13576:86;13655:6;13650:3;13576:86;:::i;:::-;13569:93;;13686:56;13736:5;13686:56;:::i;:::-;13765:7;13796:1;13781:284;13806:6;13803:1;13800:13;13781:284;;;13882:6;13876:13;13909:63;13968:3;13953:13;13909:63;:::i;:::-;13902:70;;13995:60;14048:6;13995:60;:::i;:::-;13985:70;;13841:224;13828:1;13825;13821:9;13816:14;;13781:284;;;13785:14;14081:3;14074:10;;13482:608;;;13358:732;;;;:::o;14096:373::-;14239:4;14277:2;14266:9;14262:18;14254:26;;14326:9;14320:4;14316:20;14312:1;14301:9;14297:17;14290:47;14354:108;14457:4;14448:6;14354:108;:::i;:::-;14346:116;;14096:373;;;;:::o;14475:116::-;14545:21;14560:5;14545:21;:::i;:::-;14538:5;14535:32;14525:60;;14581:1;14578;14571:12;14525:60;14475:116;:::o;14597:133::-;14640:5;14678:6;14665:20;14656:29;;14694:30;14718:5;14694:30;:::i;:::-;14597:133;;;;:::o;14736:468::-;14801:6;14809;14858:2;14846:9;14837:7;14833:23;14829:32;14826:119;;;14864:79;;:::i;:::-;14826:119;14984:1;15009:53;15054:7;15045:6;15034:9;15030:22;15009:53;:::i;:::-;14999:63;;14955:117;15111:2;15137:50;15179:7;15170:6;15159:9;15155:22;15137:50;:::i;:::-;15127:60;;15082:115;14736:468;;;;;:::o;15210:474::-;15278:6;15286;15335:2;15323:9;15314:7;15310:23;15306:32;15303:119;;;15341:79;;:::i;:::-;15303:119;15461:1;15486:53;15531:7;15522:6;15511:9;15507:22;15486:53;:::i;:::-;15476:63;;15432:117;15588:2;15614:53;15659:7;15650:6;15639:9;15635:22;15614:53;:::i;:::-;15604:63;;15559:118;15210:474;;;;;:::o;15690:1089::-;15794:6;15802;15810;15818;15826;15875:3;15863:9;15854:7;15850:23;15846:33;15843:120;;;15882:79;;:::i;:::-;15843:120;16002:1;16027:53;16072:7;16063:6;16052:9;16048:22;16027:53;:::i;:::-;16017:63;;15973:117;16129:2;16155:53;16200:7;16191:6;16180:9;16176:22;16155:53;:::i;:::-;16145:63;;16100:118;16257:2;16283:53;16328:7;16319:6;16308:9;16304:22;16283:53;:::i;:::-;16273:63;;16228:118;16385:2;16411:53;16456:7;16447:6;16436:9;16432:22;16411:53;:::i;:::-;16401:63;;16356:118;16541:3;16530:9;16526:19;16513:33;16573:18;16565:6;16562:30;16559:117;;;16595:79;;:::i;:::-;16559:117;16700:62;16754:7;16745:6;16734:9;16730:22;16700:62;:::i;:::-;16690:72;;16484:288;15690:1089;;;;;;;;:::o;16785:230::-;16925:34;16921:1;16913:6;16909:14;16902:58;16994:13;16989:2;16981:6;16977:15;16970:38;16785:230;:::o;17021:366::-;17163:3;17184:67;17248:2;17243:3;17184:67;:::i;:::-;17177:74;;17260:93;17349:3;17260:93;:::i;:::-;17378:2;17373:3;17369:12;17362:19;;17021:366;;;:::o;17393:419::-;17559:4;17597:2;17586:9;17582:18;17574:26;;17646:9;17640:4;17636:20;17632:1;17621:9;17617:17;17610:47;17674:131;17800:4;17674:131;:::i;:::-;17666:139;;17393:419;;;:::o;17818:180::-;17866:77;17863:1;17856:88;17963:4;17960:1;17953:15;17987:4;17984:1;17977:15;18004:320;18048:6;18085:1;18079:4;18075:12;18065:22;;18132:1;18126:4;18122:12;18153:18;18143:81;;18209:4;18201:6;18197:17;18187:27;;18143:81;18271:2;18263:6;18260:14;18240:18;18237:38;18234:84;;18290:18;;:::i;:::-;18234:84;18055:269;18004:320;;;:::o;18330:237::-;18470:34;18466:1;18458:6;18454:14;18447:58;18539:20;18534:2;18526:6;18522:15;18515:45;18330:237;:::o;18573:366::-;18715:3;18736:67;18800:2;18795:3;18736:67;:::i;:::-;18729:74;;18812:93;18901:3;18812:93;:::i;:::-;18930:2;18925:3;18921:12;18914:19;;18573:366;;;:::o;18945:419::-;19111:4;19149:2;19138:9;19134:18;19126:26;;19198:9;19192:4;19188:20;19184:1;19173:9;19169:17;19162:47;19226:131;19352:4;19226:131;:::i;:::-;19218:139;;18945:419;;;:::o;19370:228::-;19510:34;19506:1;19498:6;19494:14;19487:58;19579:11;19574:2;19566:6;19562:15;19555:36;19370:228;:::o;19604:366::-;19746:3;19767:67;19831:2;19826:3;19767:67;:::i;:::-;19760:74;;19843:93;19932:3;19843:93;:::i;:::-;19961:2;19956:3;19952:12;19945:19;;19604:366;;;:::o;19976:419::-;20142:4;20180:2;20169:9;20165:18;20157:26;;20229:9;20223:4;20219:20;20215:1;20204:9;20200:17;20193:47;20257:131;20383:4;20257:131;:::i;:::-;20249:139;;19976:419;;;:::o;20401:180::-;20449:77;20446:1;20439:88;20546:4;20543:1;20536:15;20570:4;20567:1;20560:15;20587:180;20635:77;20632:1;20625:88;20732:4;20729:1;20722:15;20756:4;20753:1;20746:15;20773:233;20812:3;20835:24;20853:5;20835:24;:::i;:::-;20826:33;;20881:66;20874:5;20871:77;20868:103;;20951:18;;:::i;:::-;20868:103;20998:1;20991:5;20987:13;20980:20;;20773:233;;;:::o;21012:228::-;21152:34;21148:1;21140:6;21136:14;21129:58;21221:11;21216:2;21208:6;21204:15;21197:36;21012:228;:::o;21246:366::-;21388:3;21409:67;21473:2;21468:3;21409:67;:::i;:::-;21402:74;;21485:93;21574:3;21485:93;:::i;:::-;21603:2;21598:3;21594:12;21587:19;;21246:366;;;:::o;21618:419::-;21784:4;21822:2;21811:9;21807:18;21799:26;;21871:9;21865:4;21861:20;21857:1;21846:9;21842:17;21835:47;21899:131;22025:4;21899:131;:::i;:::-;21891:139;;21618:419;;;:::o;22043:227::-;22183:34;22179:1;22171:6;22167:14;22160:58;22252:10;22247:2;22239:6;22235:15;22228:35;22043:227;:::o;22276:366::-;22418:3;22439:67;22503:2;22498:3;22439:67;:::i;:::-;22432:74;;22515:93;22604:3;22515:93;:::i;:::-;22633:2;22628:3;22624:12;22617:19;;22276:366;;;:::o;22648:419::-;22814:4;22852:2;22841:9;22837:18;22829:26;;22901:9;22895:4;22891:20;22887:1;22876:9;22872:17;22865:47;22929:131;23055:4;22929:131;:::i;:::-;22921:139;;22648:419;;;:::o;23073:224::-;23213:34;23209:1;23201:6;23197:14;23190:58;23282:7;23277:2;23269:6;23265:15;23258:32;23073:224;:::o;23303:366::-;23445:3;23466:67;23530:2;23525:3;23466:67;:::i;:::-;23459:74;;23542:93;23631:3;23542:93;:::i;:::-;23660:2;23655:3;23651:12;23644:19;;23303:366;;;:::o;23675:419::-;23841:4;23879:2;23868:9;23864:18;23856:26;;23928:9;23922:4;23918:20;23914:1;23903:9;23899:17;23892:47;23956:131;24082:4;23956:131;:::i;:::-;23948:139;;23675:419;;;:::o;24100:229::-;24240:34;24236:1;24228:6;24224:14;24217:58;24309:12;24304:2;24296:6;24292:15;24285:37;24100:229;:::o;24335:366::-;24477:3;24498:67;24562:2;24557:3;24498:67;:::i;:::-;24491:74;;24574:93;24663:3;24574:93;:::i;:::-;24692:2;24687:3;24683:12;24676:19;;24335:366;;;:::o;24707:419::-;24873:4;24911:2;24900:9;24896:18;24888:26;;24960:9;24954:4;24950:20;24946:1;24935:9;24931:17;24924:47;24988:131;25114:4;24988:131;:::i;:::-;24980:139;;24707:419;;;:::o;25132:305::-;25172:3;25191:20;25209:1;25191:20;:::i;:::-;25186:25;;25225:20;25243:1;25225:20;:::i;:::-;25220:25;;25379:1;25311:66;25307:74;25304:1;25301:81;25298:107;;;25385:18;;:::i;:::-;25298:107;25429:1;25426;25422:9;25415:16;;25132:305;;;;:::o;25443:634::-;25664:4;25702:2;25691:9;25687:18;25679:26;;25751:9;25745:4;25741:20;25737:1;25726:9;25722:17;25715:47;25779:108;25882:4;25873:6;25779:108;:::i;:::-;25771:116;;25934:9;25928:4;25924:20;25919:2;25908:9;25904:18;25897:48;25962:108;26065:4;26056:6;25962:108;:::i;:::-;25954:116;;25443:634;;;;;:::o;26083:228::-;26223:34;26219:1;26211:6;26207:14;26200:58;26292:11;26287:2;26279:6;26275:15;26268:36;26083:228;:::o;26317:366::-;26459:3;26480:67;26544:2;26539:3;26480:67;:::i;:::-;26473:74;;26556:93;26645:3;26556:93;:::i;:::-;26674:2;26669:3;26665:12;26658:19;;26317:366;;;:::o;26689:419::-;26855:4;26893:2;26882:9;26878:18;26870:26;;26942:9;26936:4;26932:20;26928:1;26917:9;26913:17;26906:47;26970:131;27096:4;26970:131;:::i;:::-;26962:139;;26689:419;;;:::o;27114:332::-;27235:4;27273:2;27262:9;27258:18;27250:26;;27286:71;27354:1;27343:9;27339:17;27330:6;27286:71;:::i;:::-;27367:72;27435:2;27424:9;27420:18;27411:6;27367:72;:::i;:::-;27114:332;;;;;:::o;27452:118::-;27539:24;27557:5;27539:24;:::i;:::-;27534:3;27527:37;27452:118;;:::o;27576:98::-;27627:6;27661:5;27655:12;27645:22;;27576:98;;;:::o;27680:168::-;27763:11;27797:6;27792:3;27785:19;27837:4;27832:3;27828:14;27813:29;;27680:168;;;;:::o;27854:360::-;27940:3;27968:38;28000:5;27968:38;:::i;:::-;28022:70;28085:6;28080:3;28022:70;:::i;:::-;28015:77;;28101:52;28146:6;28141:3;28134:4;28127:5;28123:16;28101:52;:::i;:::-;28178:29;28200:6;28178:29;:::i;:::-;28173:3;28169:39;28162:46;;27944:270;27854:360;;;;:::o;28220:1053::-;28543:4;28581:3;28570:9;28566:19;28558:27;;28595:71;28663:1;28652:9;28648:17;28639:6;28595:71;:::i;:::-;28676:72;28744:2;28733:9;28729:18;28720:6;28676:72;:::i;:::-;28795:9;28789:4;28785:20;28780:2;28769:9;28765:18;28758:48;28823:108;28926:4;28917:6;28823:108;:::i;:::-;28815:116;;28978:9;28972:4;28968:20;28963:2;28952:9;28948:18;28941:48;29006:108;29109:4;29100:6;29006:108;:::i;:::-;28998:116;;29162:9;29156:4;29152:20;29146:3;29135:9;29131:19;29124:49;29190:76;29261:4;29252:6;29190:76;:::i;:::-;29182:84;;28220:1053;;;;;;;;:::o;29279:141::-;29335:5;29366:6;29360:13;29351:22;;29382:32;29408:5;29382:32;:::i;:::-;29279:141;;;;:::o;29426:349::-;29495:6;29544:2;29532:9;29523:7;29519:23;29515:32;29512:119;;;29550:79;;:::i;:::-;29512:119;29670:1;29695:63;29750:7;29741:6;29730:9;29726:22;29695:63;:::i;:::-;29685:73;;29641:127;29426:349;;;;:::o;29781:106::-;29825:8;29874:5;29869:3;29865:15;29844:36;;29781:106;;;:::o;29893:183::-;29928:3;29966:1;29948:16;29945:23;29942:128;;;30004:1;30001;29998;29983:23;30026:34;30057:1;30051:8;30026:34;:::i;:::-;30019:41;;29942:128;29893:183;:::o;30082:711::-;30121:3;30159:4;30141:16;30138:26;30167:5;30135:39;30196:20;;:::i;:::-;30271:1;30253:16;30249:24;30246:1;30240:4;30225:49;30304:4;30298:11;30403:16;30396:4;30388:6;30384:17;30381:39;30348:18;30340:6;30337:30;30321:113;30318:146;;;30449:5;;;;30318:146;30495:6;30489:4;30485:17;30531:3;30525:10;30558:18;30550:6;30547:30;30544:43;;;30580:5;;;;;;30544:43;30628:6;30621:4;30616:3;30612:14;30608:27;30687:1;30669:16;30665:24;30659:4;30655:35;30650:3;30647:44;30644:57;;;30694:5;;;;;;;30644:57;30711;30759:6;30753:4;30749:17;30741:6;30737:30;30731:4;30711:57;:::i;:::-;30784:3;30777:10;;30125:668;;;;;30082:711;;:::o;30799:239::-;30939:34;30935:1;30927:6;30923:14;30916:58;31008:22;31003:2;30995:6;30991:15;30984:47;30799:239;:::o;31044:366::-;31186:3;31207:67;31271:2;31266:3;31207:67;:::i;:::-;31200:74;;31283:93;31372:3;31283:93;:::i;:::-;31401:2;31396:3;31392:12;31385:19;;31044:366;;;:::o;31416:419::-;31582:4;31620:2;31609:9;31605:18;31597:26;;31669:9;31663:4;31659:20;31655:1;31644:9;31640:17;31633:47;31697:131;31823:4;31697:131;:::i;:::-;31689:139;;31416:419;;;:::o;31841:227::-;31981:34;31977:1;31969:6;31965:14;31958:58;32050:10;32045:2;32037:6;32033:15;32026:35;31841:227;:::o;32074:366::-;32216:3;32237:67;32301:2;32296:3;32237:67;:::i;:::-;32230:74;;32313:93;32402:3;32313:93;:::i;:::-;32431:2;32426:3;32422:12;32415:19;;32074:366;;;:::o;32446:419::-;32612:4;32650:2;32639:9;32635:18;32627:26;;32699:9;32693:4;32689:20;32685:1;32674:9;32670:17;32663:47;32727:131;32853:4;32727:131;:::i;:::-;32719:139;;32446:419;;;:::o;32871:751::-;33094:4;33132:3;33121:9;33117:19;33109:27;;33146:71;33214:1;33203:9;33199:17;33190:6;33146:71;:::i;:::-;33227:72;33295:2;33284:9;33280:18;33271:6;33227:72;:::i;:::-;33309;33377:2;33366:9;33362:18;33353:6;33309:72;:::i;:::-;33391;33459:2;33448:9;33444:18;33435:6;33391:72;:::i;:::-;33511:9;33505:4;33501:20;33495:3;33484:9;33480:19;33473:49;33539:76;33610:4;33601:6;33539:76;:::i;:::-;33531:84;;32871:751;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1917600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "796",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1142,
									"end": 1146,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8009,
									"end": 8015,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1678,
									"end": 1679,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1699,
									"end": 1700,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1696,
									"end": 1709,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1787,
									"end": 1788,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1782,
									"end": 1785,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1778,
									"end": 1789,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1772,
									"end": 1790,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1768,
									"end": 1769,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1763,
									"end": 1766,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1770,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1752,
									"end": 1791,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1726,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1722,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1727,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1819,
									"end": 1825,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1816,
									"end": 1817,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1813,
									"end": 1826,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1899,
									"end": 1900,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1888,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1881,
									"end": 1897,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1874,
									"end": 1901,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1659,
									"end": 1917,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 2095,
									"end": 2101,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2126,
									"end": 2132,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2119,
									"end": 2124,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2112,
									"end": 2133,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2164,
									"end": 2168,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2162,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2202,
									"end": 2205,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2193,
									"end": 2199,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2188,
									"end": 2191,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2181,
									"end": 2206,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 2331,
									"end": 2337,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2326,
									"end": 2329,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2321,
									"end": 2324,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2018,
									"end": 2344,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2465,
									"end": 2471,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2457,
									"end": 2484,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2598,
									"end": 2604,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2709,
									"end": 2712,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2701,
									"end": 2707,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2694,
									"end": 2698,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2686,
									"end": 2692,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2682,
									"end": 2699,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2437,
									"end": 2719,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2805,
									"end": 2811,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2854,
									"end": 2856,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2842,
									"end": 2851,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2833,
									"end": 2840,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2829,
									"end": 2852,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2825,
									"end": 2857,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3001,
									"end": 3002,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2990,
									"end": 2999,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2986,
									"end": 3003,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2980,
									"end": 3004,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3031,
									"end": 3049,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3023,
									"end": 3029,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3020,
									"end": 3050,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 3224,
									"end": 3231,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3215,
									"end": 3221,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3204,
									"end": 3213,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3200,
									"end": 3222,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3148,
									"end": 3232,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3148,
									"end": 3232,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2951,
									"end": 3242,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 3255,
									"end": 3435,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 3255,
									"end": 3435,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3303,
									"end": 3380,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3300,
									"end": 3301,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3293,
									"end": 3381,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3400,
									"end": 3404,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3397,
									"end": 3398,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3390,
									"end": 3405,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3424,
									"end": 3428,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3421,
									"end": 3422,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3414,
									"end": 3429,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 3761,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 3441,
									"end": 3761,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3485,
									"end": 3491,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3522,
									"end": 3523,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3516,
									"end": 3520,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3512,
									"end": 3524,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 3502,
									"end": 3524,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3502,
									"end": 3524,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3569,
									"end": 3570,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3563,
									"end": 3567,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3559,
									"end": 3571,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3590,
									"end": 3608,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3580,
									"end": 3661,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3580,
									"end": 3661,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3646,
									"end": 3650,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 3638,
									"end": 3644,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3634,
									"end": 3651,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3624,
									"end": 3651,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3624,
									"end": 3651,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3580,
									"end": 3661,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3580,
									"end": 3661,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3708,
									"end": 3710,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3700,
									"end": 3706,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3697,
									"end": 3711,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3677,
									"end": 3695,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3674,
									"end": 3712,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3671,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3671,
									"end": 3755,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3671,
									"end": 3755,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3671,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3492,
									"end": 3761,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 3761,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 3761,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 3761,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 3761,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220626b3d7992e73c3b600f159ae579c7061e4ec05ddcaec93c34296e465960b81864736f6c634300080d0033",
									".code": [
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2302,
											"end": 2303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2290,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2379,
											"end": 2381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2390,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1399,
											"name": "PUSH",
											"source": 0,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1467,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1415,
											"end": 1426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1507,
											"end": 1518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 1998,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2017,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4278,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4274,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4311,
											"end": 4315,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4317,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4439,
											"end": 4443,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4452,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4454,
											"end": 4461,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4463,
											"end": 4467,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4416,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2706,
											"end": 2722,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2765,
											"end": 2768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2754,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2887,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2926,
											"end": 2945,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2995,
											"end": 3003,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3005,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3011,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3013,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2979,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 3015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 3015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 3015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 3015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 3015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3043,
											"end": 3056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3244,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3244,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3244,
											"end": 3256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3244,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3492,
											"end": 3499,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3466,
											"end": 3510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3466,
											"end": 3510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3792,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3792,
											"end": 3804,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3792,
											"end": 3804,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3792,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3788,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3825,
											"end": 3829,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3831,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3939,
											"end": 3943,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3945,
											"end": 3947,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3951,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 3965,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6288,
											"end": 6295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6288,
											"end": 6302,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6277,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6302,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 6380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6365,
											"end": 6367,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6453,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6497,
											"end": 6505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6511,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6515,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6520,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6529,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6531,
											"end": 6535,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6571,
											"end": 6574,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6571,
											"end": 6581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6581,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6618,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6619,
											"end": 6620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6635,
											"end": 6649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6659,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6635,
											"end": 6662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6635,
											"end": 6662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6709,
											"end": 6711,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6713,
											"end": 6717,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6755,
											"end": 6761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6886,
											"end": 6892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6860,
											"end": 6862,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6868,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6941,
											"end": 6947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6920,
											"end": 6933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6932,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6920,
											"end": 6933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6920,
											"end": 6933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6920,
											"end": 6933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6936,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7005,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7001,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 6995,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7007,
											"end": 7010,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7067,
											"end": 7075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7081,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 7085,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7092,
											"end": 7099,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7105,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7031,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12224,
											"end": 12232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12215,
											"end": 12220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12326,
											"end": 12334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12306,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12307,
											"end": 12312,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12314,
											"end": 12322,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12364,
											"end": 12369,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 12381,
											"end": 12389,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5108,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5194,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5194,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5194,
											"end": 5206,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5194,
											"end": 5206,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5194,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5238,
											"end": 5246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5248,
											"end": 5252,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5256,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5299,
											"end": 5305,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5281,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5217,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5356,
											"end": 5358,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5360,
											"end": 5364,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5404,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5383,
											"end": 5394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5521,
											"end": 5527,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5495,
											"end": 5497,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5503,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5574,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5557,
											"end": 5559,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5547,
											"end": 5560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5547,
											"end": 5560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5560,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5563,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5621,
											"end": 5623,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5615,
											"end": 5619,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5605,
											"end": 5613,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5625,
											"end": 5627,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5629,
											"end": 5635,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5678,
											"end": 5686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5688,
											"end": 5692,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5694,
											"end": 5696,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5698,
											"end": 5700,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5710,
											"end": 5714,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5647,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13331,
											"end": 13545,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 13331,
											"end": 13545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13331,
											"end": 13545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13331,
											"end": 13545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13331,
											"end": 13545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13331,
											"end": 13545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13331,
											"end": 13545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13331,
											"end": 13545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13331,
											"end": 13545,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 14514,
											"end": 14516,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14514,
											"end": 14529,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14514,
											"end": 14529,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 14514,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14566,
											"end": 14568,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14934,
											"end": 14940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14719,
											"end": 14767,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 14719,
											"end": 14767,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14719,
											"end": 14767,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14629,
											"end": 14874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15213,
											"end": 15214,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15243,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15254,
											"end": 15266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15254,
											"end": 15266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15254,
											"end": 15266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13758,
											"end": 13773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 13758,
											"end": 13760,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 13758,
											"end": 13773,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13758,
											"end": 13773,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 13758,
											"end": 13773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13810,
											"end": 13812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14136,
											"end": 14142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13926,
											"end": 13969,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 13926,
											"end": 13969,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13926,
											"end": 13969,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13914,
											"end": 13922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13866,
											"end": 14076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 831,
											"end": 835,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1046,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1140,
											"end": 1141,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1137,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1126,
											"end": 1141,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1126,
											"end": 1141,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1126,
											"end": 1141,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3748,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3896,
											"end": 3897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3920,
											"end": 3926,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3914,
											"end": 3927,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4006,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4000,
											"end": 4003,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3996,
											"end": 4007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3990,
											"end": 4008,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 3987,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3977,
											"end": 3988,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3970,
											"end": 4009,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3939,
											"end": 3940,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3935,
											"end": 3945,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4035,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4118,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4114,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4103,
											"end": 4106,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4092,
											"end": 4119,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 4135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4182,
											"end": 4188,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4235,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4229,
											"end": 4236,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4224,
											"end": 4226,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4217,
											"end": 4222,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4213,
											"end": 4227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4209,
											"end": 4237,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4199,
											"end": 4237,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4199,
											"end": 4237,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4337,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 4398,
											"end": 4403,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 4484,
											"end": 4490,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4482,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4491,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 4545,
											"end": 4551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4543,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4526,
											"end": 4531,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4522,
											"end": 4538,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 4599,
											"end": 4605,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4572,
											"end": 4575,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4568,
											"end": 4607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4341,
											"end": 4613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4732,
											"end": 4736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4772,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4768,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4755,
											"end": 4773,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4819,
											"end": 4828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4813,
											"end": 4817,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4809,
											"end": 4829,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4794,
											"end": 4803,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4807,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4783,
											"end": 4830,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 4920,
											"end": 4924,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4911,
											"end": 4917,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4925,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4938,
											"end": 5055,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4938,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5047,
											"end": 5048,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5037,
											"end": 5049,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5061,
											"end": 5241,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 5061,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5109,
											"end": 5186,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5106,
											"end": 5107,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5099,
											"end": 5187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5206,
											"end": 5210,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 5203,
											"end": 5204,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5196,
											"end": 5211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5234,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5227,
											"end": 5228,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5220,
											"end": 5235,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 5352,
											"end": 5356,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5322,
											"end": 5328,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5358,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5466,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5448,
											"end": 5458,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5445,
											"end": 5467,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5424,
											"end": 5442,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5422,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5409,
											"end": 5443,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5468,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5511,
											"end": 5521,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5507,
											"end": 5509,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5500,
											"end": 5522,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5574,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5585,
											"end": 5615,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5585,
											"end": 5615,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 5652,
											"end": 5656,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5644,
											"end": 5650,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5746,
											"end": 5750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5854,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5828,
											"end": 5834,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5825,
											"end": 5855,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5908,
											"end": 5912,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5900,
											"end": 5906,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5896,
											"end": 5913,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 5913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 5913,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 5972,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5962,
											"end": 5966,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5986,
											"end": 6103,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 5986,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6095,
											"end": 6096,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6093,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6085,
											"end": 6097,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 6320,
											"end": 6326,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6238,
											"end": 6328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6238,
											"end": 6328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6348,
											"end": 6353,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6383,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6370,
											"end": 6375,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6363,
											"end": 6384,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6404,
											"end": 6409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6416,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6393,
											"end": 6416,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6393,
											"end": 6416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6464,
											"end": 6468,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6456,
											"end": 6462,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6452,
											"end": 6469,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6444,
											"end": 6450,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6440,
											"end": 6470,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6493,
											"end": 6496,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6485,
											"end": 6491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6482,
											"end": 6497,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6627,
											"end": 6633,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6644,
											"end": 6650,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6642,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6636,
											"end": 6651,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6719,
											"end": 6722,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 6781,
											"end": 6784,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6769,
											"end": 6779,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6746,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6736,
											"end": 6786,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6819,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6810,
											"end": 6813,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6820,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6674,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6665,
											"end": 6668,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 6675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6654,
											"end": 6675,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6654,
											"end": 6675,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6614,
											"end": 6635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6228,
											"end": 6836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6228,
											"end": 6836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6979,
											"end": 6982,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6972,
											"end": 6976,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6964,
											"end": 6970,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6960,
											"end": 6977,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6956,
											"end": 6983,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7104,
											"end": 7110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7091,
											"end": 7111,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7204,
											"end": 7208,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7196,
											"end": 7202,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7192,
											"end": 7209,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7223,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7223,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6936,
											"end": 7229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7235,
											"end": 7352,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 7235,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7341,
											"end": 7342,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7334,
											"end": 7346,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7419,
											"end": 7423,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7501,
											"end": 7507,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7528,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 7591,
											"end": 7597,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7561,
											"end": 7598,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7561,
											"end": 7598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7653,
											"end": 7657,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7647,
											"end": 7651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7643,
											"end": 7658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7755,
											"end": 7761,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7750,
											"end": 7753,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7745,
											"end": 7748,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7732,
											"end": 7762,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 7817,
											"end": 7818,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7808,
											"end": 7814,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7803,
											"end": 7806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7799,
											"end": 7815,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7792,
											"end": 7819,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7913,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 7990,
											"end": 7996,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7924,
											"end": 7998,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7924,
											"end": 7998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8021,
											"end": 8027,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8014,
											"end": 8019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8007,
											"end": 8028,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8059,
											"end": 8063,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8052,
											"end": 8057,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8048,
											"end": 8064,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8097,
											"end": 8100,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8088,
											"end": 8094,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8083,
											"end": 8086,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8079,
											"end": 8095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8076,
											"end": 8101,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 8228,
											"end": 8234,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8226,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8218,
											"end": 8221,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7914,
											"end": 8241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8315,
											"end": 8320,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8364,
											"end": 8367,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8357,
											"end": 8361,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8349,
											"end": 8355,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8345,
											"end": 8362,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8341,
											"end": 8368,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8489,
											"end": 8495,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8476,
											"end": 8496,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8580,
											"end": 8586,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8573,
											"end": 8577,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8565,
											"end": 8571,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8561,
											"end": 8578,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8505,
											"end": 8592,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8505,
											"end": 8592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8321,
											"end": 8598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8758,
											"end": 8764,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8766,
											"end": 8772,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8774,
											"end": 8780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8782,
											"end": 8788,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8796,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8842,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 8827,
											"end": 8836,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8818,
											"end": 8825,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8814,
											"end": 8837,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8810,
											"end": 8843,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 8967,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 9036,
											"end": 9043,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9027,
											"end": 9033,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9016,
											"end": 9025,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9044,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8937,
											"end": 9054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9093,
											"end": 9095,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 9164,
											"end": 9171,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9161,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9153,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9140,
											"end": 9162,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9172,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9064,
											"end": 9182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9249,
											"end": 9251,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9238,
											"end": 9247,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9221,
											"end": 9253,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9272,
											"end": 9278,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9269,
											"end": 9299,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 9477,
											"end": 9484,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9468,
											"end": 9474,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9457,
											"end": 9466,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9453,
											"end": 9475,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9397,
											"end": 9485,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9397,
											"end": 9485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9192,
											"end": 9495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9562,
											"end": 9564,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9551,
											"end": 9560,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9547,
											"end": 9565,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9534,
											"end": 9566,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9611,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9585,
											"end": 9591,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9582,
											"end": 9612,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 9790,
											"end": 9797,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9781,
											"end": 9787,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9770,
											"end": 9779,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9766,
											"end": 9788,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9710,
											"end": 9798,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9710,
											"end": 9798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9505,
											"end": 9808,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9875,
											"end": 9878,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9864,
											"end": 9873,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9860,
											"end": 9879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9847,
											"end": 9880,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9907,
											"end": 9925,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9899,
											"end": 9905,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9896,
											"end": 9926,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 10088,
											"end": 10095,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 10079,
											"end": 10085,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10068,
											"end": 10077,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10024,
											"end": 10096,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10024,
											"end": 10096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9818,
											"end": 10106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10196,
											"end": 10200,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10286,
											"end": 10304,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10278,
											"end": 10284,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10305,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10358,
											"end": 10362,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10350,
											"end": 10356,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10346,
											"end": 10363,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10338,
											"end": 10363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10338,
											"end": 10363,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10418,
											"end": 10422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10412,
											"end": 10416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10408,
											"end": 10423,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10400,
											"end": 10423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10400,
											"end": 10423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10549,
											"end": 10554,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 10647,
											"end": 10653,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10655,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10675,
											"end": 10680,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10697,
											"end": 10702,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10690,
											"end": 10711,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10738,
											"end": 10742,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10731,
											"end": 10736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10727,
											"end": 10743,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10720,
											"end": 10743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10720,
											"end": 10743,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10791,
											"end": 10795,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10783,
											"end": 10789,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10779,
											"end": 10796,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10771,
											"end": 10777,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10767,
											"end": 10797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10820,
											"end": 10823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10812,
											"end": 10818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10809,
											"end": 10824,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10954,
											"end": 10960,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10971,
											"end": 10977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10966,
											"end": 10969,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 10978,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11046,
											"end": 11049,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 11108,
											"end": 11111,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 11096,
											"end": 11106,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11073,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11063,
											"end": 11113,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11142,
											"end": 11146,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11137,
											"end": 11140,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11133,
											"end": 11147,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11126,
											"end": 11147,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11126,
											"end": 11147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11013,
											"end": 11157,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10997,
											"end": 11001,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10992,
											"end": 10995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10988,
											"end": 11002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10941,
											"end": 10962,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10555,
											"end": 11163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10555,
											"end": 11163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11257,
											"end": 11262,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11306,
											"end": 11309,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11299,
											"end": 11303,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11291,
											"end": 11297,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11287,
											"end": 11304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11310,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11431,
											"end": 11437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11418,
											"end": 11438,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 11546,
											"end": 11549,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11538,
											"end": 11544,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11531,
											"end": 11535,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11523,
											"end": 11529,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11519,
											"end": 11536,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11447,
											"end": 11550,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11447,
											"end": 11550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11263,
											"end": 11556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11680,
											"end": 11686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11688,
											"end": 11694,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11737,
											"end": 11739,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11725,
											"end": 11734,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11716,
											"end": 11723,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11712,
											"end": 11735,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11708,
											"end": 11740,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11891,
											"end": 11892,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11880,
											"end": 11889,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11876,
											"end": 11893,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11863,
											"end": 11894,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 11921,
											"end": 11939,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11913,
											"end": 11919,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11910,
											"end": 11940,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 12118,
											"end": 12125,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12109,
											"end": 12115,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12098,
											"end": 12107,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12094,
											"end": 12116,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12038,
											"end": 12126,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12038,
											"end": 12126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11834,
											"end": 12136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12203,
											"end": 12205,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12192,
											"end": 12201,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12188,
											"end": 12206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12175,
											"end": 12207,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 12234,
											"end": 12252,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12226,
											"end": 12232,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12223,
											"end": 12253,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 12431,
											"end": 12438,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12422,
											"end": 12428,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12411,
											"end": 12420,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12407,
											"end": 12429,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12351,
											"end": 12439,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12351,
											"end": 12439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12146,
											"end": 12449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12529,
											"end": 12535,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12563,
											"end": 12568,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12557,
											"end": 12569,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12547,
											"end": 12569,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12547,
											"end": 12569,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12681,
											"end": 12692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12715,
											"end": 12721,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12710,
											"end": 12713,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12703,
											"end": 12722,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12755,
											"end": 12759,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12753,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12746,
											"end": 12760,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 12760,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 12760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12862,
											"end": 12865,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 12865,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 12865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12892,
											"end": 12896,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12887,
											"end": 12890,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12883,
											"end": 12897,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12875,
											"end": 12897,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12875,
											"end": 12897,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 13005,
											"end": 13010,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12982,
											"end": 12985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12975,
											"end": 13012,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13093,
											"end": 13103,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 13156,
											"end": 13159,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13148,
											"end": 13154,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13192,
											"end": 13196,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13187,
											"end": 13190,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13169,
											"end": 13197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13169,
											"end": 13197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13279,
											"end": 13283,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13311,
											"end": 13315,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13306,
											"end": 13309,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13302,
											"end": 13316,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13294,
											"end": 13316,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13294,
											"end": 13316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13477,
											"end": 13480,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 13554,
											"end": 13559,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 13655,
											"end": 13661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13650,
											"end": 13653,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13569,
											"end": 13662,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13569,
											"end": 13662,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 13736,
											"end": 13741,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13765,
											"end": 13772,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13796,
											"end": 13797,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13806,
											"end": 13812,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13803,
											"end": 13804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13800,
											"end": 13813,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13882,
											"end": 13888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13876,
											"end": 13889,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 13968,
											"end": 13971,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 13953,
											"end": 13966,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 13972,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 13972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 14048,
											"end": 14054,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13985,
											"end": 14055,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13985,
											"end": 14055,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13841,
											"end": 14065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13828,
											"end": 13829,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13825,
											"end": 13826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13821,
											"end": 13830,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13816,
											"end": 13830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13816,
											"end": 13830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13785,
											"end": 13799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14081,
											"end": 14084,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14074,
											"end": 14084,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14074,
											"end": 14084,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13482,
											"end": 14090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13482,
											"end": 14090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13482,
											"end": 14090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14239,
											"end": 14243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14277,
											"end": 14279,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14266,
											"end": 14275,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14262,
											"end": 14280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14254,
											"end": 14280,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14254,
											"end": 14280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14326,
											"end": 14335,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14320,
											"end": 14324,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14316,
											"end": 14336,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14312,
											"end": 14313,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14301,
											"end": 14310,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14297,
											"end": 14314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14290,
											"end": 14337,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 14457,
											"end": 14461,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14448,
											"end": 14454,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14346,
											"end": 14462,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14346,
											"end": 14462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 14560,
											"end": 14565,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14538,
											"end": 14543,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14535,
											"end": 14567,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14581,
											"end": 14582,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14578,
											"end": 14579,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14571,
											"end": 14583,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14640,
											"end": 14645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14678,
											"end": 14684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14665,
											"end": 14685,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 14656,
											"end": 14685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14656,
											"end": 14685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 14718,
											"end": 14723,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14801,
											"end": 14807,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14815,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14858,
											"end": 14860,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14846,
											"end": 14855,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14837,
											"end": 14844,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14833,
											"end": 14856,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14829,
											"end": 14861,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14984,
											"end": 14985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 15054,
											"end": 15061,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15045,
											"end": 15051,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15034,
											"end": 15043,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15030,
											"end": 15052,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14999,
											"end": 15062,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14999,
											"end": 15062,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14955,
											"end": 15072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15111,
											"end": 15113,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 15179,
											"end": 15186,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15170,
											"end": 15176,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15159,
											"end": 15168,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15155,
											"end": 15177,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15127,
											"end": 15187,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15127,
											"end": 15187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15082,
											"end": 15197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15278,
											"end": 15284,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15286,
											"end": 15292,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15335,
											"end": 15337,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15323,
											"end": 15332,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15314,
											"end": 15321,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15310,
											"end": 15333,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15306,
											"end": 15338,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15461,
											"end": 15462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 15531,
											"end": 15538,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15522,
											"end": 15528,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15511,
											"end": 15520,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15507,
											"end": 15529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15476,
											"end": 15539,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15476,
											"end": 15539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15432,
											"end": 15549,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15588,
											"end": 15590,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 15659,
											"end": 15666,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15650,
											"end": 15656,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15639,
											"end": 15648,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15635,
											"end": 15657,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15604,
											"end": 15667,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15604,
											"end": 15667,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15559,
											"end": 15677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15794,
											"end": 15800,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15802,
											"end": 15808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15810,
											"end": 15816,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15818,
											"end": 15824,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15826,
											"end": 15832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15875,
											"end": 15878,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 15863,
											"end": 15872,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15854,
											"end": 15861,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 15850,
											"end": 15873,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15846,
											"end": 15879,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16002,
											"end": 16003,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 16072,
											"end": 16079,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16063,
											"end": 16069,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16052,
											"end": 16061,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 16048,
											"end": 16070,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16017,
											"end": 16080,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 16017,
											"end": 16080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15973,
											"end": 16090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16129,
											"end": 16131,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 16200,
											"end": 16207,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16191,
											"end": 16197,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16180,
											"end": 16189,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 16176,
											"end": 16198,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16145,
											"end": 16208,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 16145,
											"end": 16208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16100,
											"end": 16218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16257,
											"end": 16259,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 16328,
											"end": 16335,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16319,
											"end": 16325,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16308,
											"end": 16317,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 16304,
											"end": 16326,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16273,
											"end": 16336,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 16273,
											"end": 16336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16228,
											"end": 16346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16385,
											"end": 16387,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 16456,
											"end": 16463,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16447,
											"end": 16453,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16436,
											"end": 16445,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 16432,
											"end": 16454,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16401,
											"end": 16464,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16401,
											"end": 16464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16356,
											"end": 16474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16541,
											"end": 16544,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 16530,
											"end": 16539,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16526,
											"end": 16545,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16513,
											"end": 16546,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 16573,
											"end": 16591,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16565,
											"end": 16571,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16562,
											"end": 16592,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 16754,
											"end": 16761,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16745,
											"end": 16751,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16734,
											"end": 16743,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 16730,
											"end": 16752,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16690,
											"end": 16762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16690,
											"end": 16762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16484,
											"end": 16772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16785,
											"end": 17015,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 16785,
											"end": 17015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16925,
											"end": 16959,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 16921,
											"end": 16922,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16913,
											"end": 16919,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16909,
											"end": 16923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16902,
											"end": 16960,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16994,
											"end": 17007,
											"name": "PUSH",
											"source": 9,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 16989,
											"end": 16991,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16981,
											"end": 16987,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16977,
											"end": 16992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 17008,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16785,
											"end": 17015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16785,
											"end": 17015,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17021,
											"end": 17387,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 17021,
											"end": 17387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17163,
											"end": 17166,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17184,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 17248,
											"end": 17250,
											"name": "PUSH",
											"source": 9,
											"value": "2B"
										},
										{
											"begin": 17243,
											"end": 17246,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17184,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 17184,
											"end": 17251,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17184,
											"end": 17251,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 17184,
											"end": 17251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17177,
											"end": 17251,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17177,
											"end": 17251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17260,
											"end": 17353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 17349,
											"end": 17352,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17260,
											"end": 17353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 17260,
											"end": 17353,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17260,
											"end": 17353,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 17260,
											"end": 17353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17378,
											"end": 17380,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17373,
											"end": 17376,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17369,
											"end": 17381,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17362,
											"end": 17381,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17362,
											"end": 17381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17021,
											"end": 17387,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17021,
											"end": 17387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17021,
											"end": 17387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17021,
											"end": 17387,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17393,
											"end": 17812,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 17393,
											"end": 17812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17559,
											"end": 17563,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17597,
											"end": 17599,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17586,
											"end": 17595,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17582,
											"end": 17600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17574,
											"end": 17600,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17574,
											"end": 17600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17646,
											"end": 17655,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17640,
											"end": 17644,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17636,
											"end": 17656,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17632,
											"end": 17633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17621,
											"end": 17630,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17617,
											"end": 17634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17610,
											"end": 17657,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17674,
											"end": 17805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 17800,
											"end": 17804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17674,
											"end": 17805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 17674,
											"end": 17805,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17674,
											"end": 17805,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 17674,
											"end": 17805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17666,
											"end": 17805,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17666,
											"end": 17805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17393,
											"end": 17812,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17393,
											"end": 17812,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17393,
											"end": 17812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17393,
											"end": 17812,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17818,
											"end": 17998,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 17818,
											"end": 17998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17866,
											"end": 17943,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17863,
											"end": 17864,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17856,
											"end": 17944,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17963,
											"end": 17967,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 17960,
											"end": 17961,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17987,
											"end": 17991,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 17984,
											"end": 17985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17977,
											"end": 17992,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 18004,
											"end": 18324,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 18004,
											"end": 18324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18048,
											"end": 18054,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18085,
											"end": 18086,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 18079,
											"end": 18083,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18075,
											"end": 18087,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 18065,
											"end": 18087,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18065,
											"end": 18087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18132,
											"end": 18133,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 18126,
											"end": 18130,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18122,
											"end": 18134,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18153,
											"end": 18171,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18143,
											"end": 18224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 18143,
											"end": 18224,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18209,
											"end": 18213,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 18201,
											"end": 18207,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18197,
											"end": 18214,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18187,
											"end": 18214,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18187,
											"end": 18214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18143,
											"end": 18224,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 18143,
											"end": 18224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18271,
											"end": 18273,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18263,
											"end": 18269,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18260,
											"end": 18274,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 18240,
											"end": 18258,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18237,
											"end": 18275,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18234,
											"end": 18318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 18234,
											"end": 18318,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18290,
											"end": 18308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 18290,
											"end": 18308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 18290,
											"end": 18308,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18290,
											"end": 18308,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 18290,
											"end": 18308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18234,
											"end": 18318,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 18234,
											"end": 18318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18055,
											"end": 18324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18004,
											"end": 18324,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18004,
											"end": 18324,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18004,
											"end": 18324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18004,
											"end": 18324,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18330,
											"end": 18567,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 18330,
											"end": 18567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18470,
											"end": 18504,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 18466,
											"end": 18467,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18458,
											"end": 18464,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18454,
											"end": 18468,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18447,
											"end": 18505,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18539,
											"end": 18559,
											"name": "PUSH",
											"source": 9,
											"value": "6F776E6572206E6F7220617070726F7665640000000000000000000000000000"
										},
										{
											"begin": 18534,
											"end": 18536,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18526,
											"end": 18532,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18522,
											"end": 18537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18515,
											"end": 18560,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18330,
											"end": 18567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18330,
											"end": 18567,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18573,
											"end": 18939,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 18573,
											"end": 18939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18715,
											"end": 18718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18736,
											"end": 18803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 18800,
											"end": 18802,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 18795,
											"end": 18798,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18736,
											"end": 18803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 18736,
											"end": 18803,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18736,
											"end": 18803,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 18736,
											"end": 18803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18729,
											"end": 18803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18729,
											"end": 18803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18812,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 18901,
											"end": 18904,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18812,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 18812,
											"end": 18905,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18812,
											"end": 18905,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 18812,
											"end": 18905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18930,
											"end": 18932,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18925,
											"end": 18928,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18921,
											"end": 18933,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18914,
											"end": 18933,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18914,
											"end": 18933,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18573,
											"end": 18939,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18573,
											"end": 18939,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18573,
											"end": 18939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18573,
											"end": 18939,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18945,
											"end": 19364,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 18945,
											"end": 19364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19111,
											"end": 19115,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19149,
											"end": 19151,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19138,
											"end": 19147,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19134,
											"end": 19152,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19126,
											"end": 19152,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19126,
											"end": 19152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19198,
											"end": 19207,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19192,
											"end": 19196,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19188,
											"end": 19208,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19184,
											"end": 19185,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19173,
											"end": 19182,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19169,
											"end": 19186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19162,
											"end": 19209,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19226,
											"end": 19357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 19352,
											"end": 19356,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19226,
											"end": 19357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 19226,
											"end": 19357,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19226,
											"end": 19357,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 19226,
											"end": 19357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19218,
											"end": 19357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19218,
											"end": 19357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18945,
											"end": 19364,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18945,
											"end": 19364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18945,
											"end": 19364,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18945,
											"end": 19364,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19370,
											"end": 19598,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 19370,
											"end": 19598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19510,
											"end": 19544,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 19506,
											"end": 19507,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19498,
											"end": 19504,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19494,
											"end": 19508,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19487,
											"end": 19545,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19579,
											"end": 19590,
											"name": "PUSH",
											"source": 9,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19574,
											"end": 19576,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19566,
											"end": 19572,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19562,
											"end": 19577,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19555,
											"end": 19591,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19370,
											"end": 19598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19370,
											"end": 19598,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19604,
											"end": 19970,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 19604,
											"end": 19970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19746,
											"end": 19749,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19767,
											"end": 19834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 19831,
											"end": 19833,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 19826,
											"end": 19829,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19767,
											"end": 19834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 19767,
											"end": 19834,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19767,
											"end": 19834,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 19767,
											"end": 19834,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19760,
											"end": 19834,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19760,
											"end": 19834,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19843,
											"end": 19936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 19932,
											"end": 19935,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19843,
											"end": 19936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 19843,
											"end": 19936,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19843,
											"end": 19936,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 19843,
											"end": 19936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19961,
											"end": 19963,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19956,
											"end": 19959,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19952,
											"end": 19964,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19945,
											"end": 19964,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19945,
											"end": 19964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19604,
											"end": 19970,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19604,
											"end": 19970,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19604,
											"end": 19970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19604,
											"end": 19970,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19976,
											"end": 20395,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 19976,
											"end": 20395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20142,
											"end": 20146,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20180,
											"end": 20182,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20169,
											"end": 20178,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20165,
											"end": 20183,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20157,
											"end": 20183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20157,
											"end": 20183,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20229,
											"end": 20238,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20223,
											"end": 20227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20219,
											"end": 20239,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20215,
											"end": 20216,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20204,
											"end": 20213,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20200,
											"end": 20217,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20193,
											"end": 20240,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20257,
											"end": 20388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 20383,
											"end": 20387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20257,
											"end": 20388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 20257,
											"end": 20388,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20257,
											"end": 20388,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 20257,
											"end": 20388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20249,
											"end": 20388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20249,
											"end": 20388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19976,
											"end": 20395,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19976,
											"end": 20395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19976,
											"end": 20395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19976,
											"end": 20395,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20401,
											"end": 20581,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 20401,
											"end": 20581,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20449,
											"end": 20526,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20446,
											"end": 20447,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20439,
											"end": 20527,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20546,
											"end": 20550,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 20543,
											"end": 20544,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 20536,
											"end": 20551,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20570,
											"end": 20574,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 20567,
											"end": 20568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20560,
											"end": 20575,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 20587,
											"end": 20767,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 20587,
											"end": 20767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20635,
											"end": 20712,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20632,
											"end": 20633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20625,
											"end": 20713,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20732,
											"end": 20736,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 20729,
											"end": 20730,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 20722,
											"end": 20737,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20756,
											"end": 20760,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 20753,
											"end": 20754,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20746,
											"end": 20761,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20812,
											"end": 20815,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20835,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 20853,
											"end": 20858,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20835,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 20835,
											"end": 20859,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20835,
											"end": 20859,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 20835,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20826,
											"end": 20859,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20826,
											"end": 20859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20881,
											"end": 20947,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20874,
											"end": 20879,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20871,
											"end": 20948,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20868,
											"end": 20971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 20868,
											"end": 20971,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20951,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 20951,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 20951,
											"end": 20969,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20951,
											"end": 20969,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 20951,
											"end": 20969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20868,
											"end": 20971,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 20868,
											"end": 20971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20998,
											"end": 20999,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 20991,
											"end": 20996,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20987,
											"end": 21000,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20980,
											"end": 21000,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20980,
											"end": 21000,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21012,
											"end": 21240,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 21012,
											"end": 21240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21152,
											"end": 21186,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 21148,
											"end": 21149,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21140,
											"end": 21146,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21136,
											"end": 21150,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21129,
											"end": 21187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21221,
											"end": 21232,
											"name": "PUSH",
											"source": 9,
											"value": "20617070726F7665640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21216,
											"end": 21218,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21208,
											"end": 21214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21204,
											"end": 21219,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21197,
											"end": 21233,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21012,
											"end": 21240,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21012,
											"end": 21240,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21246,
											"end": 21612,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 21246,
											"end": 21612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21388,
											"end": 21391,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21409,
											"end": 21476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 21473,
											"end": 21475,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 21468,
											"end": 21471,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21409,
											"end": 21476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 21409,
											"end": 21476,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21409,
											"end": 21476,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 21409,
											"end": 21476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21402,
											"end": 21476,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21402,
											"end": 21476,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21485,
											"end": 21578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 21574,
											"end": 21577,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21485,
											"end": 21578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 21485,
											"end": 21578,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21485,
											"end": 21578,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 21485,
											"end": 21578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21603,
											"end": 21605,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21598,
											"end": 21601,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21594,
											"end": 21606,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21587,
											"end": 21606,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21587,
											"end": 21606,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21246,
											"end": 21612,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21246,
											"end": 21612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21246,
											"end": 21612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21246,
											"end": 21612,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21618,
											"end": 22037,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 21618,
											"end": 22037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21784,
											"end": 21788,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21822,
											"end": 21824,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21811,
											"end": 21820,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21807,
											"end": 21825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21799,
											"end": 21825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21799,
											"end": 21825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21871,
											"end": 21880,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21865,
											"end": 21869,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21861,
											"end": 21881,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21857,
											"end": 21858,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21846,
											"end": 21855,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21842,
											"end": 21859,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21835,
											"end": 21882,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21899,
											"end": 22030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 22025,
											"end": 22029,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21899,
											"end": 22030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 21899,
											"end": 22030,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21899,
											"end": 22030,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 21899,
											"end": 22030,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21891,
											"end": 22030,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21891,
											"end": 22030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21618,
											"end": 22037,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21618,
											"end": 22037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21618,
											"end": 22037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21618,
											"end": 22037,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22043,
											"end": 22270,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 22043,
											"end": 22270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22183,
											"end": 22217,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 22179,
											"end": 22180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22171,
											"end": 22177,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22167,
											"end": 22181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22160,
											"end": 22218,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22252,
											"end": 22262,
											"name": "PUSH",
											"source": 9,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22247,
											"end": 22249,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22239,
											"end": 22245,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22235,
											"end": 22250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22228,
											"end": 22263,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22043,
											"end": 22270,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22043,
											"end": 22270,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22276,
											"end": 22642,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 22276,
											"end": 22642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22418,
											"end": 22421,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22439,
											"end": 22506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 22503,
											"end": 22505,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 22498,
											"end": 22501,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22439,
											"end": 22506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 22439,
											"end": 22506,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22439,
											"end": 22506,
											"name": "tag",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 22439,
											"end": 22506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22432,
											"end": 22506,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22432,
											"end": 22506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22515,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 22604,
											"end": 22607,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22515,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 22515,
											"end": 22608,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22515,
											"end": 22608,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 22515,
											"end": 22608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22633,
											"end": 22635,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22628,
											"end": 22631,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22624,
											"end": 22636,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22617,
											"end": 22636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22617,
											"end": 22636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22276,
											"end": 22642,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22276,
											"end": 22642,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22276,
											"end": 22642,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22276,
											"end": 22642,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22648,
											"end": 23067,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 22648,
											"end": 23067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22814,
											"end": 22818,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22852,
											"end": 22854,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22841,
											"end": 22850,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22837,
											"end": 22855,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22829,
											"end": 22855,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22829,
											"end": 22855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22901,
											"end": 22910,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22895,
											"end": 22899,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22891,
											"end": 22911,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22887,
											"end": 22888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22876,
											"end": 22885,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22872,
											"end": 22889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22865,
											"end": 22912,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22929,
											"end": 23060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 23055,
											"end": 23059,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22929,
											"end": 23060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 22929,
											"end": 23060,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22929,
											"end": 23060,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 22929,
											"end": 23060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22921,
											"end": 23060,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22921,
											"end": 23060,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22648,
											"end": 23067,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22648,
											"end": 23067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22648,
											"end": 23067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22648,
											"end": 23067,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23073,
											"end": 23297,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 23073,
											"end": 23297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23213,
											"end": 23247,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 23209,
											"end": 23210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23201,
											"end": 23207,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23197,
											"end": 23211,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23190,
											"end": 23248,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23282,
											"end": 23289,
											"name": "PUSH",
											"source": 9,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23277,
											"end": 23279,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23269,
											"end": 23275,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23265,
											"end": 23280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23258,
											"end": 23290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23073,
											"end": 23297,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23073,
											"end": 23297,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23303,
											"end": 23669,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 23303,
											"end": 23669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23445,
											"end": 23448,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23466,
											"end": 23533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 23530,
											"end": 23532,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 23525,
											"end": 23528,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23466,
											"end": 23533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 23466,
											"end": 23533,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23466,
											"end": 23533,
											"name": "tag",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 23466,
											"end": 23533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23459,
											"end": 23533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23459,
											"end": 23533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23542,
											"end": 23635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 23631,
											"end": 23634,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23542,
											"end": 23635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 23542,
											"end": 23635,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23542,
											"end": 23635,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 23542,
											"end": 23635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23660,
											"end": 23662,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23655,
											"end": 23658,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23651,
											"end": 23663,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23644,
											"end": 23663,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23644,
											"end": 23663,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23303,
											"end": 23669,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23303,
											"end": 23669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23303,
											"end": 23669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23303,
											"end": 23669,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23675,
											"end": 24094,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 23675,
											"end": 24094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23841,
											"end": 23845,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23879,
											"end": 23881,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23868,
											"end": 23877,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23864,
											"end": 23882,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23856,
											"end": 23882,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23856,
											"end": 23882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23928,
											"end": 23937,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23922,
											"end": 23926,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23918,
											"end": 23938,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23914,
											"end": 23915,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23903,
											"end": 23912,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23899,
											"end": 23916,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23892,
											"end": 23939,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23956,
											"end": 24087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 24082,
											"end": 24086,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23956,
											"end": 24087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 23956,
											"end": 24087,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23956,
											"end": 24087,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 23956,
											"end": 24087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23948,
											"end": 24087,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23948,
											"end": 24087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23675,
											"end": 24094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23675,
											"end": 24094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23675,
											"end": 24094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23675,
											"end": 24094,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24100,
											"end": 24329,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 24100,
											"end": 24329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24240,
											"end": 24274,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 24236,
											"end": 24237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24228,
											"end": 24234,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24224,
											"end": 24238,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24217,
											"end": 24275,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24309,
											"end": 24321,
											"name": "PUSH",
											"source": 9,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 24304,
											"end": 24306,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24296,
											"end": 24302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24292,
											"end": 24307,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24285,
											"end": 24322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24100,
											"end": 24329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24100,
											"end": 24329,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24335,
											"end": 24701,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 24335,
											"end": 24701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24477,
											"end": 24480,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24498,
											"end": 24565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 24562,
											"end": 24564,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 24557,
											"end": 24560,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24498,
											"end": 24565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 24498,
											"end": 24565,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24498,
											"end": 24565,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 24498,
											"end": 24565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24491,
											"end": 24565,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24491,
											"end": 24565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24574,
											"end": 24667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 24663,
											"end": 24666,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24574,
											"end": 24667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 24574,
											"end": 24667,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24574,
											"end": 24667,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 24574,
											"end": 24667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24692,
											"end": 24694,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 24687,
											"end": 24690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24683,
											"end": 24695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24676,
											"end": 24695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24676,
											"end": 24695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24335,
											"end": 24701,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24335,
											"end": 24701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24335,
											"end": 24701,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24335,
											"end": 24701,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24707,
											"end": 25126,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 24707,
											"end": 25126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24873,
											"end": 24877,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24911,
											"end": 24913,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24900,
											"end": 24909,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24896,
											"end": 24914,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24888,
											"end": 24914,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24888,
											"end": 24914,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24960,
											"end": 24969,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24954,
											"end": 24958,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24950,
											"end": 24970,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 24946,
											"end": 24947,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24935,
											"end": 24944,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24931,
											"end": 24948,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24924,
											"end": 24971,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24988,
											"end": 25119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 25114,
											"end": 25118,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24988,
											"end": 25119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 24988,
											"end": 25119,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24988,
											"end": 25119,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 24988,
											"end": 25119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24980,
											"end": 25119,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24980,
											"end": 25119,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24707,
											"end": 25126,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24707,
											"end": 25126,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24707,
											"end": 25126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24707,
											"end": 25126,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25172,
											"end": 25175,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25191,
											"end": 25211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 25209,
											"end": 25210,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25191,
											"end": 25211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 25191,
											"end": 25211,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25191,
											"end": 25211,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 25191,
											"end": 25211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25186,
											"end": 25211,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25186,
											"end": 25211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25225,
											"end": 25245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 25243,
											"end": 25244,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25225,
											"end": 25245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 25225,
											"end": 25245,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25225,
											"end": 25245,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 25225,
											"end": 25245,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25220,
											"end": 25245,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25220,
											"end": 25245,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25379,
											"end": 25380,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25311,
											"end": 25377,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25307,
											"end": 25381,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 25304,
											"end": 25305,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25301,
											"end": 25382,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 25298,
											"end": 25405,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 25298,
											"end": 25405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 25298,
											"end": 25405,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 25385,
											"end": 25403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 25385,
											"end": 25403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 25385,
											"end": 25403,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25385,
											"end": 25403,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 25385,
											"end": 25403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25298,
											"end": 25405,
											"name": "tag",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 25298,
											"end": 25405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25429,
											"end": 25430,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25426,
											"end": 25427,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25422,
											"end": 25431,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25415,
											"end": 25431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25415,
											"end": 25431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25664,
											"end": 25668,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25702,
											"end": 25704,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 25691,
											"end": 25700,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25687,
											"end": 25705,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25679,
											"end": 25705,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25679,
											"end": 25705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25751,
											"end": 25760,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25745,
											"end": 25749,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25741,
											"end": 25761,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 25737,
											"end": 25738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25726,
											"end": 25735,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25722,
											"end": 25739,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25715,
											"end": 25762,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25779,
											"end": 25887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 25882,
											"end": 25886,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25873,
											"end": 25879,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 25779,
											"end": 25887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 25779,
											"end": 25887,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25779,
											"end": 25887,
											"name": "tag",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 25779,
											"end": 25887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25771,
											"end": 25887,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25771,
											"end": 25887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25934,
											"end": 25943,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25928,
											"end": 25932,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25924,
											"end": 25944,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 25919,
											"end": 25921,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25908,
											"end": 25917,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25904,
											"end": 25922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25897,
											"end": 25945,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25962,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 26065,
											"end": 26069,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26056,
											"end": 26062,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 25962,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 25962,
											"end": 26070,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25962,
											"end": 26070,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 25962,
											"end": 26070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25954,
											"end": 26070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25954,
											"end": 26070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26083,
											"end": 26311,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 26083,
											"end": 26311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26223,
											"end": 26257,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 26219,
											"end": 26220,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26211,
											"end": 26217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26207,
											"end": 26221,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26200,
											"end": 26258,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26292,
											"end": 26303,
											"name": "PUSH",
											"source": 9,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26287,
											"end": 26289,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26279,
											"end": 26285,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26275,
											"end": 26290,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26268,
											"end": 26304,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26083,
											"end": 26311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26083,
											"end": 26311,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26317,
											"end": 26683,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 26317,
											"end": 26683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26459,
											"end": 26462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26480,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 26544,
											"end": 26546,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 26539,
											"end": 26542,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26480,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 26480,
											"end": 26547,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26480,
											"end": 26547,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 26480,
											"end": 26547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26473,
											"end": 26547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26473,
											"end": 26547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26556,
											"end": 26649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 26645,
											"end": 26648,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26556,
											"end": 26649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 26556,
											"end": 26649,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26556,
											"end": 26649,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 26556,
											"end": 26649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26674,
											"end": 26676,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 26669,
											"end": 26672,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26665,
											"end": 26677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26658,
											"end": 26677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26658,
											"end": 26677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26317,
											"end": 26683,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26317,
											"end": 26683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26317,
											"end": 26683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26317,
											"end": 26683,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26689,
											"end": 27108,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 26689,
											"end": 27108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26855,
											"end": 26859,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26893,
											"end": 26895,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26882,
											"end": 26891,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26878,
											"end": 26896,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26870,
											"end": 26896,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26870,
											"end": 26896,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26942,
											"end": 26951,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26936,
											"end": 26940,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26932,
											"end": 26952,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 26928,
											"end": 26929,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26917,
											"end": 26926,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26913,
											"end": 26930,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26906,
											"end": 26953,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26970,
											"end": 27101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 27096,
											"end": 27100,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26970,
											"end": 27101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 26970,
											"end": 27101,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26970,
											"end": 27101,
											"name": "tag",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 26970,
											"end": 27101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26962,
											"end": 27101,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26962,
											"end": 27101,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26689,
											"end": 27108,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26689,
											"end": 27108,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26689,
											"end": 27108,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26689,
											"end": 27108,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27235,
											"end": 27239,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27273,
											"end": 27275,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 27262,
											"end": 27271,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27258,
											"end": 27276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27250,
											"end": 27276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27250,
											"end": 27276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27286,
											"end": 27357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 27354,
											"end": 27355,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27343,
											"end": 27352,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27339,
											"end": 27356,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27330,
											"end": 27336,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 27286,
											"end": 27357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 27286,
											"end": 27357,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27286,
											"end": 27357,
											"name": "tag",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 27286,
											"end": 27357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27367,
											"end": 27439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 27435,
											"end": 27437,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 27424,
											"end": 27433,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27420,
											"end": 27438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27411,
											"end": 27417,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 27367,
											"end": 27439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 27367,
											"end": 27439,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27367,
											"end": 27439,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 27367,
											"end": 27439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27452,
											"end": 27570,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 27452,
											"end": 27570,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27539,
											"end": 27563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 27557,
											"end": 27562,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27539,
											"end": 27563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 27539,
											"end": 27563,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27539,
											"end": 27563,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 27539,
											"end": 27563,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27534,
											"end": 27537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27527,
											"end": 27564,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27452,
											"end": 27570,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27452,
											"end": 27570,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27452,
											"end": 27570,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27576,
											"end": 27674,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 27576,
											"end": 27674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27627,
											"end": 27633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27661,
											"end": 27666,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27655,
											"end": 27667,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 27645,
											"end": 27667,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27645,
											"end": 27667,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27576,
											"end": 27674,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27576,
											"end": 27674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27576,
											"end": 27674,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27576,
											"end": 27674,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27763,
											"end": 27774,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27797,
											"end": 27803,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27792,
											"end": 27795,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27785,
											"end": 27804,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27837,
											"end": 27841,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 27832,
											"end": 27835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27828,
											"end": 27842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27813,
											"end": 27842,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27813,
											"end": 27842,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27940,
											"end": 27943,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27968,
											"end": 28006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 28000,
											"end": 28005,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27968,
											"end": 28006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 27968,
											"end": 28006,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27968,
											"end": 28006,
											"name": "tag",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 27968,
											"end": 28006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28022,
											"end": 28092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 28085,
											"end": 28091,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28080,
											"end": 28083,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 28022,
											"end": 28092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 28022,
											"end": 28092,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28022,
											"end": 28092,
											"name": "tag",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 28022,
											"end": 28092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28015,
											"end": 28092,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 28015,
											"end": 28092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28101,
											"end": 28153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 28146,
											"end": 28152,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28141,
											"end": 28144,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 28134,
											"end": 28138,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 28127,
											"end": 28132,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 28123,
											"end": 28139,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28101,
											"end": 28153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 28101,
											"end": 28153,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28101,
											"end": 28153,
											"name": "tag",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 28101,
											"end": 28153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28178,
											"end": 28207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 28200,
											"end": 28206,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28178,
											"end": 28207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 28178,
											"end": 28207,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28178,
											"end": 28207,
											"name": "tag",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 28178,
											"end": 28207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28173,
											"end": 28176,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 28169,
											"end": 28208,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28162,
											"end": 28208,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 28162,
											"end": 28208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27944,
											"end": 28214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28543,
											"end": 28547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28581,
											"end": 28584,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 28570,
											"end": 28579,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28566,
											"end": 28585,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28558,
											"end": 28585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28558,
											"end": 28585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28595,
											"end": 28666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 28663,
											"end": 28664,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28652,
											"end": 28661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 28648,
											"end": 28665,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28639,
											"end": 28645,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 28595,
											"end": 28666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 28595,
											"end": 28666,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28595,
											"end": 28666,
											"name": "tag",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 28595,
											"end": 28666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28676,
											"end": 28748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 28744,
											"end": 28746,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 28733,
											"end": 28742,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 28729,
											"end": 28747,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28720,
											"end": 28726,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 28676,
											"end": 28748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 28676,
											"end": 28748,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28676,
											"end": 28748,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 28676,
											"end": 28748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28795,
											"end": 28804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28789,
											"end": 28793,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28785,
											"end": 28805,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 28780,
											"end": 28782,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 28769,
											"end": 28778,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 28765,
											"end": 28783,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28758,
											"end": 28806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28823,
											"end": 28931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 28926,
											"end": 28930,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28917,
											"end": 28923,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 28823,
											"end": 28931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 28823,
											"end": 28931,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28823,
											"end": 28931,
											"name": "tag",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 28823,
											"end": 28931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28815,
											"end": 28931,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28815,
											"end": 28931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28978,
											"end": 28987,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28972,
											"end": 28976,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28968,
											"end": 28988,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 28963,
											"end": 28965,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 28952,
											"end": 28961,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 28948,
											"end": 28966,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28941,
											"end": 28989,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29006,
											"end": 29114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 29109,
											"end": 29113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29100,
											"end": 29106,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 29006,
											"end": 29114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 29006,
											"end": 29114,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 29006,
											"end": 29114,
											"name": "tag",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 29006,
											"end": 29114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28998,
											"end": 29114,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28998,
											"end": 29114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29162,
											"end": 29171,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29156,
											"end": 29160,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29152,
											"end": 29172,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 29146,
											"end": 29149,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 29135,
											"end": 29144,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 29131,
											"end": 29150,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29124,
											"end": 29173,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29190,
											"end": 29266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 29261,
											"end": 29265,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29252,
											"end": 29258,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 29190,
											"end": 29266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 29190,
											"end": 29266,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 29190,
											"end": 29266,
											"name": "tag",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 29190,
											"end": 29266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29182,
											"end": 29266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29182,
											"end": 29266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29335,
											"end": 29340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29366,
											"end": 29372,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29360,
											"end": 29373,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 29351,
											"end": 29373,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29351,
											"end": 29373,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29382,
											"end": 29414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 29408,
											"end": 29413,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29382,
											"end": 29414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 29382,
											"end": 29414,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 29382,
											"end": 29414,
											"name": "tag",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 29382,
											"end": 29414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29495,
											"end": 29501,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29544,
											"end": 29546,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29532,
											"end": 29541,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29523,
											"end": 29530,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 29519,
											"end": 29542,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 29515,
											"end": 29547,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 29512,
											"end": 29631,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 29512,
											"end": 29631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 29512,
											"end": 29631,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 29550,
											"end": 29629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 29550,
											"end": 29629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 29550,
											"end": 29629,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 29550,
											"end": 29629,
											"name": "tag",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 29550,
											"end": 29629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29512,
											"end": 29631,
											"name": "tag",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 29512,
											"end": 29631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29670,
											"end": 29671,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29695,
											"end": 29758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 29750,
											"end": 29757,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 29741,
											"end": 29747,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29730,
											"end": 29739,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 29726,
											"end": 29748,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29695,
											"end": 29758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 29695,
											"end": 29758,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 29695,
											"end": 29758,
											"name": "tag",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 29695,
											"end": 29758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29685,
											"end": 29758,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29685,
											"end": 29758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29641,
											"end": 29768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29781,
											"end": 29887,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 29781,
											"end": 29887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29825,
											"end": 29833,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29874,
											"end": 29879,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29869,
											"end": 29872,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 29865,
											"end": 29880,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 29844,
											"end": 29880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29844,
											"end": 29880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29781,
											"end": 29887,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29781,
											"end": 29887,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29781,
											"end": 29887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29781,
											"end": 29887,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29893,
											"end": 30076,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 29893,
											"end": 30076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29928,
											"end": 29931,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29966,
											"end": 29967,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 29948,
											"end": 29964,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 29945,
											"end": 29968,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 29942,
											"end": 30070,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 29942,
											"end": 30070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 29942,
											"end": 30070,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 30004,
											"end": 30005,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 30001,
											"end": 30002,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29998,
											"end": 29999,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 29983,
											"end": 30006,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 30026,
											"end": 30060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 30057,
											"end": 30058,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30051,
											"end": 30059,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 30026,
											"end": 30060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 30026,
											"end": 30060,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 30026,
											"end": 30060,
											"name": "tag",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 30026,
											"end": 30060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30019,
											"end": 30060,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30019,
											"end": 30060,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29942,
											"end": 30070,
											"name": "tag",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 29942,
											"end": 30070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29893,
											"end": 30076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29893,
											"end": 30076,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30082,
											"end": 30793,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 30082,
											"end": 30793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30121,
											"end": 30124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30159,
											"end": 30163,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 30141,
											"end": 30157,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 30138,
											"end": 30164,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 30167,
											"end": 30172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 30135,
											"end": 30174,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 30196,
											"end": 30216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 30196,
											"end": 30216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 30196,
											"end": 30216,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 30196,
											"end": 30216,
											"name": "tag",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 30196,
											"end": 30216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30271,
											"end": 30272,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 30253,
											"end": 30269,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 30249,
											"end": 30273,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 30246,
											"end": 30247,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 30240,
											"end": 30244,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30225,
											"end": 30274,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 30304,
											"end": 30308,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 30298,
											"end": 30309,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 30403,
											"end": 30419,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 30396,
											"end": 30400,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 30388,
											"end": 30394,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30384,
											"end": 30401,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30381,
											"end": 30420,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 30348,
											"end": 30366,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30340,
											"end": 30346,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30337,
											"end": 30367,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 30321,
											"end": 30434,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 30318,
											"end": 30464,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 30318,
											"end": 30464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 30318,
											"end": 30464,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 30449,
											"end": 30454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30449,
											"end": 30454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30449,
											"end": 30454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 30449,
											"end": 30454,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 30318,
											"end": 30464,
											"name": "tag",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 30318,
											"end": 30464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30495,
											"end": 30501,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 30489,
											"end": 30493,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30485,
											"end": 30502,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30531,
											"end": 30534,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 30525,
											"end": 30535,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 30558,
											"end": 30576,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30550,
											"end": 30556,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 30547,
											"end": 30577,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 30544,
											"end": 30587,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 30544,
											"end": 30587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 30544,
											"end": 30587,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 30580,
											"end": 30585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30580,
											"end": 30585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30580,
											"end": 30585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30580,
											"end": 30585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30580,
											"end": 30585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 30580,
											"end": 30585,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 30544,
											"end": 30587,
											"name": "tag",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 30544,
											"end": 30587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30628,
											"end": 30634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 30621,
											"end": 30625,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30616,
											"end": 30619,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 30612,
											"end": 30626,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30608,
											"end": 30635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30687,
											"end": 30688,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 30669,
											"end": 30685,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 30665,
											"end": 30689,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 30659,
											"end": 30663,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 30655,
											"end": 30690,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30650,
											"end": 30653,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 30647,
											"end": 30691,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 30644,
											"end": 30701,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 30644,
											"end": 30701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 30644,
											"end": 30701,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 30644,
											"end": 30701,
											"name": "tag",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 30644,
											"end": 30701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30711,
											"end": 30768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 30759,
											"end": 30765,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30753,
											"end": 30757,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30749,
											"end": 30766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30741,
											"end": 30747,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 30737,
											"end": 30767,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30731,
											"end": 30735,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 30711,
											"end": 30768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 30711,
											"end": 30768,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 30711,
											"end": 30768,
											"name": "tag",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 30711,
											"end": 30768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30784,
											"end": 30787,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30777,
											"end": 30787,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 30777,
											"end": 30787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30125,
											"end": 30793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30125,
											"end": 30793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30125,
											"end": 30793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30125,
											"end": 30793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30125,
											"end": 30793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30082,
											"end": 30793,
											"name": "tag",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 30082,
											"end": 30793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30082,
											"end": 30793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30082,
											"end": 30793,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30799,
											"end": 31038,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 30799,
											"end": 31038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30939,
											"end": 30973,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 30935,
											"end": 30936,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30927,
											"end": 30933,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30923,
											"end": 30937,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30916,
											"end": 30974,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31008,
											"end": 31030,
											"name": "PUSH",
											"source": 9,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 31003,
											"end": 31005,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30995,
											"end": 31001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30991,
											"end": 31006,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30984,
											"end": 31031,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30799,
											"end": 31038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30799,
											"end": 31038,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31044,
											"end": 31410,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 31044,
											"end": 31410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31186,
											"end": 31189,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31207,
											"end": 31274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 31271,
											"end": 31273,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 31266,
											"end": 31269,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 31207,
											"end": 31274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 31207,
											"end": 31274,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31207,
											"end": 31274,
											"name": "tag",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 31207,
											"end": 31274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31200,
											"end": 31274,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31200,
											"end": 31274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31283,
											"end": 31376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 31372,
											"end": 31375,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31283,
											"end": 31376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 31283,
											"end": 31376,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31283,
											"end": 31376,
											"name": "tag",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 31283,
											"end": 31376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31401,
											"end": 31403,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 31396,
											"end": 31399,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31392,
											"end": 31404,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31385,
											"end": 31404,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31385,
											"end": 31404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31044,
											"end": 31410,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31044,
											"end": 31410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31044,
											"end": 31410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31044,
											"end": 31410,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31416,
											"end": 31835,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 31416,
											"end": 31835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31582,
											"end": 31586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31620,
											"end": 31622,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 31609,
											"end": 31618,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31605,
											"end": 31623,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31597,
											"end": 31623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31597,
											"end": 31623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31669,
											"end": 31678,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 31663,
											"end": 31667,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 31659,
											"end": 31679,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 31655,
											"end": 31656,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31644,
											"end": 31653,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 31640,
											"end": 31657,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31633,
											"end": 31680,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31697,
											"end": 31828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 31823,
											"end": 31827,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 31697,
											"end": 31828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 31697,
											"end": 31828,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31697,
											"end": 31828,
											"name": "tag",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 31697,
											"end": 31828,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31689,
											"end": 31828,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31689,
											"end": 31828,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31416,
											"end": 31835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31416,
											"end": 31835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31416,
											"end": 31835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31416,
											"end": 31835,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31841,
											"end": 32068,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 31841,
											"end": 32068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31981,
											"end": 32015,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 31977,
											"end": 31978,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31969,
											"end": 31975,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31965,
											"end": 31979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31958,
											"end": 32016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 32050,
											"end": 32060,
											"name": "PUSH",
											"source": 9,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32045,
											"end": 32047,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 32037,
											"end": 32043,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32033,
											"end": 32048,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32026,
											"end": 32061,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31841,
											"end": 32068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31841,
											"end": 32068,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32074,
											"end": 32440,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 32074,
											"end": 32440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32216,
											"end": 32219,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32237,
											"end": 32304,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 32301,
											"end": 32303,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 32296,
											"end": 32299,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 32237,
											"end": 32304,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 32237,
											"end": 32304,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32237,
											"end": 32304,
											"name": "tag",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 32237,
											"end": 32304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32230,
											"end": 32304,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 32230,
											"end": 32304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32313,
											"end": 32406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 32402,
											"end": 32405,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32313,
											"end": 32406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 32313,
											"end": 32406,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32313,
											"end": 32406,
											"name": "tag",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 32313,
											"end": 32406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32431,
											"end": 32433,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 32426,
											"end": 32429,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32422,
											"end": 32434,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32415,
											"end": 32434,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32415,
											"end": 32434,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32074,
											"end": 32440,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 32074,
											"end": 32440,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32074,
											"end": 32440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32074,
											"end": 32440,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32446,
											"end": 32865,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 32446,
											"end": 32865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32612,
											"end": 32616,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32650,
											"end": 32652,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 32639,
											"end": 32648,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32635,
											"end": 32653,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32627,
											"end": 32653,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32627,
											"end": 32653,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32699,
											"end": 32708,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32693,
											"end": 32697,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32689,
											"end": 32709,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 32685,
											"end": 32686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32674,
											"end": 32683,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 32670,
											"end": 32687,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32663,
											"end": 32710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 32727,
											"end": 32858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 32853,
											"end": 32857,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32727,
											"end": 32858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 32727,
											"end": 32858,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32727,
											"end": 32858,
											"name": "tag",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 32727,
											"end": 32858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32719,
											"end": 32858,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32719,
											"end": 32858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32446,
											"end": 32865,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 32446,
											"end": 32865,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32446,
											"end": 32865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32446,
											"end": 32865,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33094,
											"end": 33098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 33132,
											"end": 33135,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 33121,
											"end": 33130,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33117,
											"end": 33136,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 33109,
											"end": 33136,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 33109,
											"end": 33136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33146,
											"end": 33217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 33214,
											"end": 33215,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 33203,
											"end": 33212,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 33199,
											"end": 33216,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 33190,
											"end": 33196,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 33146,
											"end": 33217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 33146,
											"end": 33217,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33146,
											"end": 33217,
											"name": "tag",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 33146,
											"end": 33217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33227,
											"end": 33299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 33295,
											"end": 33297,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 33284,
											"end": 33293,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 33280,
											"end": 33298,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 33271,
											"end": 33277,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 33227,
											"end": 33299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 33227,
											"end": 33299,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33227,
											"end": 33299,
											"name": "tag",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 33227,
											"end": 33299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33309,
											"end": 33381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "593"
										},
										{
											"begin": 33377,
											"end": 33379,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 33366,
											"end": 33375,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 33362,
											"end": 33380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 33353,
											"end": 33359,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 33309,
											"end": 33381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 33309,
											"end": 33381,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33309,
											"end": 33381,
											"name": "tag",
											"source": 9,
											"value": "593"
										},
										{
											"begin": 33309,
											"end": 33381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33391,
											"end": 33463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 33459,
											"end": 33461,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 33448,
											"end": 33457,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 33444,
											"end": 33462,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 33435,
											"end": 33441,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 33391,
											"end": 33463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 33391,
											"end": 33463,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33391,
											"end": 33463,
											"name": "tag",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 33391,
											"end": 33463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33511,
											"end": 33520,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33505,
											"end": 33509,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33501,
											"end": 33521,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 33495,
											"end": 33498,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 33484,
											"end": 33493,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 33480,
											"end": 33499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 33473,
											"end": 33522,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 33539,
											"end": 33615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "595"
										},
										{
											"begin": 33610,
											"end": 33614,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33601,
											"end": 33607,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 33539,
											"end": 33615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 33539,
											"end": 33615,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33539,
											"end": 33615,
											"name": "tag",
											"source": 9,
											"value": "595"
										},
										{
											"begin": 33539,
											"end": 33615,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33531,
											"end": 33615,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 33531,
											"end": 33615,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xbe52adc8ccfd46744b73c19fa294b56f1f0be944c20459591900b1c35f2a1a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad9f276304d134fa20370d9d5356472170032268500d426942dc3592f2c975dc\",\"dweb:/ipfs/QmQYn91kSYkSf9gnf5VHgnpmyZ3DcPLUfGHXQXuvMbaxwh\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf920acc579a6c2067ca587b8d3993f6e737ac54f2dc3c4cd179d8df0e3f351d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://900486cb37c3b173462e4d5929a7df08ef91d9ee544176cfa25189f3b556641e\",\"dweb:/ipfs/QmTMbsipusiSnqiUj9wnPjwdzUALoKhmVGRhhcYn36jGJg\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xaca482b8f27dbab77b82282987d50a280c65f6254f3cac64e68ccd61f55e4822\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d246c370ac1e074a0914bb0ffefddae0b69b051abb88962b4ed402d871311b2\",\"dweb:/ipfs/QmWmHh8LX2D3LP8KeXqjRE2Em4Xf2Ky84UXdtzp6W6ubqA\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x825f445794b1c04301d3a309e53cfc336ec2bb306164ebe06590edc38d2c24ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a14396f1dd8d17b3cf8f7f0b488d90700319d383eb6509e448cf8517901150\",\"dweb:/ipfs/QmUD5P8JYojqtPDitJFByiQAg4zW8VwdA9g7pyikMdJ9Qu\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe\",\"dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x905cd0ecd91d1de79a4679d745b79cf852ca8ccda5d25d1c49c6bd17a5edc0cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dd1601fcd370546d8c06ea1902d7e7364fc490fbf0ebc3004230ef1f5db473c\",\"dweb:/ipfs/Qmb8zbC3TjWFtcuyP3KEEaegMkPcfeKAcPrwzvkAoMR3cZ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf920acc579a6c2067ca587b8d3993f6e737ac54f2dc3c4cd179d8df0e3f351d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://900486cb37c3b173462e4d5929a7df08ef91d9ee544176cfa25189f3b556641e\",\"dweb:/ipfs/QmTMbsipusiSnqiUj9wnPjwdzUALoKhmVGRhhcYn36jGJg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xaca482b8f27dbab77b82282987d50a280c65f6254f3cac64e68ccd61f55e4822\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d246c370ac1e074a0914bb0ffefddae0b69b051abb88962b4ed402d871311b2\",\"dweb:/ipfs/QmWmHh8LX2D3LP8KeXqjRE2Em4Xf2Ky84UXdtzp6W6ubqA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf920acc579a6c2067ca587b8d3993f6e737ac54f2dc3c4cd179d8df0e3f351d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://900486cb37c3b173462e4d5929a7df08ef91d9ee544176cfa25189f3b556641e\",\"dweb:/ipfs/QmTMbsipusiSnqiUj9wnPjwdzUALoKhmVGRhhcYn36jGJg\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x825f445794b1c04301d3a309e53cfc336ec2bb306164ebe06590edc38d2c24ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a14396f1dd8d17b3cf8f7f0b488d90700319d383eb6509e448cf8517901150\",\"dweb:/ipfs/QmUD5P8JYojqtPDitJFByiQAg4zW8VwdA9g7pyikMdJ9Qu\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204afccd13147c9def0af1c0ea42b2ed2ddd65850d4f42598264ebf33b02943c3d64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204afccd13147c9def0af1c0ea42b2ed2ddd65850d4f42598264ebf33b02943c3d64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A 0xFC 0xCD SGT EQ PUSH29 0x9DEF0AF1C0EA42B2ED2DDD65850D4F42598264EBF33B02943C3D64736F PUSH13 0x634300080D0033000000000000 ",
							"sourceMap": "179:7729:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204afccd13147c9def0af1c0ea42b2ed2ddd65850d4f42598264ebf33b02943c3d64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A 0xFC 0xCD SGT EQ PUSH29 0x9DEF0AF1C0EA42B2ED2DDD65850D4F42598264EBF33B02943C3D64736F PUSH13 0x634300080D0033000000000000 ",
							"sourceMap": "179:7729:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204afccd13147c9def0af1c0ea42b2ed2ddd65850d4f42598264ebf33b02943c3d64736f6c634300080d0033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe\",\"dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x905cd0ecd91d1de79a4679d745b79cf852ca8ccda5d25d1c49c6bd17a5edc0cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dd1601fcd370546d8c06ea1902d7e7364fc490fbf0ebc3004230ef1f5db473c\",\"dweb:/ipfs/Qmb8zbC3TjWFtcuyP3KEEaegMkPcfeKAcPrwzvkAoMR3cZ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol": {
				"Credit": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "CToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "IssuePayment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Issue_Credit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RedeemCredit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol\":118:412  contract Credit{... */\n  mstore(0x40, 0x80)\n    /* \"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol\":139:154  constructor(){} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol\":118:412  contract Credit{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol\":118:412  contract Credit{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0bef3bdc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x43c45885\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7137780e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd5a9111f\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol\":336:368  function IssuePayment()public {} */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol\":159:193  uint256 public constant CToken = 0 */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol\":299:331  function RedeemCredit()public {} */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol\":262:294  function Issue_Credit()public {} */\n    tag_6:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol\":336:368  function IssuePayment()public {} */\n    tag_8:\n      jump\t// out\n        /* \"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol\":159:193  uint256 public constant CToken = 0 */\n    tag_10:\n        /* \"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol\":192:193  0 */\n      0x00\n        /* \"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol\":159:193  uint256 public constant CToken = 0 */\n      dup2\n      jump\t// out\n        /* \"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol\":299:331  function RedeemCredit()public {} */\n    tag_14:\n      jump\t// out\n        /* \"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol\":262:294  function Issue_Credit()public {} */\n    tag_16:\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_20:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_21:\n        /* \"#utility.yul\":177:201   */\n      tag_25\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_20\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_12:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_27\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_21\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208d76aa5c3efbbf78540a7a47f201530cc42bf39ab3f14503560627810f1911e664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1635": {
									"entryPoint": null,
									"id": 1635,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060ee8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060465760003560e01c80630bef3bdc14604b57806343c458851460535780637137780e14606d578063d5a9111f146075575b600080fd5b6051607d565b005b6059607f565b60405160649190609f565b60405180910390f35b60736084565b005b607b6086565b005b565b600081565b565b565b6000819050919050565b6099816088565b82525050565b600060208201905060b260008301846092565b9291505056fea26469706673582212208d76aa5c3efbbf78540a7a47f201530cc42bf39ab3f14503560627810f1911e664736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xEE DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x46 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBEF3BDC EQ PUSH1 0x4B JUMPI DUP1 PUSH4 0x43C45885 EQ PUSH1 0x53 JUMPI DUP1 PUSH4 0x7137780E EQ PUSH1 0x6D JUMPI DUP1 PUSH4 0xD5A9111F EQ PUSH1 0x75 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x51 PUSH1 0x7D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x59 PUSH1 0x7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x64 SWAP2 SWAP1 PUSH1 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x73 PUSH1 0x84 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7B PUSH1 0x86 JUMP JUMPDEST STOP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x99 DUP2 PUSH1 0x88 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 PUSH23 0xAA5C3EFBBF78540A7A47F201530CC42BF39AB3F1450356 MOD 0x27 DUP2 0xF NOT GT 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "118:294:8:-:0;;;139:15;;;;;;;;;;118:294;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CToken_1638": {
									"entryPoint": 127,
									"id": 1638,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@IssuePayment_1658": {
									"entryPoint": 125,
									"id": 1658,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Issue_Credit_1650": {
									"entryPoint": 134,
									"id": 1650,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RedeemCredit_1654": {
									"entryPoint": 132,
									"id": 1654,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:9",
														"type": ""
													}
												],
												"src": "7:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:9",
														"type": ""
													}
												],
												"src": "90:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:9",
														"type": ""
													}
												],
												"src": "214:222:9"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060465760003560e01c80630bef3bdc14604b57806343c458851460535780637137780e14606d578063d5a9111f146075575b600080fd5b6051607d565b005b6059607f565b60405160649190609f565b60405180910390f35b60736084565b005b607b6086565b005b565b600081565b565b565b6000819050919050565b6099816088565b82525050565b600060208201905060b260008301846092565b9291505056fea26469706673582212208d76aa5c3efbbf78540a7a47f201530cc42bf39ab3f14503560627810f1911e664736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x46 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBEF3BDC EQ PUSH1 0x4B JUMPI DUP1 PUSH4 0x43C45885 EQ PUSH1 0x53 JUMPI DUP1 PUSH4 0x7137780E EQ PUSH1 0x6D JUMPI DUP1 PUSH4 0xD5A9111F EQ PUSH1 0x75 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x51 PUSH1 0x7D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x59 PUSH1 0x7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x64 SWAP2 SWAP1 PUSH1 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x73 PUSH1 0x84 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7B PUSH1 0x86 JUMP JUMPDEST STOP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x99 DUP2 PUSH1 0x88 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 PUSH23 0xAA5C3EFBBF78540A7A47F201530CC42BF39AB3F1450356 MOD 0x27 DUP2 0xF NOT GT 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "118:294:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;336:32;;;:::i;:::-;;159:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;299:32;;;:::i;:::-;;262;;;:::i;:::-;;336;:::o;159:34::-;192:1;159:34;:::o;299:32::-;:::o;262:::-;:::o;7:77:9:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "47600",
								"executionCost": "99",
								"totalCost": "47699"
							},
							"external": {
								"CToken()": "329",
								"IssuePayment()": "122",
								"Issue_Credit()": "188",
								"RedeemCredit()": "166"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 118,
									"end": 412,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 118,
									"end": 412,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 118,
									"end": 412,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 139,
									"end": 154,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 139,
									"end": 154,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 139,
									"end": 154,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 139,
									"end": 154,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 154,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 139,
									"end": 154,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 154,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 139,
									"end": 154,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 139,
									"end": 154,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 154,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 139,
									"end": 154,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 118,
									"end": 412,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 118,
									"end": 412,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 118,
									"end": 412,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 118,
									"end": 412,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 412,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 118,
									"end": 412,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 412,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208d76aa5c3efbbf78540a7a47f201530cc42bf39ab3f14503560627810f1911e664736f6c634300080d0033",
									".code": [
										{
											"begin": 118,
											"end": 412,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "PUSH",
											"source": 8,
											"value": "BEF3BDC"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "PUSH",
											"source": 8,
											"value": "43C45885"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "PUSH",
											"source": 8,
											"value": "7137780E"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "PUSH",
											"source": 8,
											"value": "D5A9111F"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 412,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 412,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 336,
											"end": 368,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 336,
											"end": 368,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 336,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 336,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 336,
											"end": 368,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 336,
											"end": 368,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 336,
											"end": 368,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 336,
											"end": 368,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 159,
											"end": 193,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 159,
											"end": 193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 159,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 159,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 159,
											"end": 193,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 159,
											"end": 193,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 159,
											"end": 193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 159,
											"end": 193,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 159,
											"end": 193,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 159,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 159,
											"end": 193,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 159,
											"end": 193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 159,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 159,
											"end": 193,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 159,
											"end": 193,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 159,
											"end": 193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 159,
											"end": 193,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 159,
											"end": 193,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 159,
											"end": 193,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 159,
											"end": 193,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 159,
											"end": 193,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 159,
											"end": 193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 159,
											"end": 193,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 299,
											"end": 331,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 299,
											"end": 331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 299,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 299,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 299,
											"end": 331,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 299,
											"end": 331,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 299,
											"end": 331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 299,
											"end": 331,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 262,
											"end": 294,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 262,
											"end": 294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 262,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 262,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 262,
											"end": 294,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 262,
											"end": 294,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 262,
											"end": 294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 262,
											"end": 294,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 336,
											"end": 368,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 336,
											"end": 368,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 336,
											"end": 368,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 159,
											"end": 193,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 159,
											"end": 193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 192,
											"end": 193,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 193,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 159,
											"end": 193,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 299,
											"end": 331,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 299,
											"end": 331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 299,
											"end": 331,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 262,
											"end": 294,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 262,
											"end": 294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 262,
											"end": 294,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"CToken()": "43c45885",
							"IssuePayment()": "0bef3bdc",
							"Issue_Credit()": "d5a9111f",
							"RedeemCredit()": "7137780e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IssuePayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Issue_Credit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RedeemCredit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol\":\"Credit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xbe52adc8ccfd46744b73c19fa294b56f1f0be944c20459591900b1c35f2a1a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad9f276304d134fa20370d9d5356472170032268500d426942dc3592f2c975dc\",\"dweb:/ipfs/QmQYn91kSYkSf9gnf5VHgnpmyZ3DcPLUfGHXQXuvMbaxwh\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf920acc579a6c2067ca587b8d3993f6e737ac54f2dc3c4cd179d8df0e3f351d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://900486cb37c3b173462e4d5929a7df08ef91d9ee544176cfa25189f3b556641e\",\"dweb:/ipfs/QmTMbsipusiSnqiUj9wnPjwdzUALoKhmVGRhhcYn36jGJg\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xaca482b8f27dbab77b82282987d50a280c65f6254f3cac64e68ccd61f55e4822\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d246c370ac1e074a0914bb0ffefddae0b69b051abb88962b4ed402d871311b2\",\"dweb:/ipfs/QmWmHh8LX2D3LP8KeXqjRE2Em4Xf2Ky84UXdtzp6W6ubqA\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x825f445794b1c04301d3a309e53cfc336ec2bb306164ebe06590edc38d2c24ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a14396f1dd8d17b3cf8f7f0b488d90700319d383eb6509e448cf8517901150\",\"dweb:/ipfs/QmUD5P8JYojqtPDitJFByiQAg4zW8VwdA9g7pyikMdJ9Qu\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe\",\"dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x905cd0ecd91d1de79a4679d745b79cf852ca8ccda5d25d1c49c6bd17a5edc0cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dd1601fcd370546d8c06ea1902d7e7364fc490fbf0ebc3004230ef1f5db473c\",\"dweb:/ipfs/Qmb8zbC3TjWFtcuyP3KEEaegMkPcfeKAcPrwzvkAoMR3cZ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]},\"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol\":{\"keccak256\":\"0x277a3641729654caa00bbb918fe2c29ee9167925d66fe69ea56c17a8cb864dc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d8beed3aa38a609440afe775f297b0f1846cd04d53345983100731ca698dca8\",\"dweb:/ipfs/QmUWzDRT5VnwQQNtc5bm89HsrNNQ7qg1iZXzZtp9CpYvHz\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1570
						],
						"Context": [
							1592
						],
						"ERC1155": [
							1095
						],
						"ERC165": [
							1616
						],
						"IERC1155": [
							1217
						],
						"IERC1155MetadataURI": [
							1273
						],
						"IERC1155Receiver": [
							1258
						],
						"IERC165": [
							1628
						]
					},
					"id": 1096,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1218,
							"src": "119:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1259,
							"src": "144:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1274,
							"src": "177:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1571,
							"src": "224:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1593,
							"src": "258:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1617,
							"src": "292:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1592,
										"src": "575:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "575:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1616,
										"src": "584:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "584:6:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1217,
										"src": "592:8:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "592:8:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1273,
										"src": "602:19:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "602:19:0"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "340:214:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1095,
							"linearizedBaseContracts": [
								1095,
								1273,
								1217,
								1616,
								1628,
								1592
							],
							"name": "ERC1155",
							"nameLocation": "564:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 19,
									"libraryName": {
										"id": 17,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1570,
										"src": "634:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "628:26:0",
									"typeName": {
										"id": 18,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "646:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "765:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "709:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 24,
										"keyType": {
											"id": 20,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "717:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "709:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 23,
											"keyType": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "736:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "728:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "747:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "884:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "831:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 30,
										"keyType": {
											"id": 26,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "839:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "831:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 29,
											"keyType": {
												"id": 27,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "858:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "850:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 28,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "869:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1038:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1023:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 32,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1023:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1124:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 40,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "1142:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 39,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "1134:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1134:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1134:13:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1049:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1118:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1104:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 35,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1104:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:20:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:0:0"
									},
									"scope": 1095,
									"src": "1092:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1615,
										1627
									],
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "1329:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1358:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 57,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1217,
																			"src": "1378:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1217_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1217_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 56,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1373:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1373:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1217",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1373:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1358:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 61,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1415:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 63,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1273,
																			"src": "1435:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1273_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1273_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 62,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1430:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1430:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1273",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1430:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1415:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1358:109:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 70,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1507:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 68,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1483:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1095_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1615,
															"src": "1483:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1483:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1358:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 54,
												"id": 73,
												"nodeType": "Return",
												"src": "1339:180:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1160:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1230:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 51,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 49,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1616,
												"src": "1297:6:0"
											},
											{
												"id": 50,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1628,
												"src": "1305:7:0"
											}
										],
										"src": "1288:25:0"
									},
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1255:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1248:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 46,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1248:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1247:20:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1323:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 52,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1323:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:6:0"
									},
									"scope": 1095,
									"src": "1221:305:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1272
									],
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2000:28:0",
										"statements": [
											{
												"expression": {
													"id": 84,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 33,
													"src": "2017:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 83,
												"id": 85,
												"nodeType": "Return",
												"src": "2010:11:0"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "1532:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1934:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 80,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1967:8:0"
									},
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1938:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:9:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1985:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 81,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1985:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1984:15:0"
									},
									"scope": 1095,
									"src": "1925:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1155
									],
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2265:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 99,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "2283:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2302:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2294:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 100,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2294:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2283:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2306:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 98,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2275:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2275:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "2275:77:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 108,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "2369:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 110,
														"indexExpression": {
															"id": 109,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "2379:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2369:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 112,
													"indexExpression": {
														"id": 111,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "2383:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2369:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 97,
												"id": 113,
												"nodeType": "Return",
												"src": "2362:29:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2034:131:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2179:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 94,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2238:8:0"
									},
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2214:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2206:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2188:29:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2256:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:9:0"
									},
									"scope": 1095,
									"src": "2170:228:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1168
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "2728:335:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 130,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "2746:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2746:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 132,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2765:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2765:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2746:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2777:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2738:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2738:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "2738:83:0"
											},
											{
												"assignments": [
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2849:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 178,
														"src": "2832:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 140,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2832:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 141,
															"nodeType": "ArrayTypeName",
															"src": "2832:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 146,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "2879:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2879:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2865:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 143,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2869:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 144,
															"nodeType": "ArrayTypeName",
															"src": "2869:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2865:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2832:63:0"
											},
											{
												"body": {
													"id": 174,
													"nodeType": "Block",
													"src": "2952:74:0",
													"statements": [
														{
															"expression": {
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 161,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 142,
																		"src": "2966:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 163,
																	"indexExpression": {
																		"id": 162,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "2980:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2966:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 165,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 119,
																				"src": "2995:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 167,
																			"indexExpression": {
																				"id": 166,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "3004:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2995:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 168,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 122,
																				"src": "3008:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 170,
																			"indexExpression": {
																				"id": 169,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "3012:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3008:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 164,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "2985:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2985:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2966:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 173,
															"nodeType": "ExpressionStatement",
															"src": "2966:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 154,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "2926:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 155,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2930:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2930:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2926:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"initializationExpression": {
													"assignments": [
														151
													],
													"declarations": [
														{
															"constant": false,
															"id": 151,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2919:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 175,
															"src": "2911:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 150,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2911:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 153,
													"initialValue": {
														"hexValue": "30",
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2911:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2947:3:0",
														"subExpression": {
															"id": 158,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2949:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 160,
													"nodeType": "ExpressionStatement",
													"src": "2947:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2906:120:0"
											},
											{
												"expression": {
													"id": 176,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 142,
													"src": "3043:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 128,
												"id": 177,
												"nodeType": "Return",
												"src": "3036:20:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "2404:146:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2564:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 124,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2680:8:0"
									},
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2596:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2579:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 117,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2579:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 118,
													"nodeType": "ArrayTypeName",
													"src": "2579:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2623:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2606:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 120,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2606:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 121,
													"nodeType": "ArrayTypeName",
													"src": "2606:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2578:49:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2706:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 125,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2706:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 126,
													"nodeType": "ArrayTypeName",
													"src": "2706:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2705:18:0"
									},
									"scope": 1095,
									"src": "2555:508:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1176
									],
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "3215:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 189,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "3244:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 191,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "3258:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "3268:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 188,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "3225:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "3225:52:0"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3069:57:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3140:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 186,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3206:8:0"
									},
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3166:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3158:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3181:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3176:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3176:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:33:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3215:0:0"
									},
									"scope": 1095,
									"src": "3131:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1186
									],
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "3456:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 207,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "3473:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 209,
														"indexExpression": {
															"id": 208,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "3492:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3473:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 211,
													"indexExpression": {
														"id": 210,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "3501:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3473:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 206,
												"id": 212,
												"nodeType": "Return",
												"src": "3466:44:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "3290:56:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3360:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3432:8:0"
									},
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3385:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3377:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3402:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3394:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3376:35:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3450:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3450:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3449:6:0"
									},
									"scope": 1095,
									"src": "3351:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1200
									],
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "3753:220:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 230,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "3784:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 231,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1582,
																		"src": "3792:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3792:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3784:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 235,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 217,
																		"src": "3825:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 236,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1582,
																			"src": "3831:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3831:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 234,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "3808:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3808:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3784:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3858:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3763:148:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "3763:148:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3939:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "3945:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "3949:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 247,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3953:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 248,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3961:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 243,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "3921:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3921:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "3921:45:0"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3523:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3593:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 227,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3744:8:0"
									},
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3627:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3619:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3649:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3641:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3669:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3661:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3689:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3681:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3718:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3705:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3705:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3609:119:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3753:0:0"
									},
									"scope": 1095,
									"src": "3584:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1216
									],
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "4239:236:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 270,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "4270:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 271,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1582,
																		"src": "4278:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4278:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4270:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 275,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "4311:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 276,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1582,
																			"src": "4317:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4317:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 274,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "4294:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4294:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4270:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4344:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4249:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4249:157:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "4249:157:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "4439:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4445:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 286,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "4449:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 287,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4454:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 288,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4463:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 283,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "4416:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4416:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "4416:52:0"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3979:61:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4054:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 267,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4230:8:0"
									},
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4093:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4085:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4115:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4107:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4107:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4144:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4127:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 258,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4127:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 259,
													"nodeType": "ArrayTypeName",
													"src": "4127:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4174:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4157:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 261,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4157:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ArrayTypeName",
													"src": "4157:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4204:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4191:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4191:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:139:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4239:0:0"
									},
									"scope": 1095,
									"src": "4045:430:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "5088:634:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 307,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "5106:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5120:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5112:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 308,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5112:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5112:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5106:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5124:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5098:66:0"
											},
											{
												"assignments": [
													317
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5183:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 385,
														"src": "5175:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 316,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5175:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 320,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 318,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "5194:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5194:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5175:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 322,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5238:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 323,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5248:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 324,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5254:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 326,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "5276:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 325,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "5258:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5258:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 329,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "5299:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 328,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "5281:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5281:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5308:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 321,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "5217:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5217:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "5217:96:0"
											},
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5332:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 385,
														"src": "5324:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 334,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5324:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 341,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 336,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "5346:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 338,
														"indexExpression": {
															"id": 337,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5356:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5346:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 340,
													"indexExpression": {
														"id": 339,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5360:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5346:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5324:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 343,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "5383:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 344,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "5398:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5383:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5406:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5375:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "5375:76:0"
											},
											{
												"id": 359,
												"nodeType": "UncheckedBlock",
												"src": "5461:77:0",
												"statements": [
													{
														"expression": {
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 349,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "5485:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 352,
																	"indexExpression": {
																		"id": 350,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "5495:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5485:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 353,
																"indexExpression": {
																	"id": 351,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "5499:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5485:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 354,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "5507:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 355,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "5521:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5507:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5485:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 358,
														"nodeType": "ExpressionStatement",
														"src": "5485:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 360,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "5547:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 363,
															"indexExpression": {
																"id": 361,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "5557:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5547:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 364,
														"indexExpression": {
															"id": 362,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5561:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5547:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 365,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "5568:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5547:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "5547:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 369,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5605:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5615:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5621:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 372,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5625:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 373,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5629:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 368,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "5590:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5590:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "EmitStatement",
												"src": "5585:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 377,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5678:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5688:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 379,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5694:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5698:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 381,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5702:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 382,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5710:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 376,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "5647:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5647:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "5647:68:0"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "4481:439:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "4934:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4969:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "4961:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4991:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "4983:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5011:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "5003:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5031:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "5023:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5060:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "5047:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5047:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4951:119:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:0"
									},
									"scope": 1095,
									"src": "4925:797:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "6256:857:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 403,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "6274:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6274:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 405,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "6288:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6288:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6274:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6304:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6266:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6266:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "6266:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "6365:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6379:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6371:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 413,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6371:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6371:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6365:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6383:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "6357:66:0"
											},
											{
												"assignments": [
													422
												],
												"declarations": [
													{
														"constant": false,
														"id": 422,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6442:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "6434:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 421,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6434:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 425,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 423,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "6453:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6453:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6434:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 427,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "6497:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "6507:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 429,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "6513:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "6517:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 431,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "6522:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 432,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "6531:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 426,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "6476:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6476:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "6476:60:0"
											},
											{
												"body": {
													"id": 492,
													"nodeType": "Block",
													"src": "6588:370:0",
													"statements": [
														{
															"assignments": [
																447
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 447,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6610:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 492,
																	"src": "6602:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 446,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6602:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 451,
															"initialValue": {
																"baseExpression": {
																	"id": 448,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "6615:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 450,
																"indexExpression": {
																	"id": 449,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "6619:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6615:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6602:19:0"
														},
														{
															"assignments": [
																453
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 453,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6643:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 492,
																	"src": "6635:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 452,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6635:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 457,
															"initialValue": {
																"baseExpression": {
																	"id": 454,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "6652:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 456,
																"indexExpression": {
																	"id": 455,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "6660:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6652:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6635:27:0"
														},
														{
															"assignments": [
																459
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 459,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6685:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 492,
																	"src": "6677:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 458,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6677:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 465,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 460,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "6699:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 462,
																	"indexExpression": {
																		"id": 461,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "6709:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6699:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 464,
																"indexExpression": {
																	"id": 463,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "6713:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6699:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6677:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 467,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 459,
																			"src": "6740:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 468,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 453,
																			"src": "6755:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6740:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6763:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 466,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6732:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6732:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 472,
															"nodeType": "ExpressionStatement",
															"src": "6732:76:0"
														},
														{
															"id": 483,
															"nodeType": "UncheckedBlock",
															"src": "6822:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 473,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "6850:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 476,
																				"indexExpression": {
																					"id": 474,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 447,
																					"src": "6860:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6850:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 477,
																			"indexExpression": {
																				"id": 475,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 389,
																				"src": "6864:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6850:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 478,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 459,
																				"src": "6872:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 479,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 453,
																				"src": "6886:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6872:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6850:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 482,
																	"nodeType": "ExpressionStatement",
																	"src": "6850:42:0"
																}
															]
														},
														{
															"expression": {
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 484,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "6920:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 487,
																		"indexExpression": {
																			"id": 485,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 447,
																			"src": "6930:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6920:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 488,
																	"indexExpression": {
																		"id": 486,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "6934:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6920:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 489,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "6941:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6920:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 491,
															"nodeType": "ExpressionStatement",
															"src": "6920:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 439,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "6567:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 440,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "6571:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6571:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6567:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"initializationExpression": {
													"assignments": [
														436
													],
													"declarations": [
														{
															"constant": false,
															"id": 436,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6560:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 493,
															"src": "6552:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 435,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6552:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 438,
													"initialValue": {
														"hexValue": "30",
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6564:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6552:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6583:3:0",
														"subExpression": {
															"id": 443,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "6585:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 445,
													"nodeType": "ExpressionStatement",
													"src": "6583:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6547:411:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 495,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "6987:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "6997:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "7003:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "7007:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 499,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "7012:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 494,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "6973:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6973:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "EmitStatement",
												"src": "6968:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 503,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7067:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 504,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "7077:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "7083:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "7087:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 507,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "7092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 508,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "7101:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 502,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "7031:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7031:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "7031:75:0"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "5728:335:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6077:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6117:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6109:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6139:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6131:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6168:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6151:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 392,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6151:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 393,
													"nodeType": "ArrayTypeName",
													"src": "6151:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6198:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6181:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 395,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6181:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 396,
													"nodeType": "ArrayTypeName",
													"src": "6181:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6228:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6215:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6215:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6099:139:0"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6256:0:0"
									},
									"scope": 1095,
									"src": "6068:1045:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "7992:30:0",
										"statements": [
											{
												"expression": {
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 518,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "8002:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 519,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "8009:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8002:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "8002:13:0"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "7119:812:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "7945:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "7967:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "7953:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 514,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7953:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7952:22:0"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7992:0:0"
									},
									"scope": 1095,
									"src": "7936:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "8524:424:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 536,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "8542:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8556:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8548:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 537,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8548:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8548:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8542:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8560:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8534:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8534:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "8534:62:0"
											},
											{
												"assignments": [
													546
												],
												"declarations": [
													{
														"constant": false,
														"id": 546,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8615:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "8607:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 545,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8607:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 547,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "8626:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8626:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8607:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 551,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "8670:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8688:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8680:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 552,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8680:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8680:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 556,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "8692:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 558,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "8714:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 557,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "8696:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8696:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 561,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "8737:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 560,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "8719:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8719:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 563,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "8746:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 550,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "8649:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8649:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "8649:102:0"
											},
											{
												"expression": {
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 566,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "8762:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 569,
															"indexExpression": {
																"id": 567,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "8772:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8762:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 570,
														"indexExpression": {
															"id": 568,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "8776:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8762:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 571,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "8783:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8762:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "8762:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 575,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "8819:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8837:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8829:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 576,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8829:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8829:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 580,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "8841:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 581,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "8845:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 582,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "8849:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 574,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "8804:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8804:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "EmitStatement",
												"src": "8799:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 586,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "8898:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8916:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8908:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 587,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8908:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8908:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "8920:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 592,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "8924:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 593,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "8928:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 594,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "8936:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 585,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "8867:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8867:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "8867:74:0"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "8028:362:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8404:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8427:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "8419:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8419:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8447:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "8439:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8467:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "8459:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8496:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "8483:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8409:97:0"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8524:0:0"
									},
									"scope": 1095,
									"src": "8395:553:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "9447:561:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 613,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "9465:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9479:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9471:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 614,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9471:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9471:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9465:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9483:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 612,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9457:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9457:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "9457:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 623,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "9537:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9537:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 625,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "9551:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9551:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9537:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9567:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9529:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9529:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "9529:81:0"
											},
											{
												"assignments": [
													632
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9629:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "9621:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 631,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9621:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 635,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 633,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "9640:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9640:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9621:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 637,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "9684:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9702:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9694:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 638,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9694:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9694:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 642,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "9706:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "9710:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 644,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "9715:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 645,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "9724:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 636,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "9663:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9663:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "9663:66:0"
											},
											{
												"body": {
													"id": 671,
													"nodeType": "Block",
													"src": "9781:60:0",
													"statements": [
														{
															"expression": {
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 659,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "9795:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 664,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 660,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 604,
																				"src": "9805:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 662,
																			"indexExpression": {
																				"id": 661,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "9809:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9805:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9795:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 665,
																	"indexExpression": {
																		"id": 663,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 601,
																		"src": "9813:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9795:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 666,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "9820:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 668,
																	"indexExpression": {
																		"id": 667,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "9828:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9820:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9795:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 670,
															"nodeType": "ExpressionStatement",
															"src": "9795:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 652,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "9760:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 653,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "9764:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9764:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9760:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 672,
												"initializationExpression": {
													"assignments": [
														649
													],
													"declarations": [
														{
															"constant": false,
															"id": 649,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9753:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 672,
															"src": "9745:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 648,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9745:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 651,
													"initialValue": {
														"hexValue": "30",
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9757:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9745:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9776:3:0",
														"subExpression": {
															"id": 656,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "9776:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 658,
													"nodeType": "ExpressionStatement",
													"src": "9776:3:0"
												},
												"nodeType": "ForStatement",
												"src": "9740:101:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 674,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "9870:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9888:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9880:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 675,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9880:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9880:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 679,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "9892:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 680,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "9896:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 681,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "9901:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 673,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "9856:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9856:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "EmitStatement",
												"src": "9851:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 685,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "9956:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9974:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9966:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 686,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9966:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9966:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 690,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "9978:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "9982:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 692,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "9987:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 693,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "9996:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 684,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "9920:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9920:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "9920:81:0"
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "8954:334:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9302:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9330:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "9322:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9359:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "9342:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 602,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9342:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 603,
													"nodeType": "ArrayTypeName",
													"src": "9342:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9389:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "9372:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 605,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9372:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 606,
													"nodeType": "ArrayTypeName",
													"src": "9372:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "9406:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 608,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9312:117:0"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9447:0:0"
									},
									"scope": 1095,
									"src": "9293:715:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "10352:526:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 708,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "10370:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10386:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10378:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 709,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10378:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10378:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10370:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10390:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10362:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10362:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "10362:66:0"
											},
											{
												"assignments": [
													718
												],
												"declarations": [
													{
														"constant": false,
														"id": 718,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10447:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 775,
														"src": "10439:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 717,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10439:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 721,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 719,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "10458:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10458:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10439:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 723,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "10502:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "10512:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10526:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10518:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 725,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10518:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10518:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 730,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "10548:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 729,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "10530:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10530:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 733,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "10571:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 732,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "10553:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10553:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10580:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 722,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "10481:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10481:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "10481:102:0"
											},
											{
												"assignments": [
													739
												],
												"declarations": [
													{
														"constant": false,
														"id": 739,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "10602:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 775,
														"src": "10594:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 738,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10594:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 745,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 740,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "10616:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 742,
														"indexExpression": {
															"id": 741,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "10626:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10616:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 744,
													"indexExpression": {
														"id": 743,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "10630:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10616:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10594:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 747,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "10653:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 748,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "10668:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10653:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10676:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 746,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10645:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10645:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "10645:70:0"
											},
											{
												"id": 763,
												"nodeType": "UncheckedBlock",
												"src": "10725:77:0",
												"statements": [
													{
														"expression": {
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 753,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "10749:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 756,
																	"indexExpression": {
																		"id": 754,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 702,
																		"src": "10759:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10749:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 757,
																"indexExpression": {
																	"id": 755,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 700,
																	"src": "10763:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10749:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 758,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "10771:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 759,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "10785:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10771:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10749:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 762,
														"nodeType": "ExpressionStatement",
														"src": "10749:42:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 765,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "10832:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "10842:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10848:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 767,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10848:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "10860:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 772,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "10864:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 764,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "10817:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10817:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "EmitStatement",
												"src": "10812:59:0"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "10014:229:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10257:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10280:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "10272:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10272:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10302:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "10294:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10322:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "10314:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10314:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10262:72:0"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10352:0:0"
									},
									"scope": 1095,
									"src": "10248:630:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "11201:738:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 789,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "11219:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11235:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11227:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 790,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11227:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11227:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11219:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11239:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 788,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11211:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11211:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "11211:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 799,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "11295:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11295:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 801,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "11309:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11309:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11295:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11325:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 798,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11287:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11287:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "11287:81:0"
											},
											{
												"assignments": [
													808
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11387:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 886,
														"src": "11379:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 807,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11379:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 811,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 809,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "11398:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11398:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11379:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 813,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "11442:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "11452:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11466:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11458:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 815,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11458:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11458:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 819,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "11470:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 820,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "11475:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11484:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 812,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "11421:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11421:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "11421:66:0"
											},
											{
												"body": {
													"id": 873,
													"nodeType": "Block",
													"src": "11539:323:0",
													"statements": [
														{
															"assignments": [
																836
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 836,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "11561:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 873,
																	"src": "11553:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 835,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11553:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 840,
															"initialValue": {
																"baseExpression": {
																	"id": 837,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "11566:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 839,
																"indexExpression": {
																	"id": 838,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "11570:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11566:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11553:19:0"
														},
														{
															"assignments": [
																842
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 842,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "11594:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 873,
																	"src": "11586:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 841,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11586:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 846,
															"initialValue": {
																"baseExpression": {
																	"id": 843,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "11603:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 845,
																"indexExpression": {
																	"id": 844,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "11611:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11603:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11586:27:0"
														},
														{
															"assignments": [
																848
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 848,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "11636:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 873,
																	"src": "11628:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 847,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11628:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 854,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 849,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "11650:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 851,
																	"indexExpression": {
																		"id": 850,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 836,
																		"src": "11660:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11650:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 853,
																"indexExpression": {
																	"id": 852,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "11664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11650:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11628:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 856,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 848,
																			"src": "11691:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 857,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 842,
																			"src": "11706:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11691:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11714:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 855,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11683:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 861,
															"nodeType": "ExpressionStatement",
															"src": "11683:70:0"
														},
														{
															"id": 872,
															"nodeType": "UncheckedBlock",
															"src": "11767:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 862,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "11795:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 865,
																				"indexExpression": {
																					"id": 863,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 836,
																					"src": "11805:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "11795:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 866,
																			"indexExpression": {
																				"id": 864,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 779,
																				"src": "11809:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "11795:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 867,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 848,
																				"src": "11817:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 868,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 842,
																				"src": "11831:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11817:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11795:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 871,
																	"nodeType": "ExpressionStatement",
																	"src": "11795:42:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 828,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "11518:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 829,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "11522:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11522:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11518:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 874,
												"initializationExpression": {
													"assignments": [
														825
													],
													"declarations": [
														{
															"constant": false,
															"id": 825,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11511:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 874,
															"src": "11503:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 824,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11503:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 827,
													"initialValue": {
														"hexValue": "30",
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11515:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11503:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11534:3:0",
														"subExpression": {
															"id": 832,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "11534:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 834,
													"nodeType": "ExpressionStatement",
													"src": "11534:3:0"
												},
												"nodeType": "ForStatement",
												"src": "11498:364:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 876,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "11891:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "11901:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 878,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 882,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "11919:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 883,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "11924:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 875,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "11877:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11877:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "EmitStatement",
												"src": "11872:60:0"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "10884:183:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11081:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11109:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "11101:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11140:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "11123:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 780,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11123:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 781,
													"nodeType": "ArrayTypeName",
													"src": "11123:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11170:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "11153:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 783,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11153:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 784,
													"nodeType": "ArrayTypeName",
													"src": "11153:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11091:92:0"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11201:0:0"
									},
									"scope": 1095,
									"src": "11072:867:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "12197:200:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 898,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "12215:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 899,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "12224:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12215:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12234:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 897,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12207:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12207:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "12207:71:0"
											},
											{
												"expression": {
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 904,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "12288:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 907,
															"indexExpression": {
																"id": 905,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "12307:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12288:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 908,
														"indexExpression": {
															"id": 906,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "12314:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12288:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 909,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "12326:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12288:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "12288:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 913,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "12364:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 914,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "12371:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "12381:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 912,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "12349:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12349:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "EmitStatement",
												"src": "12344:46:0"
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "11945:124:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12083:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12119:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "12111:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12142:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "12134:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12134:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12165:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "12160:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12160:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12101:78:0"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12197:0:0"
									},
									"scope": 1095,
									"src": "12074:323:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "13543:2:0",
										"statements": []
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "12403:923:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13340:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13378:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "13370:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13404:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "13396:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13426:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "13418:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "13455:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "13438:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 927,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13438:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 928,
													"nodeType": "ArrayTypeName",
													"src": "13438:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "13485:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "13468:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 930,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13468:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 931,
													"nodeType": "ArrayTypeName",
													"src": "13468:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13515:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "13502:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 933,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13502:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13360:165:0"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13543:0:0"
									},
									"scope": 1095,
									"src": "13331:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "13744:532:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 953,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "13758:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1293,
														"src": "13758:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13758:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 999,
												"nodeType": "IfStatement",
												"src": "13754:516:0",
												"trueBody": {
													"id": 998,
													"nodeType": "Block",
													"src": "13775:495:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 980,
																		"nodeType": "Block",
																		"src": "13892:184:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 973,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 969,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 967,
																						"src": "13914:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 970,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1258,
																								"src": "13926:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1258_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 971,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1239,
																							"src": "13926:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 972,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "13926:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "13914:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 979,
																				"nodeType": "IfStatement",
																				"src": "13910:152:0",
																				"trueBody": {
																					"id": 978,
																					"nodeType": "Block",
																					"src": "13971:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 975,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14000:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 974,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "13993:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 976,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13993:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 977,
																							"nodeType": "ExpressionStatement",
																							"src": "13993:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 981,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 968,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 967,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "13882:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 981,
																				"src": "13875:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 966,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "13875:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "13874:17:0"
																	},
																	"src": "13866:210:0"
																},
																{
																	"block": {
																		"id": 989,
																		"nodeType": "Block",
																		"src": "14111:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 986,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 983,
																							"src": "14136:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 985,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14129:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 987,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14129:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 988,
																				"nodeType": "ExpressionStatement",
																				"src": "14129:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 990,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 984,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 983,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14103:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 990,
																				"src": "14089:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 982,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "14089:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14088:22:0"
																	},
																	"src": "14077:81:0"
																},
																{
																	"block": {
																		"id": 995,
																		"nodeType": "Block",
																		"src": "14165:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 992,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14190:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 991,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14183:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 993,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14183:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 994,
																				"nodeType": "ExpressionStatement",
																				"src": "14183:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 996,
																	"nodeType": "TryCatchClause",
																	"src": "14159:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 960,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "13832:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 961,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "13842:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 962,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "13848:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 963,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "13852:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 964,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "13860:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 957,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "13810:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 956,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1258,
																			"src": "13793:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1258_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13793:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1258",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1239,
																	"src": "13793:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13793:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 997,
															"nodeType": "TryStatement",
															"src": "13789:471:0"
														}
													]
												}
											}
										]
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13560:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13608:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "13600:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13634:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "13626:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13656:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "13648:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13676:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "13668:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13696:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "13688:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13725:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "13712:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 949,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13712:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13590:145:0"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13744:0:0"
									},
									"scope": 1095,
									"src": "13551:725:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "14500:574:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1018,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "14514:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1293,
														"src": "14514:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14514:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1064,
												"nodeType": "IfStatement",
												"src": "14510:558:0",
												"trueBody": {
													"id": 1063,
													"nodeType": "Block",
													"src": "14531:537:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1045,
																		"nodeType": "Block",
																		"src": "14685:189:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1038,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1034,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1032,
																						"src": "14707:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1035,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1258,
																								"src": "14719:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1258_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1036,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1257,
																							"src": "14719:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1037,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14719:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14707:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1044,
																				"nodeType": "IfStatement",
																				"src": "14703:157:0",
																				"trueBody": {
																					"id": 1043,
																					"nodeType": "Block",
																					"src": "14769:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1040,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14798:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1039,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14791:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1041,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14791:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1042,
																							"nodeType": "ExpressionStatement",
																							"src": "14791:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1046,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1033,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1032,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14662:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1046,
																				"src": "14655:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1031,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14655:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14637:47:0"
																	},
																	"src": "14629:245:0"
																},
																{
																	"block": {
																		"id": 1054,
																		"nodeType": "Block",
																		"src": "14909:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1051,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1048,
																							"src": "14934:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1050,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14927:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1052,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14927:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1053,
																				"nodeType": "ExpressionStatement",
																				"src": "14927:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1055,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1049,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1048,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14901:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1055,
																				"src": "14887:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1047,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "14887:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14886:22:0"
																	},
																	"src": "14875:81:0"
																},
																{
																	"block": {
																		"id": 1060,
																		"nodeType": "Block",
																		"src": "14963:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1057,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14988:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1056,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14981:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1058,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14981:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1059,
																				"nodeType": "ExpressionStatement",
																				"src": "14981:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1061,
																	"nodeType": "TryCatchClause",
																	"src": "14957:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1025,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "14593:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1026,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "14603:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1027,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1010,
																		"src": "14609:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1028,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "14614:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1029,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1015,
																		"src": "14623:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1022,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1007,
																				"src": "14566:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1021,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1258,
																			"src": "14549:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1258_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14549:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1258",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1257,
																	"src": "14549:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14549:79:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1062,
															"nodeType": "TryStatement",
															"src": "14545:513:0"
														}
													]
												}
											}
										]
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14291:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14344:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "14336:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14370:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "14362:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14362:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14392:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "14384:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14421:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "14404:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1008,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14404:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1009,
													"nodeType": "ArrayTypeName",
													"src": "14404:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "14434:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1011,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14434:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1012,
													"nodeType": "ArrayTypeName",
													"src": "14434:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14481:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "14468:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1014,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14468:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14326:165:0"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14500:0:0"
									},
									"scope": 1095,
									"src": "14282:792:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "15164:109:0",
										"statements": [
											{
												"assignments": [
													1078
												],
												"declarations": [
													{
														"constant": false,
														"id": 1078,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "15191:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1093,
														"src": "15174:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1076,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15174:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1077,
															"nodeType": "ArrayTypeName",
															"src": "15174:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1084,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15213:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "15199:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1079,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15203:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1080,
															"nodeType": "ArrayTypeName",
															"src": "15203:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15199:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15174:41:0"
											},
											{
												"expression": {
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1085,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "15225:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1087,
														"indexExpression": {
															"hexValue": "30",
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15231:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15225:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1088,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "15236:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15225:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "15225:18:0"
											},
											{
												"expression": {
													"id": 1091,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1078,
													"src": "15261:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1073,
												"id": 1092,
												"nodeType": "Return",
												"src": "15254:12:0"
											}
										]
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "15089:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "15115:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "15107:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15106:17:0"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "15146:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1070,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1071,
													"nodeType": "ArrayTypeName",
													"src": "15146:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15145:18:0"
									},
									"scope": 1095,
									"src": "15080:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1096,
							"src": "555:14720:0",
							"usedErrors": []
						}
					],
					"src": "94:15182:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1217
						],
						"IERC165": [
							1628
						]
					},
					"id": 1218,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1097,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1098,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1218,
							"sourceUnit": 1629,
							"src": "120:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1100,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1628,
										"src": "357:7:1"
									},
									"id": 1101,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:1"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1099,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:1",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1217,
							"linearizedBaseContracts": [
								1217,
								1628
							],
							"name": "IERC1155",
							"nameLocation": "345:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:1",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1114,
									"name": "TransferSingle",
									"nameLocation": "503:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "518:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "544:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "566:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "586:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "598:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:1"
									},
									"src": "497:116:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:1",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1129,
									"name": "TransferBatch",
									"nameLocation": "774:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "797:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "831:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "861:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "889:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1122,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1123,
													"nodeType": "ArrayTypeName",
													"src": "889:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "912:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1125,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1126,
													"nodeType": "ArrayTypeName",
													"src": "912:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:1"
									},
									"src": "768:167:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:1",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1138,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "1114:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "1139:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "1165:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1135,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:1"
									},
									"src": "1093:87:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:1",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1145,
									"name": "URI",
									"nameLocation": "1540:3:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "1544:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1140,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "1558:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:1"
									},
									"src": "1534:44:1"
								},
								{
									"documentation": {
										"id": 1146,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:1",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "1781:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "1798:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:1"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "1833:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:1"
									},
									"scope": 1217,
									"src": "1762:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "2065:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1157,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1158,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "2094:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1160,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1161,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:1"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "2165:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1164,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1165,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:1"
									},
									"scope": 1217,
									"src": "2041:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:1",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "2469:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "2487:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1172,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:1"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:1"
									},
									"scope": 1217,
									"src": "2442:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:1",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "2683:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "2700:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:1"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "2741:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:1"
									},
									"scope": 1217,
									"src": "2657:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "3352:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "3374:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "3394:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "3414:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "3438:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1196,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:1"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:1"
									},
									"scope": 1217,
									"src": "3317:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "3914:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "3936:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "3956:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1206,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1207,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "3988:26:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1209,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1210,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "4024:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1212,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:1"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:1"
									},
									"scope": 1217,
									"src": "3874:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1218,
							"src": "335:3726:1",
							"usedErrors": []
						}
					],
					"src": "95:3967:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1258
						],
						"IERC165": [
							1628
						]
					},
					"id": 1259,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1219,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1220,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1259,
							"sourceUnit": 1629,
							"src": "128:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1222,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1628,
										"src": "247:7:2"
									},
									"id": 1223,
									"nodeType": "InheritanceSpecifier",
									"src": "247:7:2"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1221,
								"nodeType": "StructuredDocumentation",
								"src": "177:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1258,
							"linearizedBaseContracts": [
								1258,
								1628
							],
							"name": "IERC1155Receiver",
							"nameLocation": "227:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "261:816:2",
										"text": "@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1091:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1126:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1118:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1152:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1144:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1174:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1166:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1194:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1186:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1224:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1209:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1209:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:126:2"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1253:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1253:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1252:8:2"
									},
									"scope": 1258,
									"src": "1082:179:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "1267:977:2",
										"text": "@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2258:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2298:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2290:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2316:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2357:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2338:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1245,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2338:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1246,
													"nodeType": "ArrayTypeName",
													"src": "2338:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2389:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2370:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1248,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2370:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1249,
													"nodeType": "ArrayTypeName",
													"src": "2370:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2405:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1251,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2405:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:150:2"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2449:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1254,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2449:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:8:2"
									},
									"scope": 1258,
									"src": "2249:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1259,
							"src": "217:2242:2",
							"usedErrors": []
						}
					],
					"src": "103:2357:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1217
						],
						"IERC1155MetadataURI": [
							1273
						],
						"IERC165": [
							1628
						]
					},
					"id": 1274,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1260,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1261,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1274,
							"sourceUnit": 1218,
							"src": "142:25:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1263,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1217,
										"src": "397:8:3"
									},
									"id": 1264,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:3"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1262,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:3",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1273,
							"linearizedBaseContracts": [
								1273,
								1217,
								1628
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:3",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "622:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:3"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "657:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1269,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:3"
									},
									"scope": 1273,
									"src": "609:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1274,
							"src": "364:310:3",
							"usedErrors": []
						}
					],
					"src": "117:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1570
						]
					},
					"id": 1571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1275,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1276,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1570,
							"linearizedBaseContracts": [
								1570
							],
							"name": "Address",
							"nameLocation": "187:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "837:311:4",
										"statements": [
											{
												"assignments": [
													1285
												],
												"declarations": [
													{
														"constant": false,
														"id": 1285,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1292,
														"src": "1034:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1284,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1286,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1279,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:4",
														"valueSize": 1
													},
													{
														"declaration": 1285,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:4",
														"valueSize": 1
													}
												],
												"id": 1287,
												"nodeType": "InlineAssembly",
												"src": "1056:61:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1288,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "1133:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1283,
												"id": 1291,
												"nodeType": "Return",
												"src": "1126:15:4"
											}
										]
									},
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "791:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:4"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "831:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:4"
									},
									"scope": 1570,
									"src": "771:377:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "2136:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1304,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1570",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1570",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1302,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1307,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1298,
																"src": "2179:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:4"
											},
											{
												"assignments": [
													1313,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1313,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "2231:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1312,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1320,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1314,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "2249:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1316,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1298,
																"src": "2271:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1322,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "2300:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1321,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:4"
											}
										]
									},
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2084:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2111:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:4"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:4"
									},
									"scope": 1570,
									"src": "2065:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "3208:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1338,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "3238:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1339,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "3246:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1337,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1344,
															1364
														],
														"referencedDeclaration": 1364,
														"src": "3225:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1336,
												"id": 1342,
												"nodeType": "Return",
												"src": "3218:67:4"
											}
										]
									},
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "3141:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "3157:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1331,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:4"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "3194:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1334,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:4"
									},
									"scope": 1570,
									"src": "3119:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "3661:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1357,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "3700:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1358,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "3708:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1360,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "3717:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1356,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1384,
															1434
														],
														"referencedDeclaration": 1434,
														"src": "3678:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1355,
												"id": 1362,
												"nodeType": "Return",
												"src": "3671:59:4"
											}
										]
									},
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "3545:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "3569:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "3596:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1350,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:4"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "3647:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1353,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:4"
									},
									"scope": 1570,
									"src": "3514:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "4242:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1377,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "4281:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1378,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "4289:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1379,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "4295:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1376,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1384,
															1434
														],
														"referencedDeclaration": 1434,
														"src": "4259:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1375,
												"id": 1382,
												"nodeType": "Return",
												"src": "4252:94:4"
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "4139:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "4163:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "4190:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:4"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "4228:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1373,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:4"
									},
									"scope": 1570,
									"src": "4099:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "4780:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1401,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1570",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1570",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1399,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1404,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "4823:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1411,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1387,
																	"src": "4900:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1410,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "4889:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1415,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:4"
											},
											{
												"assignments": [
													1417,
													1419
												],
												"declarations": [
													{
														"constant": false,
														"id": 1417,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1433,
														"src": "4953:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1416,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1419,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1433,
														"src": "4967:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1418,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1426,
												"initialValue": {
													"arguments": [
														{
															"id": 1424,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "5020:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1420,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1387,
																"src": "4994:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1422,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "5013:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1428,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "5059:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1429,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "5068:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1430,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "5080:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1427,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "5042:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1397,
												"id": 1432,
												"nodeType": "Return",
												"src": "5035:58:4"
											}
										]
									},
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "4641:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "4665:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1388,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "4692:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "4715:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1392,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:4"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "4766:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1395,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:4"
									},
									"scope": 1570,
									"src": "4601:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1450,
										"nodeType": "Block",
										"src": "5377:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1445,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "5413:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1446,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "5421:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1444,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1451,
															1486
														],
														"referencedDeclaration": 1486,
														"src": "5394:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1443,
												"id": 1449,
												"nodeType": "Return",
												"src": "5387:80:4"
											}
										]
									},
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "5305:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "5321:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:4"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "5363:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1441,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:4"
									},
									"scope": 1570,
									"src": "5277:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "5816:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1465,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1454,
																	"src": "5845:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1464,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "5834:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1463,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1469,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:4"
											},
											{
												"assignments": [
													1471,
													1473
												],
												"declarations": [
													{
														"constant": false,
														"id": 1471,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1485,
														"src": "5905:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1470,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1473,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1485,
														"src": "5919:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1472,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1478,
												"initialValue": {
													"arguments": [
														{
															"id": 1476,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "5964:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1474,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "5946:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1480,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "6003:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1481,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "6012:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1482,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "6024:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1479,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "5986:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1462,
												"id": 1484,
												"nodeType": "Return",
												"src": "5979:58:4"
											}
										]
									},
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "5695:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "5719:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "5746:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1457,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:4"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "5802:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1460,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:4"
									},
									"scope": 1570,
									"src": "5658:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "6320:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1497,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "6358:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1498,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "6366:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1496,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1503,
															1538
														],
														"referencedDeclaration": 1538,
														"src": "6337:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1495,
												"id": 1501,
												"nodeType": "Return",
												"src": "6330:84:4"
											}
										]
									},
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "6253:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "6269:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:4"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "6306:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:4"
									},
									"scope": 1570,
									"src": "6223:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "6762:232:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1517,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "6791:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1516,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "6780:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:4"
											},
											{
												"assignments": [
													1523,
													1525
												],
												"declarations": [
													{
														"constant": false,
														"id": 1523,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "6853:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1522,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1525,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "6867:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1524,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1530,
												"initialValue": {
													"arguments": [
														{
															"id": 1528,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "6914:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1526,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "6894:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1532,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "6953:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1533,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "6962:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1534,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "6974:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1531,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "6936:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1514,
												"id": 1536,
												"nodeType": "Return",
												"src": "6929:58:4"
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "6646:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "6670:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "6697:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1509,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:4"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "6748:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1512,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:4"
									},
									"scope": 1570,
									"src": "6607:387:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1568,
										"nodeType": "Block",
										"src": "7374:532:4",
										"statements": [
											{
												"condition": {
													"id": 1550,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1541,
													"src": "7388:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1566,
													"nodeType": "Block",
													"src": "7445:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1554,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1543,
																		"src": "7529:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1564,
																"nodeType": "Block",
																"src": "7837:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1561,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1545,
																					"src": "7862:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1560,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1563,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:4"
																	}
																]
															},
															"id": 1565,
															"nodeType": "IfStatement",
															"src": "7525:365:4",
															"trueBody": {
																"id": 1559,
																"nodeType": "Block",
																"src": "7552:279:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:4"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1543,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1543,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1558,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 1567,
												"nodeType": "IfStatement",
												"src": "7384:516:4",
												"trueBody": {
													"id": 1553,
													"nodeType": "Block",
													"src": "7397:42:4",
													"statements": [
														{
															"expression": {
																"id": 1551,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1543,
																"src": "7418:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1549,
															"id": 1552,
															"nodeType": "Return",
															"src": "7411:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "7249:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1540,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "7271:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1542,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "7304:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1544,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:4"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "7360:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:4"
									},
									"scope": 1570,
									"src": "7214:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1571,
							"src": "179:7729:4",
							"usedErrors": []
						}
					],
					"src": "86:7823:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1592
						]
					},
					"id": 1593,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1573,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1592,
							"linearizedBaseContracts": [
								1592
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1578,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1577,
												"id": 1580,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 1582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 1592,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1587,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1586,
												"id": 1589,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 1592,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1593,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1616
						],
						"IERC165": [
							1628
						]
					},
					"id": 1617,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1594,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1595,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1617,
							"sourceUnit": 1629,
							"src": "124:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1597,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1628,
										"src": "754:7:6"
									},
									"id": 1598,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:6"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1596,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1616,
							"linearizedBaseContracts": [
								1616,
								1628
							],
							"name": "ERC165",
							"nameLocation": "744:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1627
									],
									"body": {
										"id": 1614,
										"nodeType": "Block",
										"src": "920:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1607,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "937:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1609,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1628,
																	"src": "957:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1628_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1628_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1608,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1628",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1611,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1606,
												"id": 1613,
												"nodeType": "Return",
												"src": "930:47:6"
											}
										]
									},
									"documentation": {
										"id": 1599,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1603,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:6"
									},
									"parameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "856:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1600,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:6"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "914:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1604,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:6"
									},
									"scope": 1616,
									"src": "829:155:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1617,
							"src": "726:260:6",
							"usedErrors": []
						}
					],
					"src": "99:888:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1628
						]
					},
					"id": 1629,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1618,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1619,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1628,
							"linearizedBaseContracts": [
								1628
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1627,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1621,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1624,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 1628,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1629,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol": {
				"ast": {
					"absolutePath": "Documents/GitHub/XRC-Credit/contracts/XRC-Credit.sol",
					"exportedSymbols": {
						"Address": [
							1570
						],
						"Context": [
							1592
						],
						"Credit": [
							1659
						],
						"ERC1155": [
							1095
						],
						"ERC165": [
							1616
						],
						"IERC1155": [
							1217
						],
						"IERC1155MetadataURI": [
							1273
						],
						"IERC1155Receiver": [
							1258
						],
						"IERC165": [
							1628
						]
					},
					"id": 1660,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1630,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 1631,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1660,
							"sourceUnit": 1096,
							"src": "57:59:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Credit",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1659,
							"linearizedBaseContracts": [
								1659
							],
							"name": "Credit",
							"nameLocation": "127:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "152:2:8",
										"statements": []
									},
									"id": 1635,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "150:2:8"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "152:0:8"
									},
									"scope": 1659,
									"src": "139:15:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "43c45885",
									"id": 1638,
									"mutability": "constant",
									"name": "CToken",
									"nameLocation": "183:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1659,
									"src": "159:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1636,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "159:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1637,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "192:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1641,
										"nodeType": "Block",
										"src": "217:10:8",
										"statements": [
											{
												"id": 1640,
												"nodeType": "PlaceholderStatement",
												"src": "223:1:8"
											}
										]
									},
									"id": 1642,
									"name": "OnlyCreditor",
									"nameLocation": "205:12:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "217:0:8"
									},
									"src": "196:31:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "247:10:8",
										"statements": [
											{
												"id": 1644,
												"nodeType": "PlaceholderStatement",
												"src": "253:1:8"
											}
										]
									},
									"id": 1646,
									"name": "OnlyDebtor",
									"nameLocation": "237:10:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "247:0:8"
									},
									"src": "228:29:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "292:2:8",
										"statements": []
									},
									"functionSelector": "d5a9111f",
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Issue_Credit",
									"nameLocation": "271:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "283:2:8"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:0:8"
									},
									"scope": 1659,
									"src": "262:32:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "329:2:8",
										"statements": []
									},
									"functionSelector": "7137780e",
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "RedeemCredit",
									"nameLocation": "308:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "320:2:8"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "329:0:8"
									},
									"scope": 1659,
									"src": "299:32:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "366:2:8",
										"statements": []
									},
									"functionSelector": "0bef3bdc",
									"id": 1658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "IssuePayment",
									"nameLocation": "345:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "357:2:8"
									},
									"returnParameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "366:0:8"
									},
									"scope": 1659,
									"src": "336:32:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1660,
							"src": "118:294:8",
							"usedErrors": []
						}
					],
					"src": "0:412:8"
				},
				"id": 8
			}
		}
	}
}